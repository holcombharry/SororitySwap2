{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/TopbarContainer/TopbarContainer.js\";\nimport React from 'react';\nimport { array, bool, func, number, object, shape, string } from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { propTypes } from '../../util/types';\nimport { sendVerificationEmail, hasCurrentUserErrors } from '../../ducks/user.duck';\nimport { logout, authenticationInProgress } from '../../ducks/Auth.duck';\nimport { manageDisableScrolling } from '../../ducks/UI.duck';\nimport { Topbar } from '../../components';\nexport const TopbarContainerComponent = props => {\n  const {\n    authInProgress,\n    currentPage,\n    currentSearchParams,\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    history,\n    isAuthenticated,\n    authScopes,\n    hasGenericError,\n    location,\n    notificationCount,\n    onLogout,\n    onManageDisableScrolling,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    onResendVerificationEmail,\n    ...rest\n  } = props;\n  return /*#__PURE__*/React.createElement(Topbar, Object.assign({\n    authInProgress: authInProgress,\n    currentPage: currentPage,\n    currentSearchParams: currentSearchParams,\n    currentUser: currentUser,\n    currentUserHasListings: currentUserHasListings,\n    currentUserHasOrders: currentUserHasOrders,\n    history: history,\n    isAuthenticated: isAuthenticated,\n    authScopes: authScopes,\n    location: location,\n    notificationCount: notificationCount,\n    onLogout: onLogout,\n    onManageDisableScrolling: onManageDisableScrolling,\n    onResendVerificationEmail: onResendVerificationEmail,\n    sendVerificationEmailInProgress: sendVerificationEmailInProgress,\n    sendVerificationEmailError: sendVerificationEmailError,\n    showGenericError: hasGenericError\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }));\n};\n_c = TopbarContainerComponent;\nTopbarContainerComponent.defaultProps = {\n  currentPage: null,\n  currentSearchParams: null,\n  currentUser: null,\n  currentUserHasOrders: null,\n  notificationCount: 0,\n  sendVerificationEmailError: null,\n  authScopes: null\n};\nTopbarContainerComponent.propTypes = {\n  authInProgress: bool.isRequired,\n  currentPage: string,\n  currentSearchParams: object,\n  currentUser: propTypes.currentUser,\n  currentUserHasListings: bool.isRequired,\n  currentUserHasOrders: bool,\n  isAuthenticated: bool.isRequired,\n  authScopes: array,\n  notificationCount: number,\n  onLogout: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  hasGenericError: bool.isRequired,\n  // from withRouter\n  history: shape({\n    push: func.isRequired\n  }).isRequired,\n  location: shape({\n    state: object\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs isAuthenticated\n  const {\n    isAuthenticated,\n    logoutError,\n    authScopes\n  } = state.Auth; // Topbar needs user info.\n\n  const {\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    currentUserNotificationCount: notificationCount,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError\n  } = state.user;\n  const hasGenericError = !!(logoutError || hasCurrentUserErrors(state));\n  return {\n    authInProgress: authenticationInProgress(state),\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    notificationCount,\n    isAuthenticated,\n    authScopes,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    hasGenericError\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onLogout: historyPush => dispatch(logout(historyPush)),\n  onManageDisableScrolling: (componentId, disableScrolling) => dispatch(manageDisableScrolling(componentId, disableScrolling)),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail())\n}); // Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\n\n\nconst TopbarContainer = compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(TopbarContainerComponent);\nexport default TopbarContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopbarContainerComponent\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/TopbarContainer/TopbarContainer.js"],"names":["React","array","bool","func","number","object","shape","string","compose","connect","withRouter","propTypes","sendVerificationEmail","hasCurrentUserErrors","logout","authenticationInProgress","manageDisableScrolling","Topbar","TopbarContainerComponent","props","authInProgress","currentPage","currentSearchParams","currentUser","currentUserHasListings","currentUserHasOrders","history","isAuthenticated","authScopes","hasGenericError","location","notificationCount","onLogout","onManageDisableScrolling","sendVerificationEmailInProgress","sendVerificationEmailError","onResendVerificationEmail","rest","defaultProps","isRequired","error","push","state","mapStateToProps","logoutError","Auth","currentUserNotificationCount","user","mapDispatchToProps","dispatch","historyPush","componentId","disableScrolling","TopbarContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { array, bool, func, number, object, shape, string } from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { propTypes } from '../../util/types';\nimport { sendVerificationEmail, hasCurrentUserErrors } from '../../ducks/user.duck';\nimport { logout, authenticationInProgress } from '../../ducks/Auth.duck';\nimport { manageDisableScrolling } from '../../ducks/UI.duck';\nimport { Topbar } from '../../components';\n\nexport const TopbarContainerComponent = props => {\n  const {\n    authInProgress,\n    currentPage,\n    currentSearchParams,\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    history,\n    isAuthenticated,\n    authScopes,\n    hasGenericError,\n    location,\n    notificationCount,\n    onLogout,\n    onManageDisableScrolling,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    onResendVerificationEmail,\n    ...rest\n  } = props;\n\n  return (\n    <Topbar\n      authInProgress={authInProgress}\n      currentPage={currentPage}\n      currentSearchParams={currentSearchParams}\n      currentUser={currentUser}\n      currentUserHasListings={currentUserHasListings}\n      currentUserHasOrders={currentUserHasOrders}\n      history={history}\n      isAuthenticated={isAuthenticated}\n      authScopes={authScopes}\n      location={location}\n      notificationCount={notificationCount}\n      onLogout={onLogout}\n      onManageDisableScrolling={onManageDisableScrolling}\n      onResendVerificationEmail={onResendVerificationEmail}\n      sendVerificationEmailInProgress={sendVerificationEmailInProgress}\n      sendVerificationEmailError={sendVerificationEmailError}\n      showGenericError={hasGenericError}\n      {...rest}\n    />\n  );\n};\n\nTopbarContainerComponent.defaultProps = {\n  currentPage: null,\n  currentSearchParams: null,\n  currentUser: null,\n  currentUserHasOrders: null,\n  notificationCount: 0,\n  sendVerificationEmailError: null,\n  authScopes: null,\n};\n\nTopbarContainerComponent.propTypes = {\n  authInProgress: bool.isRequired,\n  currentPage: string,\n  currentSearchParams: object,\n  currentUser: propTypes.currentUser,\n  currentUserHasListings: bool.isRequired,\n  currentUserHasOrders: bool,\n  isAuthenticated: bool.isRequired,\n  authScopes: array,\n  notificationCount: number,\n  onLogout: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  hasGenericError: bool.isRequired,\n\n  // from withRouter\n  history: shape({\n    push: func.isRequired,\n  }).isRequired,\n  location: shape({ state: object }).isRequired,\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs isAuthenticated\n  const { isAuthenticated, logoutError, authScopes } = state.Auth;\n  // Topbar needs user info.\n  const {\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    currentUserNotificationCount: notificationCount,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n  } = state.user;\n  const hasGenericError = !!(logoutError || hasCurrentUserErrors(state));\n  return {\n    authInProgress: authenticationInProgress(state),\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    notificationCount,\n    isAuthenticated,\n    authScopes,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    hasGenericError,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onLogout: historyPush => dispatch(logout(historyPush)),\n  onManageDisableScrolling: (componentId, disableScrolling) =>\n    dispatch(manageDisableScrolling(componentId, disableScrolling)),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\n});\n\n// Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\nconst TopbarContainer = compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(TopbarContainerComponent);\n\nexport default TopbarContainer;\n"]},"metadata":{},"sourceType":"module"}