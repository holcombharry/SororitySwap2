{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/FieldDateRangeInput/DateRangeInput.js\";\n\n/**\n * DateRangeInput wraps DateRangePicker from React-dates and gives a list of all default props we use.\n * Styles for DateRangePicker can be found from 'public/reactDates.css'.\n *\n * N.B. *isOutsideRange* in defaultProps is defining what dates are available to booking.\n */\nimport React, { Component } from 'react';\nimport { bool, func, instanceOf, oneOf, shape, string, arrayOf } from 'prop-types';\nimport { DateRangePicker, isInclusivelyAfterDay, isInclusivelyBeforeDay } from 'react-dates';\nimport { intlShape, injectIntl } from '../../util/reactIntl';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { START_DATE, END_DATE } from '../../util/dates';\nimport { LINE_ITEM_DAY, propTypes } from '../../util/types';\nimport config from '../../config';\nimport { isDayBlockedFn, isOutsideRangeFn, isBlockedBetween, apiEndDateToPickerDate, pickerEndDateToApiDate } from './DateRangeInput.helpers';\nimport { IconArrowHead } from '../../components';\nimport css from './DateRangeInput.module.css';\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const ANCHOR_LEFT = 'left'; // Since final-form tracks the onBlur event for marking the field as\n// touched (which triggers possible error validation rendering), only\n// trigger the event asynchronously when no other input within this\n// component has received focus.\n//\n// This prevents showing the validation error when the user selects a\n// value and moves on to another input within this component.\n\nconst BLUR_TIMEOUT = 100; // IconArrowHead component might not be defined if exposed directly to the file.\n// This component is called before IconArrowHead component in components/index.js\n\nconst PrevIcon = props => /*#__PURE__*/React.createElement(IconArrowHead, Object.assign({}, props, {\n  direction: \"left\",\n  rootClassName: css.arrowIcon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}));\n\n_c = PrevIcon;\n\nconst NextIcon = props => /*#__PURE__*/React.createElement(IconArrowHead, Object.assign({}, props, {\n  direction: \"right\",\n  rootClassName: css.arrowIcon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }\n})); // Possible configuration options of React-dates\n\n\n_c2 = NextIcon;\nconst defaultProps = {\n  initialDates: null,\n  // Possible initial date passed for the component\n  value: null,\n  // Value should keep track of selected date.\n  // input related props\n  startDateId: 'startDate',\n  endDateId: 'endDate',\n  startDatePlaceholderText: null,\n  // Handled inside component\n  endDatePlaceholderText: null,\n  // Handled inside component\n  disabled: false,\n  required: false,\n  readOnly: false,\n  screenReaderInputMessage: null,\n  // Handled inside component\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customArrowIcon: /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }\n  }),\n  customInputIcon: null,\n  customCloseIcon: null,\n  noBorder: true,\n  block: false,\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  appendToBody: false,\n  disableScroll: false,\n  daySize: 38,\n  isRTL: false,\n  initialVisibleMonth: null,\n  firstDayOfWeek: config.i18n.firstDayOfWeek,\n  numberOfMonths: 1,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  renderCalendarInfo: null,\n  hideKeyboardShortcutsPanel: true,\n  // navigation related props\n  navPrev: /*#__PURE__*/React.createElement(PrevIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }\n  }),\n  navNext: /*#__PURE__*/React.createElement(NextIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }\n  }),\n\n  onPrevMonthClick() {},\n\n  onNextMonthClick() {},\n\n  transitionDuration: 200,\n  // milliseconds between next month changes etc.\n  renderCalendarDay: undefined,\n  // If undefined, renders react-dates/lib/components/CalendarDay\n  // day presentation and interaction related props\n  renderDayContents: day => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"renderedDay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    }, day.format('D'));\n  },\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  // outside range -><- today ... today+available days -1 -><- outside range\n  isOutsideRange: day => {\n    const endOfRange = config.dayCountAvailableForBooking - 1;\n    return !isInclusivelyAfterDay(day, moment()) || !isInclusivelyBeforeDay(day, moment().add(endOfRange, 'days'));\n  },\n  isDayHighlighted: () => {},\n  // Internationalization props\n  // Multilocale support can be achieved with displayFormat like moment.localeData.longDateFormat('L')\n  // https://momentjs.com/\n  displayFormat: 'ddd, MMM D',\n  monthFormat: 'MMMM YYYY',\n  weekDayFormat: 'dd',\n  phrases: {\n    closeDatePicker: null,\n    // Handled inside component\n    clearDate: null // Handled inside component\n\n  }\n};\n\nclass DateRangeInputComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focusedInput: null,\n      currentStartDate: null\n    };\n    this.blurTimeoutId = null;\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Update focusedInput in case a new value for it is\n    // passed in the props. This may occur if the focus\n    // is manually set to the date picker.\n    if (this.props.focusedInput && this.props.focusedInput !== prevProps.focusedInput) {\n      this.setState({\n        focusedInput: this.props.focusedInput\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.blurTimeoutId);\n  }\n\n  onDatesChange(dates) {\n    const {\n      unitType,\n      timeSlots\n    } = this.props;\n    const {\n      startDate,\n      endDate\n    } = dates; // both dates are selected, a new start date before the previous start\n    // date is selected\n\n    const startDateUpdated = timeSlots && startDate && endDate && this.state.currentStartDate && startDate.isBefore(this.state.currentStartDate); // clear the end date in case a blocked date can be found\n    // between previous start date and new start date\n\n    const clearEndDate = startDateUpdated ? isBlockedBetween(timeSlots, startDate, moment(this.state.currentStartDate).add(1, 'days')) : false;\n    const startDateAsDate = startDate instanceof moment ? startDate.toDate() : null;\n    const endDateAsDate = clearEndDate ? null : pickerEndDateToApiDate(unitType, endDate);\n    this.setState(() => ({\n      currentStartDate: startDateAsDate\n    }));\n    this.props.onChange({\n      startDate: startDateAsDate,\n      endDate: endDateAsDate\n    });\n  }\n\n  onFocusChange(focusedInput) {\n    // DateRangePicker requires 'onFocusChange' function and 'focusedInput'\n    // but Fields of React-Form deals with onFocus & onBlur instead\n    this.setState({\n      focusedInput\n    });\n\n    if (focusedInput) {\n      window.clearTimeout(this.blurTimeoutId);\n      this.props.onFocus(focusedInput);\n    } else {\n      window.clearTimeout(this.blurTimeoutId);\n      this.blurTimeoutId = window.setTimeout(() => {\n        this.props.onBlur();\n      }, BLUR_TIMEOUT);\n    }\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      className,\n      unitType,\n      initialDates,\n      intl,\n      name,\n      startDatePlaceholderText,\n      endDatePlaceholderText,\n      onBlur,\n      onChange,\n      onFocus,\n      phrases,\n      screenReaderInputMessage,\n      useMobileMargins,\n      value,\n      children,\n      render,\n      timeSlots,\n      ...datePickerProps\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    const isDaily = unitType === LINE_ITEM_DAY;\n    const initialStartMoment = initialDates ? moment(initialDates.startDate) : null;\n    const initialEndMoment = initialDates ? moment(initialDates.endDate) : null;\n    const startDate = value && value.startDate instanceof Date ? moment(value.startDate) : initialStartMoment;\n    const endDate = apiEndDateToPickerDate(unitType, value ? value.endDate : null) || initialEndMoment;\n    let isDayBlocked = isDayBlockedFn(timeSlots, startDate, endDate, this.state.focusedInput, unitType);\n    let isOutsideRange = isOutsideRangeFn(timeSlots, startDate, endDate, this.state.focusedInput, unitType);\n    const startDatePlaceholderTxt = startDatePlaceholderText || intl.formatMessage({\n      id: 'FieldDateRangeInput.startDatePlaceholderText'\n    });\n    const endDatePlaceholderTxt = endDatePlaceholderText || intl.formatMessage({\n      id: 'FieldDateRangeInput.endDatePlaceholderText'\n    });\n    const screenReaderInputText = screenReaderInputMessage || intl.formatMessage({\n      id: 'FieldDateRangeInput.screenReaderInputMessage'\n    });\n    const closeDatePickerText = phrases.closeDatePicker ? phrases.closeDatePicker : intl.formatMessage({\n      id: 'FieldDateRangeInput.closeDatePicker'\n    });\n    const clearDateText = phrases.clearDate ? phrases.clearDate : intl.formatMessage({\n      id: 'FieldDateRangeInput.clearDate'\n    });\n    const classes = classNames(css.inputRoot, className, {\n      [css.withMobileMargins]: useMobileMargins\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DateRangePicker, Object.assign({}, datePickerProps, {\n      focusedInput: this.state.focusedInput,\n      onFocusChange: this.onFocusChange,\n      startDate: startDate,\n      endDate: endDate,\n      minimumNights: isDaily ? 0 : 1,\n      onDatesChange: this.onDatesChange,\n      startDatePlaceholderText: startDatePlaceholderTxt,\n      endDatePlaceholderText: endDatePlaceholderTxt,\n      screenReaderInputMessage: screenReaderInputText,\n      phrases: {\n        closeDatePicker: closeDatePickerText,\n        clearDate: clearDateText\n      },\n      isDayBlocked: isDayBlocked,\n      isOutsideRange: isOutsideRange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nDateRangeInputComponent.defaultProps = {\n  className: null,\n  useMobileMargins: false,\n  timeSlots: null,\n  ...defaultProps\n};\nDateRangeInputComponent.propTypes = {\n  className: string,\n  startDateId: string,\n  endDateId: string,\n  unitType: propTypes.lineItemUnitType.isRequired,\n  focusedInput: oneOf([START_DATE, END_DATE]),\n  initialDates: instanceOf(Date),\n  intl: intlShape.isRequired,\n  name: string.isRequired,\n  isOutsideRange: func,\n  onChange: func.isRequired,\n  onBlur: func.isRequired,\n  onFocus: func.isRequired,\n  phrases: shape({\n    closeDatePicker: string,\n    clearDate: string\n  }),\n  useMobileMargins: bool,\n  startDatePlaceholderText: string,\n  endDatePlaceholderText: string,\n  screenReaderInputMessage: string,\n  value: shape({\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date)\n  }),\n  timeSlots: arrayOf(propTypes.timeSlot)\n};\nexport default _c3 = injectIntl(DateRangeInputComponent);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PrevIcon\");\n$RefreshReg$(_c2, \"NextIcon\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/FieldDateRangeInput/DateRangeInput.js"],"names":["React","Component","bool","func","instanceOf","oneOf","shape","string","arrayOf","DateRangePicker","isInclusivelyAfterDay","isInclusivelyBeforeDay","intlShape","injectIntl","classNames","moment","START_DATE","END_DATE","LINE_ITEM_DAY","propTypes","config","isDayBlockedFn","isOutsideRangeFn","isBlockedBetween","apiEndDateToPickerDate","pickerEndDateToApiDate","IconArrowHead","css","HORIZONTAL_ORIENTATION","ANCHOR_LEFT","BLUR_TIMEOUT","PrevIcon","props","arrowIcon","NextIcon","defaultProps","initialDates","value","startDateId","endDateId","startDatePlaceholderText","endDatePlaceholderText","disabled","required","readOnly","screenReaderInputMessage","showClearDates","showDefaultInputIcon","customArrowIcon","customInputIcon","customCloseIcon","noBorder","block","renderMonthText","orientation","anchorDirection","horizontalMargin","withPortal","withFullScreenPortal","appendToBody","disableScroll","daySize","isRTL","initialVisibleMonth","firstDayOfWeek","i18n","numberOfMonths","keepOpenOnDateSelect","reopenPickerOnClearDates","renderCalendarInfo","hideKeyboardShortcutsPanel","navPrev","navNext","onPrevMonthClick","onNextMonthClick","transitionDuration","renderCalendarDay","undefined","renderDayContents","day","format","minimumNights","enableOutsideDays","isDayBlocked","isOutsideRange","endOfRange","dayCountAvailableForBooking","add","isDayHighlighted","displayFormat","monthFormat","weekDayFormat","phrases","closeDatePicker","clearDate","DateRangeInputComponent","constructor","state","focusedInput","currentStartDate","blurTimeoutId","onDatesChange","bind","onFocusChange","componentDidUpdate","prevProps","setState","componentWillUnmount","window","clearTimeout","dates","unitType","timeSlots","startDate","endDate","startDateUpdated","isBefore","clearEndDate","startDateAsDate","toDate","endDateAsDate","onChange","onFocus","setTimeout","onBlur","render","className","intl","name","useMobileMargins","children","datePickerProps","isDaily","initialStartMoment","initialEndMoment","Date","startDatePlaceholderTxt","formatMessage","id","endDatePlaceholderTxt","screenReaderInputText","closeDatePickerText","clearDateText","classes","inputRoot","withMobileMargins","lineItemUnitType","isRequired","timeSlot"],"mappings":"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","sourcesContent":["/**\n * DateRangeInput wraps DateRangePicker from React-dates and gives a list of all default props we use.\n * Styles for DateRangePicker can be found from 'public/reactDates.css'.\n *\n * N.B. *isOutsideRange* in defaultProps is defining what dates are available to booking.\n */\nimport React, { Component } from 'react';\nimport { bool, func, instanceOf, oneOf, shape, string, arrayOf } from 'prop-types';\nimport { DateRangePicker, isInclusivelyAfterDay, isInclusivelyBeforeDay } from 'react-dates';\nimport { intlShape, injectIntl } from '../../util/reactIntl';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { START_DATE, END_DATE } from '../../util/dates';\nimport { LINE_ITEM_DAY, propTypes } from '../../util/types';\nimport config from '../../config';\nimport {\n  isDayBlockedFn,\n  isOutsideRangeFn,\n  isBlockedBetween,\n  apiEndDateToPickerDate,\n  pickerEndDateToApiDate,\n} from './DateRangeInput.helpers';\n\nimport { IconArrowHead } from '../../components';\nimport css from './DateRangeInput.module.css';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const ANCHOR_LEFT = 'left';\n\n// Since final-form tracks the onBlur event for marking the field as\n// touched (which triggers possible error validation rendering), only\n// trigger the event asynchronously when no other input within this\n// component has received focus.\n//\n// This prevents showing the validation error when the user selects a\n// value and moves on to another input within this component.\nconst BLUR_TIMEOUT = 100;\n\n// IconArrowHead component might not be defined if exposed directly to the file.\n// This component is called before IconArrowHead component in components/index.js\nconst PrevIcon = props => (\n  <IconArrowHead {...props} direction=\"left\" rootClassName={css.arrowIcon} />\n);\nconst NextIcon = props => (\n  <IconArrowHead {...props} direction=\"right\" rootClassName={css.arrowIcon} />\n);\n\n// Possible configuration options of React-dates\nconst defaultProps = {\n  initialDates: null, // Possible initial date passed for the component\n  value: null, // Value should keep track of selected date.\n\n  // input related props\n  startDateId: 'startDate',\n  endDateId: 'endDate',\n  startDatePlaceholderText: null, // Handled inside component\n  endDatePlaceholderText: null, // Handled inside component\n  disabled: false,\n  required: false,\n  readOnly: false,\n  screenReaderInputMessage: null, // Handled inside component\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customArrowIcon: <span />,\n  customInputIcon: null,\n  customCloseIcon: null,\n  noBorder: true,\n  block: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  appendToBody: false,\n  disableScroll: false,\n  daySize: 38,\n  isRTL: false,\n  initialVisibleMonth: null,\n  firstDayOfWeek: config.i18n.firstDayOfWeek,\n  numberOfMonths: 1,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  renderCalendarInfo: null,\n  hideKeyboardShortcutsPanel: true,\n\n  // navigation related props\n  navPrev: <PrevIcon />,\n  navNext: <NextIcon />,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  transitionDuration: 200, // milliseconds between next month changes etc.\n\n  renderCalendarDay: undefined, // If undefined, renders react-dates/lib/components/CalendarDay\n  // day presentation and interaction related props\n  renderDayContents: day => {\n    return <span className=\"renderedDay\">{day.format('D')}</span>;\n  },\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n\n  // outside range -><- today ... today+available days -1 -><- outside range\n  isOutsideRange: day => {\n    const endOfRange = config.dayCountAvailableForBooking - 1;\n    return (\n      !isInclusivelyAfterDay(day, moment()) ||\n      !isInclusivelyBeforeDay(day, moment().add(endOfRange, 'days'))\n    );\n  },\n  isDayHighlighted: () => {},\n\n  // Internationalization props\n  // Multilocale support can be achieved with displayFormat like moment.localeData.longDateFormat('L')\n  // https://momentjs.com/\n  displayFormat: 'ddd, MMM D',\n  monthFormat: 'MMMM YYYY',\n  weekDayFormat: 'dd',\n  phrases: {\n    closeDatePicker: null, // Handled inside component\n    clearDate: null, // Handled inside component\n  },\n};\n\nclass DateRangeInputComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focusedInput: null,\n      currentStartDate: null,\n    };\n\n    this.blurTimeoutId = null;\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Update focusedInput in case a new value for it is\n    // passed in the props. This may occur if the focus\n    // is manually set to the date picker.\n    if (this.props.focusedInput && this.props.focusedInput !== prevProps.focusedInput) {\n      this.setState({ focusedInput: this.props.focusedInput });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.blurTimeoutId);\n  }\n\n  onDatesChange(dates) {\n    const { unitType, timeSlots } = this.props;\n    const { startDate, endDate } = dates;\n\n    // both dates are selected, a new start date before the previous start\n    // date is selected\n    const startDateUpdated =\n      timeSlots &&\n      startDate &&\n      endDate &&\n      this.state.currentStartDate &&\n      startDate.isBefore(this.state.currentStartDate);\n\n    // clear the end date in case a blocked date can be found\n    // between previous start date and new start date\n    const clearEndDate = startDateUpdated\n      ? isBlockedBetween(timeSlots, startDate, moment(this.state.currentStartDate).add(1, 'days'))\n      : false;\n\n    const startDateAsDate = startDate instanceof moment ? startDate.toDate() : null;\n    const endDateAsDate = clearEndDate ? null : pickerEndDateToApiDate(unitType, endDate);\n\n    this.setState(() => ({\n      currentStartDate: startDateAsDate,\n    }));\n\n    this.props.onChange({ startDate: startDateAsDate, endDate: endDateAsDate });\n  }\n\n  onFocusChange(focusedInput) {\n    // DateRangePicker requires 'onFocusChange' function and 'focusedInput'\n    // but Fields of React-Form deals with onFocus & onBlur instead\n    this.setState({ focusedInput });\n\n    if (focusedInput) {\n      window.clearTimeout(this.blurTimeoutId);\n      this.props.onFocus(focusedInput);\n    } else {\n      window.clearTimeout(this.blurTimeoutId);\n      this.blurTimeoutId = window.setTimeout(() => {\n        this.props.onBlur();\n      }, BLUR_TIMEOUT);\n    }\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      className,\n      unitType,\n      initialDates,\n      intl,\n      name,\n      startDatePlaceholderText,\n      endDatePlaceholderText,\n      onBlur,\n      onChange,\n      onFocus,\n      phrases,\n      screenReaderInputMessage,\n      useMobileMargins,\n      value,\n      children,\n      render,\n      timeSlots,\n      ...datePickerProps\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    const isDaily = unitType === LINE_ITEM_DAY;\n    const initialStartMoment = initialDates ? moment(initialDates.startDate) : null;\n    const initialEndMoment = initialDates ? moment(initialDates.endDate) : null;\n    const startDate =\n      value && value.startDate instanceof Date ? moment(value.startDate) : initialStartMoment;\n    const endDate =\n      apiEndDateToPickerDate(unitType, value ? value.endDate : null) || initialEndMoment;\n\n    let isDayBlocked = isDayBlockedFn(\n      timeSlots,\n      startDate,\n      endDate,\n      this.state.focusedInput,\n      unitType\n    );\n\n    let isOutsideRange = isOutsideRangeFn(\n      timeSlots,\n      startDate,\n      endDate,\n      this.state.focusedInput,\n      unitType\n    );\n\n    const startDatePlaceholderTxt =\n      startDatePlaceholderText ||\n      intl.formatMessage({ id: 'FieldDateRangeInput.startDatePlaceholderText' });\n    const endDatePlaceholderTxt =\n      endDatePlaceholderText ||\n      intl.formatMessage({ id: 'FieldDateRangeInput.endDatePlaceholderText' });\n    const screenReaderInputText =\n      screenReaderInputMessage ||\n      intl.formatMessage({ id: 'FieldDateRangeInput.screenReaderInputMessage' });\n    const closeDatePickerText = phrases.closeDatePicker\n      ? phrases.closeDatePicker\n      : intl.formatMessage({ id: 'FieldDateRangeInput.closeDatePicker' });\n    const clearDateText = phrases.clearDate\n      ? phrases.clearDate\n      : intl.formatMessage({ id: 'FieldDateRangeInput.clearDate' });\n\n    const classes = classNames(css.inputRoot, className, {\n      [css.withMobileMargins]: useMobileMargins,\n    });\n\n    return (\n      <div className={classes}>\n        <DateRangePicker\n          {...datePickerProps}\n          focusedInput={this.state.focusedInput}\n          onFocusChange={this.onFocusChange}\n          startDate={startDate}\n          endDate={endDate}\n          minimumNights={isDaily ? 0 : 1}\n          onDatesChange={this.onDatesChange}\n          startDatePlaceholderText={startDatePlaceholderTxt}\n          endDatePlaceholderText={endDatePlaceholderTxt}\n          screenReaderInputMessage={screenReaderInputText}\n          phrases={{ closeDatePicker: closeDatePickerText, clearDate: clearDateText }}\n          isDayBlocked={isDayBlocked}\n          isOutsideRange={isOutsideRange}\n        />\n      </div>\n    );\n  }\n}\n\nDateRangeInputComponent.defaultProps = {\n  className: null,\n  useMobileMargins: false,\n  timeSlots: null,\n  ...defaultProps,\n};\n\nDateRangeInputComponent.propTypes = {\n  className: string,\n  startDateId: string,\n  endDateId: string,\n  unitType: propTypes.lineItemUnitType.isRequired,\n  focusedInput: oneOf([START_DATE, END_DATE]),\n  initialDates: instanceOf(Date),\n  intl: intlShape.isRequired,\n  name: string.isRequired,\n  isOutsideRange: func,\n  onChange: func.isRequired,\n  onBlur: func.isRequired,\n  onFocus: func.isRequired,\n  phrases: shape({\n    closeDatePicker: string,\n    clearDate: string,\n  }),\n  useMobileMargins: bool,\n  startDatePlaceholderText: string,\n  endDatePlaceholderText: string,\n  screenReaderInputMessage: string,\n  value: shape({\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n  }),\n  timeSlots: arrayOf(propTypes.timeSlot),\n};\n\nexport default injectIntl(DateRangeInputComponent);\n"]},"metadata":{},"sourceType":"module"}