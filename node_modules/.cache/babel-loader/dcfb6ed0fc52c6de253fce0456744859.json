{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/ValidationError/ValidationError.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport css from './ValidationError.module.css';\n/**\n * This component can be used to show validation errors next to form\n * input fields. The component takes the final-form Field component\n * `meta` object as a prop and infers if an error message should be\n * shown.\n */\n\nconst ValidationError = props => {\n  const {\n    rootClassName,\n    className,\n    fieldMeta\n  } = props;\n  const {\n    touched,\n    error\n  } = fieldMeta;\n  const classes = classNames(rootClassName || css.root, className);\n  return touched && error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, error) : null;\n};\n\n_c = ValidationError;\nValidationError.defaultProps = {\n  rootClassName: null,\n  className: null\n};\nconst {\n  shape,\n  bool,\n  string\n} = PropTypes;\nValidationError.propTypes = {\n  rootClassName: string,\n  className: string,\n  fieldMeta: shape({\n    touched: bool.isRequired,\n    error: string\n  }).isRequired\n};\nexport default ValidationError;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationError\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/ValidationError/ValidationError.js"],"names":["React","PropTypes","classNames","css","ValidationError","props","rootClassName","className","fieldMeta","touched","error","classes","root","defaultProps","shape","bool","string","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,GAAP,MAAgB,8BAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA;AAA5B,MAA0CH,KAAhD;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,SAA3B;AACA,QAAMG,OAAO,GAAGT,UAAU,CAACI,aAAa,IAAIH,GAAG,CAACS,IAAtB,EAA4BL,SAA5B,CAA1B;AACA,SAAOE,OAAO,IAAIC,KAAX,gBAAmB;AAAK,IAAA,SAAS,EAAEC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BD,KAA1B,CAAnB,GAA4D,IAAnE;AACD,CALD;;KAAMN,e;AAONA,eAAe,CAACS,YAAhB,GAA+B;AAAEP,EAAAA,aAAa,EAAE,IAAjB;AAAuBC,EAAAA,SAAS,EAAE;AAAlC,CAA/B;AAEA,MAAM;AAAEO,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,IAA0Bf,SAAhC;AAEAG,eAAe,CAACa,SAAhB,GAA4B;AAC1BX,EAAAA,aAAa,EAAEU,MADW;AAE1BT,EAAAA,SAAS,EAAES,MAFe;AAG1BR,EAAAA,SAAS,EAAEM,KAAK,CAAC;AACfL,IAAAA,OAAO,EAAEM,IAAI,CAACG,UADC;AAEfR,IAAAA,KAAK,EAAEM;AAFQ,GAAD,CAAL,CAGRE;AANuB,CAA5B;AASA,eAAed,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport css from './ValidationError.module.css';\n\n/**\n * This component can be used to show validation errors next to form\n * input fields. The component takes the final-form Field component\n * `meta` object as a prop and infers if an error message should be\n * shown.\n */\nconst ValidationError = props => {\n  const { rootClassName, className, fieldMeta } = props;\n  const { touched, error } = fieldMeta;\n  const classes = classNames(rootClassName || css.root, className);\n  return touched && error ? <div className={classes}>{error}</div> : null;\n};\n\nValidationError.defaultProps = { rootClassName: null, className: null };\n\nconst { shape, bool, string } = PropTypes;\n\nValidationError.propTypes = {\n  rootClassName: string,\n  className: string,\n  fieldMeta: shape({\n    touched: bool.isRequired,\n    error: string,\n  }).isRequired,\n};\n\nexport default ValidationError;\n"]},"metadata":{},"sourceType":"module"}