{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/ListingPage/ActionBarMaybe.js\";\nimport React from 'react';\nimport { bool, oneOfType, object, string } from 'prop-types';\nimport { FormattedMessage } from '../../util/reactIntl';\nimport classNames from 'classnames';\nimport { LISTING_STATE_PENDING_APPROVAL, LISTING_STATE_CLOSED, LISTING_STATE_DRAFT, propTypes } from '../../util/types';\nimport { NamedLink } from '../../components';\nimport EditIcon from './EditIcon';\nimport css from './ListingPage.module.css';\nexport const ActionBarMaybe = props => {\n  const {\n    rootClassName,\n    className,\n    isOwnListing,\n    listing,\n    editParams\n  } = props;\n  const classes = classNames(rootClassName || css.actionBar, className);\n  const state = listing.attributes.state;\n  const isPendingApproval = state === LISTING_STATE_PENDING_APPROVAL;\n  const isClosed = state === LISTING_STATE_CLOSED;\n  const isDraft = state === LISTING_STATE_DRAFT;\n\n  if (isOwnListing) {\n    let ownListingTextTranslationId = 'ListingPage.ownListing';\n\n    if (isPendingApproval) {\n      ownListingTextTranslationId = 'ListingPage.ownListingPendingApproval';\n    } else if (isClosed) {\n      ownListingTextTranslationId = 'ListingPage.ownClosedListing';\n    } else if (isDraft) {\n      ownListingTextTranslationId = 'ListingPage.ownListingDraft';\n    }\n\n    const message = isDraft ? 'ListingPage.finishListing' : 'ListingPage.editListing';\n    const ownListingTextClasses = classNames(css.ownListingText, {\n      [css.ownListingTextPendingApproval]: isPendingApproval\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: ownListingTextClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: ownListingTextTranslationId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(NamedLink, {\n      className: css.editListingLink,\n      name: \"EditListingPage\",\n      params: editParams,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      className: css.editIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  } else if (isClosed) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: css.closedListingText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ListingPage.closedListing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return null;\n};\n_c = ActionBarMaybe;\nActionBarMaybe.defaultProps = {\n  rootClassName: null,\n  className: null\n};\nActionBarMaybe.propTypes = {\n  rootClassName: string,\n  className: string,\n  isOwnListing: bool.isRequired,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]).isRequired,\n  editParams: object.isRequired\n};\nActionBarMaybe.displayName = 'ActionBarMaybe';\nexport default ActionBarMaybe;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionBarMaybe\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/ListingPage/ActionBarMaybe.js"],"names":["React","bool","oneOfType","object","string","FormattedMessage","classNames","LISTING_STATE_PENDING_APPROVAL","LISTING_STATE_CLOSED","LISTING_STATE_DRAFT","propTypes","NamedLink","EditIcon","css","ActionBarMaybe","props","rootClassName","className","isOwnListing","listing","editParams","classes","actionBar","state","attributes","isPendingApproval","isClosed","isDraft","ownListingTextTranslationId","message","ownListingTextClasses","ownListingText","ownListingTextPendingApproval","editListingLink","editIcon","closedListingText","defaultProps","isRequired","ownListing","displayName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,MAAlC,QAAgD,YAAhD;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,8BADF,EAEEC,oBAFF,EAGEC,mBAHF,EAIEC,SAJF,QAKO,kBALP;AAMA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACrC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA,OAA1C;AAAmDC,IAAAA;AAAnD,MAAkEL,KAAxE;AACA,QAAMM,OAAO,GAAGf,UAAU,CAACU,aAAa,IAAIH,GAAG,CAACS,SAAtB,EAAiCL,SAAjC,CAA1B;AAEA,QAAMM,KAAK,GAAGJ,OAAO,CAACK,UAAR,CAAmBD,KAAjC;AACA,QAAME,iBAAiB,GAAGF,KAAK,KAAKhB,8BAApC;AACA,QAAMmB,QAAQ,GAAGH,KAAK,KAAKf,oBAA3B;AACA,QAAMmB,OAAO,GAAGJ,KAAK,KAAKd,mBAA1B;;AAEA,MAAIS,YAAJ,EAAkB;AAChB,QAAIU,2BAA2B,GAAG,wBAAlC;;AAEA,QAAIH,iBAAJ,EAAuB;AACrBG,MAAAA,2BAA2B,GAAG,uCAA9B;AACD,KAFD,MAEO,IAAIF,QAAJ,EAAc;AACnBE,MAAAA,2BAA2B,GAAG,8BAA9B;AACD,KAFM,MAEA,IAAID,OAAJ,EAAa;AAClBC,MAAAA,2BAA2B,GAAG,6BAA9B;AACD;;AAED,UAAMC,OAAO,GAAGF,OAAO,GAAG,2BAAH,GAAiC,yBAAxD;AAEA,UAAMG,qBAAqB,GAAGxB,UAAU,CAACO,GAAG,CAACkB,cAAL,EAAqB;AAC3D,OAAClB,GAAG,CAACmB,6BAAL,GAAqCP;AADsB,KAArB,CAAxC;AAIA,wBACE;AAAK,MAAA,SAAS,EAAEJ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAES,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEF,2BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEf,GAAG,CAACoB,eAA1B;AAA2C,MAAA,IAAI,EAAC,iBAAhD;AAAkE,MAAA,MAAM,EAAEb,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEP,GAAG,CAACqB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEL,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAJF,CADF;AAWD,GA5BD,MA4BO,IAAIH,QAAJ,EAAc;AACnB,wBACE;AAAK,MAAA,SAAS,EAAEL,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAER,GAAG,CAACsB,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AACD,SAAO,IAAP;AACD,CA/CM;KAAMrB,c;AAgDbA,cAAc,CAACsB,YAAf,GAA8B;AAC5BpB,EAAAA,aAAa,EAAE,IADa;AAE5BC,EAAAA,SAAS,EAAE;AAFiB,CAA9B;AAKAH,cAAc,CAACJ,SAAf,GAA2B;AACzBM,EAAAA,aAAa,EAAEZ,MADU;AAEzBa,EAAAA,SAAS,EAAEb,MAFc;AAGzBc,EAAAA,YAAY,EAAEjB,IAAI,CAACoC,UAHM;AAIzBlB,EAAAA,OAAO,EAAEjB,SAAS,CAAC,CAACQ,SAAS,CAACS,OAAX,EAAoBT,SAAS,CAAC4B,UAA9B,CAAD,CAAT,CAAqDD,UAJrC;AAKzBjB,EAAAA,UAAU,EAAEjB,MAAM,CAACkC;AALM,CAA3B;AAQAvB,cAAc,CAACyB,WAAf,GAA6B,gBAA7B;AAEA,eAAezB,cAAf","sourcesContent":["import React from 'react';\nimport { bool, oneOfType, object, string } from 'prop-types';\nimport { FormattedMessage } from '../../util/reactIntl';\nimport classNames from 'classnames';\nimport {\n  LISTING_STATE_PENDING_APPROVAL,\n  LISTING_STATE_CLOSED,\n  LISTING_STATE_DRAFT,\n  propTypes,\n} from '../../util/types';\nimport { NamedLink } from '../../components';\nimport EditIcon from './EditIcon';\n\nimport css from './ListingPage.module.css';\n\nexport const ActionBarMaybe = props => {\n  const { rootClassName, className, isOwnListing, listing, editParams } = props;\n  const classes = classNames(rootClassName || css.actionBar, className);\n\n  const state = listing.attributes.state;\n  const isPendingApproval = state === LISTING_STATE_PENDING_APPROVAL;\n  const isClosed = state === LISTING_STATE_CLOSED;\n  const isDraft = state === LISTING_STATE_DRAFT;\n\n  if (isOwnListing) {\n    let ownListingTextTranslationId = 'ListingPage.ownListing';\n\n    if (isPendingApproval) {\n      ownListingTextTranslationId = 'ListingPage.ownListingPendingApproval';\n    } else if (isClosed) {\n      ownListingTextTranslationId = 'ListingPage.ownClosedListing';\n    } else if (isDraft) {\n      ownListingTextTranslationId = 'ListingPage.ownListingDraft';\n    }\n\n    const message = isDraft ? 'ListingPage.finishListing' : 'ListingPage.editListing';\n\n    const ownListingTextClasses = classNames(css.ownListingText, {\n      [css.ownListingTextPendingApproval]: isPendingApproval,\n    });\n\n    return (\n      <div className={classes}>\n        <p className={ownListingTextClasses}>\n          <FormattedMessage id={ownListingTextTranslationId} />\n        </p>\n        <NamedLink className={css.editListingLink} name=\"EditListingPage\" params={editParams}>\n          <EditIcon className={css.editIcon} />\n          <FormattedMessage id={message} />\n        </NamedLink>\n      </div>\n    );\n  } else if (isClosed) {\n    return (\n      <div className={classes}>\n        <p className={css.closedListingText}>\n          <FormattedMessage id=\"ListingPage.closedListing\" />\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\nActionBarMaybe.defaultProps = {\n  rootClassName: null,\n  className: null,\n};\n\nActionBarMaybe.propTypes = {\n  rootClassName: string,\n  className: string,\n  isOwnListing: bool.isRequired,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]).isRequired,\n  editParams: object.isRequired,\n};\n\nActionBarMaybe.displayName = 'ActionBarMaybe';\n\nexport default ActionBarMaybe;\n"]},"metadata":{},"sourceType":"module"}