{"ast":null,"code":"// ================ Action types ================ //\nexport const DISABLE_SCROLLING = 'app/UI/DISABLE_SCROLLING'; // ================ Reducer ================ //\n\nconst initialState = {\n  disableScrollRequests: []\n};\nexport default function reducer(state = initialState, action = {}) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case DISABLE_SCROLLING:\n      {\n        const {\n          componentId,\n          disableScrolling\n        } = payload;\n        const disableScrollRequests = state.disableScrollRequests;\n        const componentIdExists = disableScrollRequests.find(c => c.componentId === componentId);\n\n        if (componentIdExists) {\n          const disableScrollRequestArray = disableScrollRequests.map(c => {\n            return c.componentId === componentId ? { ...c,\n              disableScrolling\n            } : c;\n          });\n          return { ...state,\n            disableScrollRequests: [...disableScrollRequestArray]\n          };\n        }\n\n        const disableScrollRequestArray = [...disableScrollRequests, {\n          componentId,\n          disableScrolling\n        }];\n        return { ...state,\n          disableScrollRequests: disableScrollRequestArray\n        };\n      }\n\n    default:\n      return state;\n  }\n} // ================ Action creators ================ //\n\nexport const manageDisableScrolling = (componentId, disableScrolling) => ({\n  type: DISABLE_SCROLLING,\n  payload: {\n    componentId,\n    disableScrolling\n  }\n}); // ================ Selectors ================ //\n\nexport const isScrollingDisabled = state => {\n  const {\n    disableScrollRequests\n  } = state.UI;\n  return disableScrollRequests.some(r => r.disableScrolling);\n};","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/ducks/UI.duck.js"],"names":["DISABLE_SCROLLING","initialState","disableScrollRequests","reducer","state","action","type","payload","componentId","disableScrolling","componentIdExists","find","c","disableScrollRequestArray","map","manageDisableScrolling","isScrollingDisabled","UI","some","r"],"mappings":"AAAA;AAEA,OAAO,MAAMA,iBAAiB,GAAG,0BAA1B,C,CAEP;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,qBAAqB,EAAE;AADJ,CAArB;AAIA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuCI,MAAM,GAAG,EAAhD,EAAoD;AACjE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKN,iBAAL;AAAwB;AACtB,cAAM;AAAEQ,UAAAA,WAAF;AAAeC,UAAAA;AAAf,YAAoCF,OAA1C;AACA,cAAML,qBAAqB,GAAGE,KAAK,CAACF,qBAApC;AACA,cAAMQ,iBAAiB,GAAGR,qBAAqB,CAACS,IAAtB,CAA2BC,CAAC,IAAIA,CAAC,CAACJ,WAAF,KAAkBA,WAAlD,CAA1B;;AAEA,YAAIE,iBAAJ,EAAuB;AACrB,gBAAMG,yBAAyB,GAAGX,qBAAqB,CAACY,GAAtB,CAA0BF,CAAC,IAAI;AAC/D,mBAAOA,CAAC,CAACJ,WAAF,KAAkBA,WAAlB,GAAgC,EAAE,GAAGI,CAAL;AAAQH,cAAAA;AAAR,aAAhC,GAA6DG,CAApE;AACD,WAFiC,CAAlC;AAGA,iBAAO,EAAE,GAAGR,KAAL;AAAYF,YAAAA,qBAAqB,EAAE,CAAC,GAAGW,yBAAJ;AAAnC,WAAP;AACD;;AAED,cAAMA,yBAAyB,GAAG,CAChC,GAAGX,qBAD6B,EAEhC;AAAEM,UAAAA,WAAF;AAAeC,UAAAA;AAAf,SAFgC,CAAlC;AAIA,eAAO,EACL,GAAGL,KADE;AAELF,UAAAA,qBAAqB,EAAEW;AAFlB,SAAP;AAID;;AAED;AACE,aAAOT,KAAP;AAxBJ;AA0BD,C,CAED;;AAEA,OAAO,MAAMW,sBAAsB,GAAG,CAACP,WAAD,EAAcC,gBAAd,MAAoC;AACxEH,EAAAA,IAAI,EAAEN,iBADkE;AAExEO,EAAAA,OAAO,EAAE;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf;AAF+D,CAApC,CAA/B,C,CAKP;;AAEA,OAAO,MAAMO,mBAAmB,GAAGZ,KAAK,IAAI;AAC1C,QAAM;AAAEF,IAAAA;AAAF,MAA4BE,KAAK,CAACa,EAAxC;AACA,SAAOf,qBAAqB,CAACgB,IAAtB,CAA2BC,CAAC,IAAIA,CAAC,CAACV,gBAAlC,CAAP;AACD,CAHM","sourcesContent":["// ================ Action types ================ //\n\nexport const DISABLE_SCROLLING = 'app/UI/DISABLE_SCROLLING';\n\n// ================ Reducer ================ //\n\nconst initialState = {\n  disableScrollRequests: [],\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  const { type, payload } = action;\n  switch (type) {\n    case DISABLE_SCROLLING: {\n      const { componentId, disableScrolling } = payload;\n      const disableScrollRequests = state.disableScrollRequests;\n      const componentIdExists = disableScrollRequests.find(c => c.componentId === componentId);\n\n      if (componentIdExists) {\n        const disableScrollRequestArray = disableScrollRequests.map(c => {\n          return c.componentId === componentId ? { ...c, disableScrolling } : c;\n        });\n        return { ...state, disableScrollRequests: [...disableScrollRequestArray] };\n      }\n\n      const disableScrollRequestArray = [\n        ...disableScrollRequests,\n        { componentId, disableScrolling },\n      ];\n      return {\n        ...state,\n        disableScrollRequests: disableScrollRequestArray,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\n// ================ Action creators ================ //\n\nexport const manageDisableScrolling = (componentId, disableScrolling) => ({\n  type: DISABLE_SCROLLING,\n  payload: { componentId, disableScrolling },\n});\n\n// ================ Selectors ================ //\n\nexport const isScrollingDisabled = state => {\n  const { disableScrollRequests } = state.UI;\n  return disableScrollRequests.some(r => r.disableScrolling);\n};\n"]},"metadata":{},"sourceType":"module"}