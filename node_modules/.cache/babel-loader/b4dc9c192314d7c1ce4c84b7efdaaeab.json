{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/TransactionPage/ActivityFeed/ActivityFeed.js\";\nimport React from 'react';\nimport { string, arrayOf, bool, func, number } from 'prop-types';\nimport dropWhile from 'lodash/dropWhile';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\nimport { formatDateWithProximity } from '../../../util/dates';\nimport { ensureTransaction, ensureUser, ensureListing } from '../../../util/data';\nimport { TRANSITION_CONFIRM_PAYMENT, TRANSITION_AUTO_CANCEL, TRANSITION_CANCEL, TRANSITION_AUTO_CANCEL_FROM_DISPUTED, TRANSITION_CANCEL_FROM_DISPUTED, TRANSITION_MARK_RECEIVED_FROM_PURCHASED, TRANSITION_MARK_RECEIVED, TRANSITION_AUTO_MARK_RECEIVED, TRANSITION_MARK_RECEIVED_FROM_DISPUTED, TRANSITION_MARK_DELIVERED, TRANSITION_DISPUTE, TRANSITION_REVIEW_1_BY_CUSTOMER, TRANSITION_REVIEW_1_BY_PROVIDER, TRANSITION_REVIEW_2_BY_CUSTOMER, TRANSITION_REVIEW_2_BY_PROVIDER, getUserTxRole, isCustomerReview, isProviderReview, isRelevantPastTransition, transitionIsReviewed, txIsInFirstReviewBy, txIsCompleted, txIsReviewed, txRoleIsCustomer, txRoleIsProvider } from '../../../util/transaction';\nimport { propTypes } from '../../../util/types';\nimport * as log from '../../../util/log';\nimport { Avatar, InlineTextButton, ReviewRating, UserDisplayName } from '../../../components';\nimport css from './ActivityFeed.module.css';\n\nconst Message = props => {\n  const {\n    message,\n    intl\n  } = props;\n  const todayString = intl.formatMessage({\n    id: 'ActivityFeed.today'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: css.avatar,\n    user: message.sender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: css.messageContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, message.attributes.content), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.messageDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, formatDateWithProximity(message.attributes.createdAt, intl, todayString))));\n};\n\n_c = Message;\nMessage.propTypes = {\n  message: propTypes.message.isRequired,\n  intl: intlShape.isRequired\n};\n\nconst OwnMessage = props => {\n  const {\n    message,\n    intl\n  } = props;\n  const todayString = intl.formatMessage({\n    id: 'ActivityFeed.today'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.ownMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.ownMessageContentWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: css.ownMessageContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, message.attributes.content)), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.ownMessageDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, formatDateWithProximity(message.attributes.createdAt, intl, todayString)));\n};\n\n_c2 = OwnMessage;\nOwnMessage.propTypes = {\n  message: propTypes.message.isRequired,\n  intl: intlShape.isRequired\n};\n\nconst Review = props => {\n  const {\n    content,\n    rating\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: css.reviewContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, content), rating ? /*#__PURE__*/React.createElement(ReviewRating, {\n    reviewStarClassName: css.reviewStar,\n    className: css.reviewStars,\n    rating: rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\n_c3 = Review;\nReview.propTypes = {\n  content: string.isRequired,\n  rating: number.isRequired\n};\n\nconst hasUserLeftAReviewFirst = (userRole, transaction) => {\n  // Because function txIsInFirstReviewBy uses isCustomer to check in which state the reviews are\n  // we should also use isCustomer insted of isProvider\n  const isCustomer = txRoleIsCustomer(userRole);\n  return txIsInFirstReviewBy(transaction, isCustomer);\n};\n\nconst resolveTransitionMessage = (transaction, transition, listingTitle, ownRole, otherUsersName, onOpenReviewModal) => {\n  const isOwnTransition = transition.by === ownRole;\n  const currentTransition = transition.transition;\n  const displayName = otherUsersName;\n\n  switch (currentTransition) {\n    case TRANSITION_CONFIRM_PAYMENT:\n      return isOwnTransition ? /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.ownTransitionPurchased\",\n        values: {\n          listingTitle\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionPurchased\",\n        values: {\n          displayName,\n          listingTitle\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      });\n\n    case TRANSITION_AUTO_CANCEL:\n    case TRANSITION_CANCEL:\n    case TRANSITION_AUTO_CANCEL_FROM_DISPUTED:\n    case TRANSITION_CANCEL_FROM_DISPUTED:\n      return /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionCancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 14\n        }\n      });\n\n    case TRANSITION_MARK_RECEIVED_FROM_PURCHASED:\n    case TRANSITION_MARK_RECEIVED:\n    case TRANSITION_AUTO_MARK_RECEIVED:\n    case TRANSITION_MARK_RECEIVED_FROM_DISPUTED:\n      // Show the leave a review link if the state is completed and\n      // if the current user is the first to leave a review\n      const reviewPeriodJustStarted = txIsCompleted(transaction);\n      const reviewAsFirstLink = reviewPeriodJustStarted ? /*#__PURE__*/React.createElement(InlineTextButton, {\n        onClick: onOpenReviewModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.leaveAReview\",\n        values: {\n          displayName\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      })) : null;\n      return reviewAsFirstLink || /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionMarkReceived\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 35\n        }\n      });\n\n    case TRANSITION_MARK_DELIVERED:\n      {\n        var _transaction$attribut, _transaction$attribut2;\n\n        const isShipped = ((_transaction$attribut = transaction.attributes) === null || _transaction$attribut === void 0 ? void 0 : (_transaction$attribut2 = _transaction$attribut.protectedData) === null || _transaction$attribut2 === void 0 ? void 0 : _transaction$attribut2.deliveryMethod) === 'shipping';\n        return isOwnTransition && isShipped ? /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.ownTransitionShipped\",\n          values: {\n            listingTitle\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }\n        }) : isOwnTransition && !isShipped ? /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.ownTransitionDelivered\",\n          values: {\n            listingTitle\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }\n        }) : !isOwnTransition && isShipped ? /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.transitionShipped\",\n          values: {\n            displayName,\n            listingTitle\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 9\n          }\n        }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.transitionDelivered\",\n          values: {\n            displayName,\n            listingTitle\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case TRANSITION_DISPUTE:\n      return isOwnTransition ? /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.ownTransitionDisputed\",\n        values: {\n          listingTitle\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionDisputed\",\n        values: {\n          displayName,\n          listingTitle\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      });\n\n    case TRANSITION_REVIEW_1_BY_PROVIDER:\n    case TRANSITION_REVIEW_1_BY_CUSTOMER:\n      if (isOwnTransition) {\n        return /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.ownTransitionReview\",\n          values: {\n            displayName\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 16\n          }\n        });\n      } else {\n        // show the leave a review link if current user is not the first\n        // one to leave a review\n        const reviewPeriodIsOver = txIsReviewed(transaction);\n        const userHasLeftAReview = hasUserLeftAReviewFirst(ownRole, transaction);\n        const reviewAsSecondLink = !(reviewPeriodIsOver || userHasLeftAReview) ? /*#__PURE__*/React.createElement(InlineTextButton, {\n          onClick: onOpenReviewModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.leaveAReviewSecond\",\n          values: {\n            displayName\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }\n        })) : null;\n        return /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.transitionReview\",\n          values: {\n            displayName,\n            reviewLink: reviewAsSecondLink\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }\n        });\n      }\n\n    case TRANSITION_REVIEW_2_BY_PROVIDER:\n    case TRANSITION_REVIEW_2_BY_CUSTOMER:\n      if (isOwnTransition) {\n        return /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.ownTransitionReview\",\n          values: {\n            displayName\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.transitionReview\",\n          values: {\n            displayName,\n            reviewLink: null\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }\n        });\n      }\n\n    default:\n      log.error(new Error('Unknown transaction transition type'), 'unknown-transition-type', {\n        transitionType: currentTransition\n      });\n      return '';\n  }\n};\n\nconst reviewByAuthorId = (transaction, userId) => {\n  return transaction.reviews.filter(r => !r.attributes.deleted && r.author.id.uuid === userId.uuid)[0];\n};\n\nconst Transition = props => {\n  const {\n    transition,\n    transaction,\n    currentUser,\n    intl,\n    onOpenReviewModal\n  } = props;\n  const currentTransaction = ensureTransaction(transaction);\n  const customer = currentTransaction.customer;\n  const provider = currentTransaction.provider;\n  const deletedListing = intl.formatMessage({\n    id: 'ActivityFeed.deletedListing'\n  });\n  const listingTitle = currentTransaction.listing.attributes.deleted ? deletedListing : currentTransaction.listing.attributes.title;\n  const lastTransition = currentTransaction.attributes.lastTransition;\n  const ownRole = getUserTxRole(currentUser.id, currentTransaction);\n  const otherUsersName = txRoleIsProvider(ownRole) ? /*#__PURE__*/React.createElement(UserDisplayName, {\n    user: customer,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(UserDisplayName, {\n    user: provider,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  });\n  const transitionMessage = resolveTransitionMessage(transaction, transition, listingTitle, ownRole, otherUsersName, onOpenReviewModal);\n  const currentTransition = transition.transition;\n  const deletedReviewContent = intl.formatMessage({\n    id: 'ActivityFeed.deletedReviewContent'\n  });\n  let reviewComponent = null;\n\n  if (transitionIsReviewed(lastTransition)) {\n    if (isCustomerReview(currentTransition)) {\n      const review = reviewByAuthorId(currentTransaction, customer.id);\n      reviewComponent = review ? /*#__PURE__*/React.createElement(Review, {\n        content: review.attributes.content,\n        rating: review.attributes.rating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }\n      }) : /*#__PURE__*/React.createElement(Review, {\n        content: deletedReviewContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }\n      });\n    } else if (isProviderReview(currentTransition)) {\n      const review = reviewByAuthorId(currentTransaction, provider.id);\n      reviewComponent = review ? /*#__PURE__*/React.createElement(Review, {\n        content: review.attributes.content,\n        rating: review.attributes.rating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }\n      }) : /*#__PURE__*/React.createElement(Review, {\n        content: deletedReviewContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  const todayString = intl.formatMessage({\n    id: 'ActivityFeed.today'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: css.transitionContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, \"\\u2022\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: css.transitionContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, transitionMessage), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.transitionDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, formatDateWithProximity(transition.createdAt, intl, todayString)), reviewComponent));\n};\n\n_c4 = Transition;\nTransition.propTypes = {\n  transition: propTypes.transition.isRequired,\n  transaction: propTypes.transaction.isRequired,\n  currentUser: propTypes.currentUser.isRequired,\n  intl: intlShape.isRequired,\n  onOpenReviewModal: func.isRequired\n};\n\nconst EmptyTransition = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: css.transitionContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, \"\\u2022\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: css.transitionContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.transitionDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c5 = EmptyTransition;\n\nconst isMessage = item => item && item.type === 'message'; // Compare function for sorting an array containing messages and transitions\n\n\nconst compareItems = (a, b) => {\n  const itemDate = item => isMessage(item) ? item.attributes.createdAt : item.createdAt;\n\n  return itemDate(a) - itemDate(b);\n};\n\nconst organizedItems = (messages, transitions, hideOldTransitions) => {\n  const items = messages.concat(transitions).sort(compareItems);\n\n  if (hideOldTransitions) {\n    // Hide transitions that happened before the oldest message. Since\n    // we have older items (messages) that we are not showing, seeing\n    // old transitions would be confusing.\n    return dropWhile(items, i => !isMessage(i));\n  } else {\n    return items;\n  }\n};\n\nexport const ActivityFeedComponent = props => {\n  const {\n    rootClassName,\n    className,\n    messages,\n    transaction,\n    currentUser,\n    hasOlderMessages,\n    onOpenReviewModal,\n    onShowOlderMessages,\n    fetchMessagesInProgress,\n    intl\n  } = props;\n  const classes = classNames(rootClassName || css.root, className);\n  const currentTransaction = ensureTransaction(transaction);\n  const transitions = currentTransaction.attributes.transitions ? currentTransaction.attributes.transitions : [];\n  const currentCustomer = ensureUser(currentTransaction.customer);\n  const currentProvider = ensureUser(currentTransaction.provider);\n  const currentListing = ensureListing(currentTransaction.listing);\n  const transitionsAvailable = !!(currentUser && currentUser.id && currentCustomer.id && currentProvider.id && currentListing.id); // combine messages and transaction transitions\n\n  const items = organizedItems(messages, transitions, hasOlderMessages || fetchMessagesInProgress);\n\n  const transitionComponent = transition => {\n    if (transitionsAvailable) {\n      return /*#__PURE__*/React.createElement(Transition, {\n        transition: transition,\n        transaction: transaction,\n        currentUser: currentUser,\n        intl: intl,\n        onOpenReviewModal: onOpenReviewModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(EmptyTransition, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const messageComponent = message => {\n    const isOwnMessage = message.sender && message.sender.id && currentUser && currentUser.id && message.sender.id.uuid === currentUser.id.uuid;\n\n    if (isOwnMessage) {\n      return /*#__PURE__*/React.createElement(OwnMessage, {\n        message: message,\n        intl: intl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Message, {\n      message: message,\n      intl: intl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const messageListItem = message => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      id: `msg-${message.id.uuid}`,\n      key: message.id.uuid,\n      className: css.messageItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 7\n      }\n    }, messageComponent(message));\n  };\n\n  const transitionListItem = transition => {\n    if (isRelevantPastTransition(transition.transition)) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: transition.transition,\n        className: css.transitionItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 9\n        }\n      }, transitionComponent(transition));\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 5\n    }\n  }, hasOlderMessages ? /*#__PURE__*/React.createElement(\"li\", {\n    className: css.showOlderWrapper,\n    key: \"show-older-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InlineTextButton, {\n    className: css.showOlderButton,\n    onClick: onShowOlderMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"ActivityFeed.showOlderMessages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }))) : null, items.map(item => {\n    if (isMessage(item)) {\n      return messageListItem(item);\n    } else {\n      return transitionListItem(item);\n    }\n  }));\n};\n_c6 = ActivityFeedComponent;\nActivityFeedComponent.defaultProps = {\n  rootClassName: null,\n  className: null\n};\nActivityFeedComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  currentUser: propTypes.currentUser,\n  transaction: propTypes.transaction,\n  messages: arrayOf(propTypes.message),\n  hasOlderMessages: bool.isRequired,\n  onOpenReviewModal: func.isRequired,\n  onShowOlderMessages: func.isRequired,\n  fetchMessagesInProgress: bool.isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst ActivityFeed = injectIntl(ActivityFeedComponent);\n_c7 = ActivityFeed;\nexport default ActivityFeed;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"OwnMessage\");\n$RefreshReg$(_c3, \"Review\");\n$RefreshReg$(_c4, \"Transition\");\n$RefreshReg$(_c5, \"EmptyTransition\");\n$RefreshReg$(_c6, \"ActivityFeedComponent\");\n$RefreshReg$(_c7, \"ActivityFeed\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/TransactionPage/ActivityFeed/ActivityFeed.js"],"names":["React","string","arrayOf","bool","func","number","dropWhile","classNames","FormattedMessage","injectIntl","intlShape","formatDateWithProximity","ensureTransaction","ensureUser","ensureListing","TRANSITION_CONFIRM_PAYMENT","TRANSITION_AUTO_CANCEL","TRANSITION_CANCEL","TRANSITION_AUTO_CANCEL_FROM_DISPUTED","TRANSITION_CANCEL_FROM_DISPUTED","TRANSITION_MARK_RECEIVED_FROM_PURCHASED","TRANSITION_MARK_RECEIVED","TRANSITION_AUTO_MARK_RECEIVED","TRANSITION_MARK_RECEIVED_FROM_DISPUTED","TRANSITION_MARK_DELIVERED","TRANSITION_DISPUTE","TRANSITION_REVIEW_1_BY_CUSTOMER","TRANSITION_REVIEW_1_BY_PROVIDER","TRANSITION_REVIEW_2_BY_CUSTOMER","TRANSITION_REVIEW_2_BY_PROVIDER","getUserTxRole","isCustomerReview","isProviderReview","isRelevantPastTransition","transitionIsReviewed","txIsInFirstReviewBy","txIsCompleted","txIsReviewed","txRoleIsCustomer","txRoleIsProvider","propTypes","log","Avatar","InlineTextButton","ReviewRating","UserDisplayName","css","Message","props","message","intl","todayString","formatMessage","id","avatar","sender","messageContent","attributes","content","messageDate","createdAt","isRequired","OwnMessage","ownMessage","ownMessageContentWrapper","ownMessageContent","ownMessageDate","Review","rating","reviewContent","reviewStar","reviewStars","hasUserLeftAReviewFirst","userRole","transaction","isCustomer","resolveTransitionMessage","transition","listingTitle","ownRole","otherUsersName","onOpenReviewModal","isOwnTransition","by","currentTransition","displayName","reviewPeriodJustStarted","reviewAsFirstLink","isShipped","protectedData","deliveryMethod","reviewPeriodIsOver","userHasLeftAReview","reviewAsSecondLink","reviewLink","error","Error","transitionType","reviewByAuthorId","userId","reviews","filter","r","deleted","author","uuid","Transition","currentUser","currentTransaction","customer","provider","deletedListing","listing","title","lastTransition","transitionMessage","deletedReviewContent","reviewComponent","review","bullet","transitionContent","transitionDate","EmptyTransition","isMessage","item","type","compareItems","a","b","itemDate","organizedItems","messages","transitions","hideOldTransitions","items","concat","sort","i","ActivityFeedComponent","rootClassName","className","hasOlderMessages","onShowOlderMessages","fetchMessagesInProgress","classes","root","currentCustomer","currentProvider","currentListing","transitionsAvailable","transitionComponent","messageComponent","isOwnMessage","messageListItem","messageItem","transitionListItem","transitionItem","showOlderWrapper","showOlderButton","map","defaultProps","ActivityFeed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { string, arrayOf, bool, func, number } from 'prop-types';\nimport dropWhile from 'lodash/dropWhile';\nimport classNames from 'classnames';\n\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\nimport { formatDateWithProximity } from '../../../util/dates';\nimport { ensureTransaction, ensureUser, ensureListing } from '../../../util/data';\nimport {\n  TRANSITION_CONFIRM_PAYMENT,\n  TRANSITION_AUTO_CANCEL,\n  TRANSITION_CANCEL,\n  TRANSITION_AUTO_CANCEL_FROM_DISPUTED,\n  TRANSITION_CANCEL_FROM_DISPUTED,\n  TRANSITION_MARK_RECEIVED_FROM_PURCHASED,\n  TRANSITION_MARK_RECEIVED,\n  TRANSITION_AUTO_MARK_RECEIVED,\n  TRANSITION_MARK_RECEIVED_FROM_DISPUTED,\n  TRANSITION_MARK_DELIVERED,\n  TRANSITION_DISPUTE,\n  TRANSITION_REVIEW_1_BY_CUSTOMER,\n  TRANSITION_REVIEW_1_BY_PROVIDER,\n  TRANSITION_REVIEW_2_BY_CUSTOMER,\n  TRANSITION_REVIEW_2_BY_PROVIDER,\n  getUserTxRole,\n  isCustomerReview,\n  isProviderReview,\n  isRelevantPastTransition,\n  transitionIsReviewed,\n  txIsInFirstReviewBy,\n  txIsCompleted,\n  txIsReviewed,\n  txRoleIsCustomer,\n  txRoleIsProvider,\n} from '../../../util/transaction';\nimport { propTypes } from '../../../util/types';\nimport * as log from '../../../util/log';\n\nimport { Avatar, InlineTextButton, ReviewRating, UserDisplayName } from '../../../components';\n\nimport css from './ActivityFeed.module.css';\n\nconst Message = props => {\n  const { message, intl } = props;\n  const todayString = intl.formatMessage({ id: 'ActivityFeed.today' });\n  return (\n    <div className={css.message}>\n      <Avatar className={css.avatar} user={message.sender} />\n      <div>\n        <p className={css.messageContent}>{message.attributes.content}</p>\n        <p className={css.messageDate}>\n          {formatDateWithProximity(message.attributes.createdAt, intl, todayString)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: propTypes.message.isRequired,\n  intl: intlShape.isRequired,\n};\n\nconst OwnMessage = props => {\n  const { message, intl } = props;\n  const todayString = intl.formatMessage({ id: 'ActivityFeed.today' });\n  return (\n    <div className={css.ownMessage}>\n      <div className={css.ownMessageContentWrapper}>\n        <p className={css.ownMessageContent}>{message.attributes.content}</p>\n      </div>\n      <p className={css.ownMessageDate}>\n        {formatDateWithProximity(message.attributes.createdAt, intl, todayString)}\n      </p>\n    </div>\n  );\n};\n\nOwnMessage.propTypes = {\n  message: propTypes.message.isRequired,\n  intl: intlShape.isRequired,\n};\n\nconst Review = props => {\n  const { content, rating } = props;\n  return (\n    <div>\n      <p className={css.reviewContent}>{content}</p>\n      {rating ? (\n        <ReviewRating\n          reviewStarClassName={css.reviewStar}\n          className={css.reviewStars}\n          rating={rating}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nReview.propTypes = {\n  content: string.isRequired,\n  rating: number.isRequired,\n};\n\nconst hasUserLeftAReviewFirst = (userRole, transaction) => {\n  // Because function txIsInFirstReviewBy uses isCustomer to check in which state the reviews are\n  // we should also use isCustomer insted of isProvider\n  const isCustomer = txRoleIsCustomer(userRole);\n  return txIsInFirstReviewBy(transaction, isCustomer);\n};\n\nconst resolveTransitionMessage = (\n  transaction,\n  transition,\n  listingTitle,\n  ownRole,\n  otherUsersName,\n  onOpenReviewModal\n) => {\n  const isOwnTransition = transition.by === ownRole;\n  const currentTransition = transition.transition;\n  const displayName = otherUsersName;\n\n  switch (currentTransition) {\n    case TRANSITION_CONFIRM_PAYMENT:\n      return isOwnTransition ? (\n        <FormattedMessage id=\"ActivityFeed.ownTransitionPurchased\" values={{ listingTitle }} />\n      ) : (\n        <FormattedMessage\n          id=\"ActivityFeed.transitionPurchased\"\n          values={{ displayName, listingTitle }}\n        />\n      );\n    case TRANSITION_AUTO_CANCEL:\n    case TRANSITION_CANCEL:\n    case TRANSITION_AUTO_CANCEL_FROM_DISPUTED:\n    case TRANSITION_CANCEL_FROM_DISPUTED:\n      return <FormattedMessage id=\"ActivityFeed.transitionCancel\" />;\n    case TRANSITION_MARK_RECEIVED_FROM_PURCHASED:\n    case TRANSITION_MARK_RECEIVED:\n    case TRANSITION_AUTO_MARK_RECEIVED:\n    case TRANSITION_MARK_RECEIVED_FROM_DISPUTED:\n      // Show the leave a review link if the state is completed and\n      // if the current user is the first to leave a review\n      const reviewPeriodJustStarted = txIsCompleted(transaction);\n\n      const reviewAsFirstLink = reviewPeriodJustStarted ? (\n        <InlineTextButton onClick={onOpenReviewModal}>\n          <FormattedMessage id=\"ActivityFeed.leaveAReview\" values={{ displayName }} />\n        </InlineTextButton>\n      ) : null;\n\n      return reviewAsFirstLink || <FormattedMessage id=\"ActivityFeed.transitionMarkReceived\" />;\n    case TRANSITION_MARK_DELIVERED: {\n      const isShipped = transaction.attributes?.protectedData?.deliveryMethod === 'shipping';\n      return isOwnTransition && isShipped ? (\n        <FormattedMessage id=\"ActivityFeed.ownTransitionShipped\" values={{ listingTitle }} />\n      ) : isOwnTransition && !isShipped ? (\n        <FormattedMessage id=\"ActivityFeed.ownTransitionDelivered\" values={{ listingTitle }} />\n      ) : !isOwnTransition && isShipped ? (\n        <FormattedMessage\n          id=\"ActivityFeed.transitionShipped\"\n          values={{ displayName, listingTitle }}\n        />\n      ) : (\n        <FormattedMessage\n          id=\"ActivityFeed.transitionDelivered\"\n          values={{ displayName, listingTitle }}\n        />\n      );\n    }\n    case TRANSITION_DISPUTE:\n      return isOwnTransition ? (\n        <FormattedMessage id=\"ActivityFeed.ownTransitionDisputed\" values={{ listingTitle }} />\n      ) : (\n        <FormattedMessage\n          id=\"ActivityFeed.transitionDisputed\"\n          values={{ displayName, listingTitle }}\n        />\n      );\n    case TRANSITION_REVIEW_1_BY_PROVIDER:\n    case TRANSITION_REVIEW_1_BY_CUSTOMER:\n      if (isOwnTransition) {\n        return <FormattedMessage id=\"ActivityFeed.ownTransitionReview\" values={{ displayName }} />;\n      } else {\n        // show the leave a review link if current user is not the first\n        // one to leave a review\n        const reviewPeriodIsOver = txIsReviewed(transaction);\n        const userHasLeftAReview = hasUserLeftAReviewFirst(ownRole, transaction);\n        const reviewAsSecondLink = !(reviewPeriodIsOver || userHasLeftAReview) ? (\n          <InlineTextButton onClick={onOpenReviewModal}>\n            <FormattedMessage id=\"ActivityFeed.leaveAReviewSecond\" values={{ displayName }} />\n          </InlineTextButton>\n        ) : null;\n        return (\n          <FormattedMessage\n            id=\"ActivityFeed.transitionReview\"\n            values={{ displayName, reviewLink: reviewAsSecondLink }}\n          />\n        );\n      }\n    case TRANSITION_REVIEW_2_BY_PROVIDER:\n    case TRANSITION_REVIEW_2_BY_CUSTOMER:\n      if (isOwnTransition) {\n        return <FormattedMessage id=\"ActivityFeed.ownTransitionReview\" values={{ displayName }} />;\n      } else {\n        return (\n          <FormattedMessage\n            id=\"ActivityFeed.transitionReview\"\n            values={{ displayName, reviewLink: null }}\n          />\n        );\n      }\n\n    default:\n      log.error(new Error('Unknown transaction transition type'), 'unknown-transition-type', {\n        transitionType: currentTransition,\n      });\n      return '';\n  }\n};\n\nconst reviewByAuthorId = (transaction, userId) => {\n  return transaction.reviews.filter(\n    r => !r.attributes.deleted && r.author.id.uuid === userId.uuid\n  )[0];\n};\n\nconst Transition = props => {\n  const { transition, transaction, currentUser, intl, onOpenReviewModal } = props;\n\n  const currentTransaction = ensureTransaction(transaction);\n  const customer = currentTransaction.customer;\n  const provider = currentTransaction.provider;\n\n  const deletedListing = intl.formatMessage({\n    id: 'ActivityFeed.deletedListing',\n  });\n  const listingTitle = currentTransaction.listing.attributes.deleted\n    ? deletedListing\n    : currentTransaction.listing.attributes.title;\n  const lastTransition = currentTransaction.attributes.lastTransition;\n\n  const ownRole = getUserTxRole(currentUser.id, currentTransaction);\n\n  const otherUsersName = txRoleIsProvider(ownRole) ? (\n    <UserDisplayName user={customer} intl={intl} />\n  ) : (\n    <UserDisplayName user={provider} intl={intl} />\n  );\n\n  const transitionMessage = resolveTransitionMessage(\n    transaction,\n    transition,\n    listingTitle,\n    ownRole,\n    otherUsersName,\n    onOpenReviewModal\n  );\n  const currentTransition = transition.transition;\n\n  const deletedReviewContent = intl.formatMessage({ id: 'ActivityFeed.deletedReviewContent' });\n  let reviewComponent = null;\n\n  if (transitionIsReviewed(lastTransition)) {\n    if (isCustomerReview(currentTransition)) {\n      const review = reviewByAuthorId(currentTransaction, customer.id);\n      reviewComponent = review ? (\n        <Review content={review.attributes.content} rating={review.attributes.rating} />\n      ) : (\n        <Review content={deletedReviewContent} />\n      );\n    } else if (isProviderReview(currentTransition)) {\n      const review = reviewByAuthorId(currentTransaction, provider.id);\n      reviewComponent = review ? (\n        <Review content={review.attributes.content} rating={review.attributes.rating} />\n      ) : (\n        <Review content={deletedReviewContent} />\n      );\n    }\n  }\n\n  const todayString = intl.formatMessage({ id: 'ActivityFeed.today' });\n\n  return (\n    <div className={css.transition}>\n      <div className={css.bullet}>\n        <p className={css.transitionContent}>•</p>\n      </div>\n      <div>\n        <p className={css.transitionContent}>{transitionMessage}</p>\n        <p className={css.transitionDate}>\n          {formatDateWithProximity(transition.createdAt, intl, todayString)}\n        </p>\n        {reviewComponent}\n      </div>\n    </div>\n  );\n};\n\nTransition.propTypes = {\n  transition: propTypes.transition.isRequired,\n  transaction: propTypes.transaction.isRequired,\n  currentUser: propTypes.currentUser.isRequired,\n  intl: intlShape.isRequired,\n  onOpenReviewModal: func.isRequired,\n};\n\nconst EmptyTransition = () => {\n  return (\n    <div className={css.transition}>\n      <div className={css.bullet}>\n        <p className={css.transitionContent}>•</p>\n      </div>\n      <div>\n        <p className={css.transitionContent} />\n        <p className={css.transitionDate} />\n      </div>\n    </div>\n  );\n};\n\nconst isMessage = item => item && item.type === 'message';\n\n// Compare function for sorting an array containing messages and transitions\nconst compareItems = (a, b) => {\n  const itemDate = item => (isMessage(item) ? item.attributes.createdAt : item.createdAt);\n  return itemDate(a) - itemDate(b);\n};\n\nconst organizedItems = (messages, transitions, hideOldTransitions) => {\n  const items = messages.concat(transitions).sort(compareItems);\n  if (hideOldTransitions) {\n    // Hide transitions that happened before the oldest message. Since\n    // we have older items (messages) that we are not showing, seeing\n    // old transitions would be confusing.\n    return dropWhile(items, i => !isMessage(i));\n  } else {\n    return items;\n  }\n};\n\nexport const ActivityFeedComponent = props => {\n  const {\n    rootClassName,\n    className,\n    messages,\n    transaction,\n    currentUser,\n    hasOlderMessages,\n    onOpenReviewModal,\n    onShowOlderMessages,\n    fetchMessagesInProgress,\n    intl,\n  } = props;\n  const classes = classNames(rootClassName || css.root, className);\n\n  const currentTransaction = ensureTransaction(transaction);\n  const transitions = currentTransaction.attributes.transitions\n    ? currentTransaction.attributes.transitions\n    : [];\n  const currentCustomer = ensureUser(currentTransaction.customer);\n  const currentProvider = ensureUser(currentTransaction.provider);\n  const currentListing = ensureListing(currentTransaction.listing);\n\n  const transitionsAvailable = !!(\n    currentUser &&\n    currentUser.id &&\n    currentCustomer.id &&\n    currentProvider.id &&\n    currentListing.id\n  );\n\n  // combine messages and transaction transitions\n  const items = organizedItems(messages, transitions, hasOlderMessages || fetchMessagesInProgress);\n\n  const transitionComponent = transition => {\n    if (transitionsAvailable) {\n      return (\n        <Transition\n          transition={transition}\n          transaction={transaction}\n          currentUser={currentUser}\n          intl={intl}\n          onOpenReviewModal={onOpenReviewModal}\n        />\n      );\n    } else {\n      return <EmptyTransition />;\n    }\n  };\n\n  const messageComponent = message => {\n    const isOwnMessage =\n      message.sender &&\n      message.sender.id &&\n      currentUser &&\n      currentUser.id &&\n      message.sender.id.uuid === currentUser.id.uuid;\n    if (isOwnMessage) {\n      return <OwnMessage message={message} intl={intl} />;\n    }\n    return <Message message={message} intl={intl} />;\n  };\n\n  const messageListItem = message => {\n    return (\n      <li id={`msg-${message.id.uuid}`} key={message.id.uuid} className={css.messageItem}>\n        {messageComponent(message)}\n      </li>\n    );\n  };\n\n  const transitionListItem = transition => {\n    if (isRelevantPastTransition(transition.transition)) {\n      return (\n        <li key={transition.transition} className={css.transitionItem}>\n          {transitionComponent(transition)}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <ul className={classes}>\n      {hasOlderMessages ? (\n        <li className={css.showOlderWrapper} key=\"show-older-messages\">\n          <InlineTextButton className={css.showOlderButton} onClick={onShowOlderMessages}>\n            <FormattedMessage id=\"ActivityFeed.showOlderMessages\" />\n          </InlineTextButton>\n        </li>\n      ) : null}\n      {items.map(item => {\n        if (isMessage(item)) {\n          return messageListItem(item);\n        } else {\n          return transitionListItem(item);\n        }\n      })}\n    </ul>\n  );\n};\n\nActivityFeedComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n};\n\nActivityFeedComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n\n  currentUser: propTypes.currentUser,\n  transaction: propTypes.transaction,\n  messages: arrayOf(propTypes.message),\n  hasOlderMessages: bool.isRequired,\n  onOpenReviewModal: func.isRequired,\n  onShowOlderMessages: func.isRequired,\n  fetchMessagesInProgress: bool.isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst ActivityFeed = injectIntl(ActivityFeedComponent);\n\nexport default ActivityFeed;\n"]},"metadata":{},"sourceType":"module"}