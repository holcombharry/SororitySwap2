{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/FieldRadioButton/FieldRadioButton.js\";\nimport React from 'react';\nimport { node, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Field } from 'react-final-form';\nimport css from './FieldRadioButton.module.css';\n\nconst IconRadioButton = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: props.className,\n    width: \"14\",\n    height: \"14\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: props.showAsRequired ? css.required : css.notChecked,\n    cx: \"5\",\n    cy: \"19\",\n    r: \"6\",\n    transform: \"translate(2 -12)\",\n    strokeWidth: \"2\",\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: css.checked,\n    transform: \"translate(2 -12)\",\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    strokeWidth: \"2\",\n    cx: \"5\",\n    cy: \"19\",\n    r: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#FFF\",\n    fillRule: \"nonzero\",\n    cx: \"5\",\n    cy: \"19\",\n    r: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_c = IconRadioButton;\nIconRadioButton.defaultProps = {\n  className: null\n};\nIconRadioButton.propTypes = {\n  className: string\n};\n\nconst FieldRadioButtonComponent = props => {\n  const {\n    rootClassName,\n    className,\n    svgClassName,\n    id,\n    label,\n    showAsRequired,\n    ...rest\n  } = props;\n  const classes = classNames(rootClassName || css.root, className);\n  const radioButtonProps = {\n    id,\n    className: css.input,\n    component: 'input',\n    type: 'radio',\n    ...rest\n  };\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, Object.assign({}, radioButtonProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: css.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.radioButtonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconRadioButton, {\n    className: svgClassName,\n    showAsRequired: showAsRequired,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: css.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, label)));\n};\n\n_c2 = FieldRadioButtonComponent;\nFieldRadioButtonComponent.defaultProps = {\n  className: null,\n  rootClassName: null,\n  svgClassName: null,\n  label: null\n};\nFieldRadioButtonComponent.propTypes = {\n  className: string,\n  rootClassName: string,\n  svgClassName: string,\n  // Id is needed to connect the label with input.\n  id: string.isRequired,\n  label: node,\n  // Name groups several RadioButtones to an array of selected values\n  name: string.isRequired,\n  // RadioButton needs a value that is passed forward when user checks the RadioButton\n  value: string.isRequired\n};\nexport default FieldRadioButtonComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IconRadioButton\");\n$RefreshReg$(_c2, \"FieldRadioButtonComponent\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/FieldRadioButton/FieldRadioButton.js"],"names":["React","node","string","classNames","Field","css","IconRadioButton","props","className","showAsRequired","required","notChecked","checked","defaultProps","propTypes","FieldRadioButtonComponent","rootClassName","svgClassName","id","label","rest","classes","root","radioButtonProps","input","component","type","radioButtonWrapper","text","isRequired","name","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Field } from 'react-final-form';\n\nimport css from './FieldRadioButton.module.css';\n\nconst IconRadioButton = props => {\n  return (\n    <div>\n      <svg className={props.className} width=\"14\" height=\"14\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle\n          className={props.showAsRequired ? css.required : css.notChecked}\n          cx=\"5\"\n          cy=\"19\"\n          r=\"6\"\n          transform=\"translate(2 -12)\"\n          strokeWidth=\"2\"\n          fill=\"none\"\n          fillRule=\"evenodd\"\n        />\n\n        <g className={css.checked} transform=\"translate(2 -12)\" fill=\"none\" fillRule=\"evenodd\">\n          <circle strokeWidth=\"2\" cx=\"5\" cy=\"19\" r=\"6\" />\n          <circle fill=\"#FFF\" fillRule=\"nonzero\" cx=\"5\" cy=\"19\" r=\"3\" />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nIconRadioButton.defaultProps = { className: null };\n\nIconRadioButton.propTypes = { className: string };\n\nconst FieldRadioButtonComponent = props => {\n  const { rootClassName, className, svgClassName, id, label, showAsRequired, ...rest } = props;\n\n  const classes = classNames(rootClassName || css.root, className);\n  const radioButtonProps = {\n    id,\n    className: css.input,\n    component: 'input',\n    type: 'radio',\n    ...rest,\n  };\n\n  return (\n    <span className={classes}>\n      <Field {...radioButtonProps} />\n      <label htmlFor={id} className={css.label}>\n        <span className={css.radioButtonWrapper}>\n          <IconRadioButton className={svgClassName} showAsRequired={showAsRequired} />\n        </span>\n        <span className={css.text}>{label}</span>\n      </label>\n    </span>\n  );\n};\n\nFieldRadioButtonComponent.defaultProps = {\n  className: null,\n  rootClassName: null,\n  svgClassName: null,\n  label: null,\n};\n\nFieldRadioButtonComponent.propTypes = {\n  className: string,\n  rootClassName: string,\n  svgClassName: string,\n\n  // Id is needed to connect the label with input.\n  id: string.isRequired,\n  label: node,\n\n  // Name groups several RadioButtones to an array of selected values\n  name: string.isRequired,\n\n  // RadioButton needs a value that is passed forward when user checks the RadioButton\n  value: string.isRequired,\n};\n\nexport default FieldRadioButtonComponent;\n"]},"metadata":{},"sourceType":"module"}