{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/FieldSelect/FieldSelect.example.js\";\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldSelect from './FieldSelect';\n\nconst FormComponent = props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  render: fieldRenderProps => {\n    const {\n      form,\n      handleSubmit,\n      onChange,\n      invalid,\n      pristine,\n      submitting\n    } = fieldRenderProps;\n    const required = validators.required('This field is required');\n    const submitDisabled = invalid || pristine || submitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormSpy, {\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldSelect, {\n      id: \"select1\",\n      name: \"select1\",\n      label: \"Choose an option:\",\n      validate: required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Pick something...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"first\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"First option\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"second\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Second option\")), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginTop: 24\n      },\n      type: \"submit\",\n      disabled: submitDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}));\n\n_c = FormComponent;\nexport const Select = {\n  component: FormComponent,\n  props: {\n    onChange: formState => {\n      if (formState.values.select1) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('submit values:', values);\n      return false;\n    }\n  },\n  group: 'inputs'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/FieldSelect/FieldSelect.example.js"],"names":["React","Form","FinalForm","FormSpy","validators","Button","FieldSelect","FormComponent","props","fieldRenderProps","form","handleSubmit","onChange","invalid","pristine","submitting","required","submitDisabled","e","preventDefault","marginTop","Select","component","formState","values","select1","console","log","onSubmit","group"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,SAAjB,EAA4BC,OAA5B,QAA2C,kBAA3C;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,iBACzB,oBAAC,SAAD,oBACMA,KADN;AAEE,EAAA,MAAM,EAAEC,gBAAgB,IAAI;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,YAAR;AAAsBC,MAAAA,QAAtB;AAAgCC,MAAAA,OAAhC;AAAyCC,MAAAA,QAAzC;AAAmDC,MAAAA;AAAnD,QAAkEN,gBAAxE;AACA,UAAMO,QAAQ,GAAGZ,UAAU,CAACY,QAAX,CAAoB,wBAApB,CAAjB;AACA,UAAMC,cAAc,GAAGJ,OAAO,IAAIC,QAAX,IAAuBC,UAA9C;AACA,wBACE;AACE,MAAA,QAAQ,EAAEG,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAR,QAAAA,YAAY,CAACO,CAAD,CAAZ;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEN,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,SAA/B;AAAyC,MAAA,KAAK,EAAC,mBAA/C;AAAmE,MAAA,QAAQ,EAAEI,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CAPF,eAYE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAgD,MAAA,QAAQ,EAAEH,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CADF;AAkBD,GAxBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;KAAMV,a;AA6BN,OAAO,MAAMc,MAAM,GAAG;AACpBC,EAAAA,SAAS,EAAEf,aADS;AAEpBC,EAAAA,KAAK,EAAE;AACLI,IAAAA,QAAQ,EAAEW,SAAS,IAAI;AACrB,UAAIA,SAAS,CAACC,MAAV,CAAiBC,OAArB,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,SAAS,CAACC,MAAjD;AACD;AACF,KALI;AAMLI,IAAAA,QAAQ,EAAEJ,MAAM,IAAI;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,MAA9B;AACA,aAAO,KAAP;AACD;AATI,GAFa;AAapBK,EAAAA,KAAK,EAAE;AAba,CAAf","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldSelect from './FieldSelect';\n\nconst FormComponent = props => (\n  <FinalForm\n    {...props}\n    render={fieldRenderProps => {\n      const { form, handleSubmit, onChange, invalid, pristine, submitting } = fieldRenderProps;\n      const required = validators.required('This field is required');\n      const submitDisabled = invalid || pristine || submitting;\n      return (\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            handleSubmit(e);\n          }}\n        >\n          <FormSpy onChange={onChange} />\n          <FieldSelect id=\"select1\" name=\"select1\" label=\"Choose an option:\" validate={required}>\n            <option value=\"\">Pick something...</option>\n            <option value=\"first\">First option</option>\n            <option value=\"second\">Second option</option>\n          </FieldSelect>\n          <Button style={{ marginTop: 24 }} type=\"submit\" disabled={submitDisabled}>\n            Submit\n          </Button>\n        </form>\n      );\n    }}\n  />\n);\n\nexport const Select = {\n  component: FormComponent,\n  props: {\n    onChange: formState => {\n      if (formState.values.select1) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('submit values:', values);\n      return false;\n    },\n  },\n  group: 'inputs',\n};\n"]},"metadata":{},"sourceType":"module"}