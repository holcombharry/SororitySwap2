{"ast":null,"code":"import pick from 'lodash/pick';\nimport config from '../../config';\nimport { types as sdkTypes, util as sdkUtil, createImageVariantConfig } from '../../util/sdkLoader';\nimport { getStartOf, addTime } from '../../util/dates';\nimport { storableError } from '../../util/errors';\nimport { addMarketplaceEntities } from '../../ducks/marketplaceData.duck';\nimport { transactionLineItems } from '../../util/api';\nimport * as log from '../../util/log';\nimport { denormalisedResponseEntities } from '../../util/data';\nimport { TRANSITION_ENQUIRE } from '../../util/transaction';\nimport { LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT } from '../../util/urlHelpers';\nimport { fetchCurrentUser, fetchCurrentUserHasOrdersSuccess } from '../../ducks/user.duck';\nconst {\n  UUID\n} = sdkTypes; // ================ Action types ================ //\n\nexport const SET_INITIAL_VALUES = 'app/ListingPage/SET_INITIAL_VALUES';\nexport const SHOW_LISTING_REQUEST = 'app/ListingPage/SHOW_LISTING_REQUEST';\nexport const SHOW_LISTING_ERROR = 'app/ListingPage/SHOW_LISTING_ERROR';\nexport const FETCH_REVIEWS_REQUEST = 'app/ListingPage/FETCH_REVIEWS_REQUEST';\nexport const FETCH_REVIEWS_SUCCESS = 'app/ListingPage/FETCH_REVIEWS_SUCCESS';\nexport const FETCH_REVIEWS_ERROR = 'app/ListingPage/FETCH_REVIEWS_ERROR';\nexport const FETCH_TIME_SLOTS_REQUEST = 'app/ListingPage/FETCH_TIME_SLOTS_REQUEST';\nexport const FETCH_TIME_SLOTS_SUCCESS = 'app/ListingPage/FETCH_TIME_SLOTS_SUCCESS';\nexport const FETCH_TIME_SLOTS_ERROR = 'app/ListingPage/FETCH_TIME_SLOTS_ERROR';\nexport const FETCH_LINE_ITEMS_REQUEST = 'app/ListingPage/FETCH_LINE_ITEMS_REQUEST';\nexport const FETCH_LINE_ITEMS_SUCCESS = 'app/ListingPage/FETCH_LINE_ITEMS_SUCCESS';\nexport const FETCH_LINE_ITEMS_ERROR = 'app/ListingPage/FETCH_LINE_ITEMS_ERROR';\nexport const SEND_ENQUIRY_REQUEST = 'app/ListingPage/SEND_ENQUIRY_REQUEST';\nexport const SEND_ENQUIRY_SUCCESS = 'app/ListingPage/SEND_ENQUIRY_SUCCESS';\nexport const SEND_ENQUIRY_ERROR = 'app/ListingPage/SEND_ENQUIRY_ERROR'; // ================ Reducer ================ //\n\nconst initialState = {\n  id: null,\n  showListingError: null,\n  reviews: [],\n  fetchReviewsError: null,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n  lineItems: null,\n  fetchLineItemsInProgress: false,\n  fetchLineItemsError: null,\n  sendEnquiryInProgress: false,\n  sendEnquiryError: null,\n  enquiryModalOpenForListingId: null\n};\n\nconst listingPageReducer = (state = initialState, action = {}) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_INITIAL_VALUES:\n      return { ...initialState,\n        ...payload\n      };\n\n    case SHOW_LISTING_REQUEST:\n      return { ...state,\n        id: payload.id,\n        showListingError: null\n      };\n\n    case SHOW_LISTING_ERROR:\n      return { ...state,\n        showListingError: payload\n      };\n\n    case FETCH_REVIEWS_REQUEST:\n      return { ...state,\n        fetchReviewsError: null\n      };\n\n    case FETCH_REVIEWS_SUCCESS:\n      return { ...state,\n        reviews: payload\n      };\n\n    case FETCH_REVIEWS_ERROR:\n      return { ...state,\n        fetchReviewsError: payload\n      };\n\n    case FETCH_TIME_SLOTS_REQUEST:\n      return { ...state,\n        fetchTimeSlotsError: null\n      };\n\n    case FETCH_TIME_SLOTS_SUCCESS:\n      return { ...state,\n        timeSlots: payload\n      };\n\n    case FETCH_TIME_SLOTS_ERROR:\n      return { ...state,\n        fetchTimeSlotsError: payload\n      };\n\n    case FETCH_LINE_ITEMS_REQUEST:\n      return { ...state,\n        fetchLineItemsInProgress: true,\n        fetchLineItemsError: null\n      };\n\n    case FETCH_LINE_ITEMS_SUCCESS:\n      return { ...state,\n        fetchLineItemsInProgress: false,\n        lineItems: payload\n      };\n\n    case FETCH_LINE_ITEMS_ERROR:\n      return { ...state,\n        fetchLineItemsInProgress: false,\n        fetchLineItemsError: payload\n      };\n\n    case SEND_ENQUIRY_REQUEST:\n      return { ...state,\n        sendEnquiryInProgress: true,\n        sendEnquiryError: null\n      };\n\n    case SEND_ENQUIRY_SUCCESS:\n      return { ...state,\n        sendEnquiryInProgress: false\n      };\n\n    case SEND_ENQUIRY_ERROR:\n      return { ...state,\n        sendEnquiryInProgress: false,\n        sendEnquiryError: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default listingPageReducer; // ================ Action creators ================ //\n\nexport const setInitialValues = initialValues => ({\n  type: SET_INITIAL_VALUES,\n  payload: pick(initialValues, Object.keys(initialState))\n});\nexport const showListingRequest = id => ({\n  type: SHOW_LISTING_REQUEST,\n  payload: {\n    id\n  }\n});\nexport const showListingError = e => ({\n  type: SHOW_LISTING_ERROR,\n  error: true,\n  payload: e\n});\nexport const fetchReviewsRequest = () => ({\n  type: FETCH_REVIEWS_REQUEST\n});\nexport const fetchReviewsSuccess = reviews => ({\n  type: FETCH_REVIEWS_SUCCESS,\n  payload: reviews\n});\nexport const fetchReviewsError = error => ({\n  type: FETCH_REVIEWS_ERROR,\n  error: true,\n  payload: error\n});\nexport const fetchTimeSlotsRequest = () => ({\n  type: FETCH_TIME_SLOTS_REQUEST\n});\nexport const fetchTimeSlotsSuccess = timeSlots => ({\n  type: FETCH_TIME_SLOTS_SUCCESS,\n  payload: timeSlots\n});\nexport const fetchTimeSlotsError = error => ({\n  type: FETCH_TIME_SLOTS_ERROR,\n  error: true,\n  payload: error\n});\nexport const fetchLineItemsRequest = () => ({\n  type: FETCH_LINE_ITEMS_REQUEST\n});\nexport const fetchLineItemsSuccess = lineItems => ({\n  type: FETCH_LINE_ITEMS_SUCCESS,\n  payload: lineItems\n});\nexport const fetchLineItemsError = error => ({\n  type: FETCH_LINE_ITEMS_ERROR,\n  error: true,\n  payload: error\n});\nexport const sendEnquiryRequest = () => ({\n  type: SEND_ENQUIRY_REQUEST\n});\nexport const sendEnquirySuccess = () => ({\n  type: SEND_ENQUIRY_SUCCESS\n});\nexport const sendEnquiryError = e => ({\n  type: SEND_ENQUIRY_ERROR,\n  error: true,\n  payload: e\n}); // ================ Thunks ================ //\n\nexport const showListing = (listingId, isOwn = false) => (dispatch, getState, sdk) => {\n  const {\n    aspectWidth = 1,\n    aspectHeight = 1,\n    variantPrefix = 'listing-card'\n  } = config.listing;\n  const aspectRatio = aspectHeight / aspectWidth;\n  dispatch(showListingRequest(listingId));\n  dispatch(fetchCurrentUser());\n  const params = {\n    id: listingId,\n    include: ['author', 'author.profileImage', 'images', 'currentStock'],\n    'fields.image': [// Scaled variants for large images\n    'variants.scaled-small', 'variants.scaled-medium', 'variants.scaled-large', 'variants.scaled-xlarge', // Cropped variants for listing thumbnail images\n    `variants.${variantPrefix}`, `variants.${variantPrefix}-2x`, `variants.${variantPrefix}-4x`, `variants.${variantPrefix}-6x`, // Social media\n    'variants.facebook', 'variants.twitter', // Avatars\n    'variants.square-small', 'variants.square-small2x'],\n    ...createImageVariantConfig(`${variantPrefix}`, 400, aspectRatio),\n    ...createImageVariantConfig(`${variantPrefix}-2x`, 800, aspectRatio),\n    ...createImageVariantConfig(`${variantPrefix}-4x`, 1600, aspectRatio),\n    ...createImageVariantConfig(`${variantPrefix}-6x`, 2400, aspectRatio)\n  };\n  const show = isOwn ? sdk.ownListings.show(params) : sdk.listings.show(params);\n  return show.then(data => {\n    dispatch(addMarketplaceEntities(data));\n    return data;\n  }).catch(e => {\n    dispatch(showListingError(storableError(e)));\n  });\n};\nexport const fetchReviews = listingId => (dispatch, getState, sdk) => {\n  dispatch(fetchReviewsRequest());\n  return sdk.reviews.query({\n    listing_id: listingId,\n    state: 'public',\n    include: ['author', 'author.profileImage'],\n    'fields.image': ['variants.square-small', 'variants.square-small2x']\n  }).then(response => {\n    const reviews = denormalisedResponseEntities(response);\n    dispatch(fetchReviewsSuccess(reviews));\n  }).catch(e => {\n    dispatch(fetchReviewsError(storableError(e)));\n  });\n};\n\nconst timeSlotsRequest = params => (dispatch, getState, sdk) => {\n  return sdk.timeslots.query(params).then(response => {\n    return denormalisedResponseEntities(response);\n  });\n};\n\nexport const fetchTimeSlots = listingId => (dispatch, getState, sdk) => {\n  dispatch(fetchTimeSlotsRequest); // Time slots can be fetched for 90 days at a time,\n  // for at most 180 days from now. If max number of bookable\n  // day exceeds 90, a second request is made.\n\n  const maxTimeSlots = 90; // booking range: today + bookable days -1\n\n  const bookingRange = config.dayCountAvailableForBooking - 1;\n  const timeSlotsRange = Math.min(bookingRange, maxTimeSlots);\n  const now = new Date();\n  const start = getStartOf(now, 'day', 'Etc/UTC');\n  const end = addTime(start, timeSlotsRange, 'days', 'Etc/UTC');\n  const params = {\n    listingId,\n    start,\n    end\n  };\n  return dispatch(timeSlotsRequest(params)).then(timeSlots => {\n    const secondRequest = bookingRange > maxTimeSlots;\n\n    if (secondRequest) {\n      const secondRange = Math.min(maxTimeSlots, bookingRange - maxTimeSlots);\n      const secondParams = {\n        listingId,\n        start: end,\n        end: addTime(end, secondRange, 'days', 'Etc/UTC')\n      };\n      return dispatch(timeSlotsRequest(secondParams)).then(secondBatch => {\n        const combined = timeSlots.concat(secondBatch);\n        dispatch(fetchTimeSlotsSuccess(combined));\n      });\n    } else {\n      dispatch(fetchTimeSlotsSuccess(timeSlots));\n    }\n  }).catch(e => {\n    dispatch(fetchTimeSlotsError(storableError(e)));\n  });\n};\nexport const sendEnquiry = (listingId, message) => (dispatch, getState, sdk) => {\n  dispatch(sendEnquiryRequest());\n  const bodyParams = {\n    transition: TRANSITION_ENQUIRE,\n    processAlias: config.transactionProcessAlias,\n    params: {\n      listingId\n    }\n  };\n  return sdk.transactions.initiate(bodyParams).then(response => {\n    const transactionId = response.data.data.id; // Send the message to the created transaction\n\n    return sdk.messages.send({\n      transactionId,\n      content: message\n    }).then(() => {\n      dispatch(sendEnquirySuccess());\n      dispatch(fetchCurrentUserHasOrdersSuccess(true));\n      return transactionId;\n    });\n  }).catch(e => {\n    dispatch(sendEnquiryError(storableError(e)));\n    throw e;\n  });\n};\nexport const fetchTransactionLineItems = ({\n  orderData,\n  listingId,\n  isOwnListing\n}) => dispatch => {\n  dispatch(fetchLineItemsRequest());\n  transactionLineItems({\n    orderData,\n    listingId,\n    isOwnListing\n  }).then(response => {\n    const lineItems = response.data;\n    dispatch(fetchLineItemsSuccess(lineItems));\n  }).catch(e => {\n    dispatch(fetchLineItemsError(storableError(e)));\n    log.error(e, 'fetching-line-items-failed', {\n      listingId: listingId.uuid,\n      orderData\n    });\n  });\n};\nexport const loadData = (params, search) => dispatch => {\n  const listingId = new UUID(params.id); // Clear old line-items\n\n  dispatch(setInitialValues({\n    lineItems: null\n  }));\n  const ownListingVariants = [LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT];\n\n  if (ownListingVariants.includes(params.variant)) {\n    return dispatch(showListing(listingId, true));\n  }\n\n  if (config.listingManagementType === 'availability') {\n    return Promise.all([dispatch(showListing(listingId)), dispatch(fetchTimeSlots(listingId)), dispatch(fetchReviews(listingId))]);\n  } else {\n    return Promise.all([dispatch(showListing(listingId)), dispatch(fetchReviews(listingId))]);\n  }\n};","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/ListingPage/ListingPage.duck.js"],"names":["pick","config","types","sdkTypes","util","sdkUtil","createImageVariantConfig","getStartOf","addTime","storableError","addMarketplaceEntities","transactionLineItems","log","denormalisedResponseEntities","TRANSITION_ENQUIRE","LISTING_PAGE_DRAFT_VARIANT","LISTING_PAGE_PENDING_APPROVAL_VARIANT","fetchCurrentUser","fetchCurrentUserHasOrdersSuccess","UUID","SET_INITIAL_VALUES","SHOW_LISTING_REQUEST","SHOW_LISTING_ERROR","FETCH_REVIEWS_REQUEST","FETCH_REVIEWS_SUCCESS","FETCH_REVIEWS_ERROR","FETCH_TIME_SLOTS_REQUEST","FETCH_TIME_SLOTS_SUCCESS","FETCH_TIME_SLOTS_ERROR","FETCH_LINE_ITEMS_REQUEST","FETCH_LINE_ITEMS_SUCCESS","FETCH_LINE_ITEMS_ERROR","SEND_ENQUIRY_REQUEST","SEND_ENQUIRY_SUCCESS","SEND_ENQUIRY_ERROR","initialState","id","showListingError","reviews","fetchReviewsError","timeSlots","fetchTimeSlotsError","lineItems","fetchLineItemsInProgress","fetchLineItemsError","sendEnquiryInProgress","sendEnquiryError","enquiryModalOpenForListingId","listingPageReducer","state","action","type","payload","setInitialValues","initialValues","Object","keys","showListingRequest","e","error","fetchReviewsRequest","fetchReviewsSuccess","fetchTimeSlotsRequest","fetchTimeSlotsSuccess","fetchLineItemsRequest","fetchLineItemsSuccess","sendEnquiryRequest","sendEnquirySuccess","showListing","listingId","isOwn","dispatch","getState","sdk","aspectWidth","aspectHeight","variantPrefix","listing","aspectRatio","params","include","show","ownListings","listings","then","data","catch","fetchReviews","query","listing_id","response","timeSlotsRequest","timeslots","fetchTimeSlots","maxTimeSlots","bookingRange","dayCountAvailableForBooking","timeSlotsRange","Math","min","now","Date","start","end","secondRequest","secondRange","secondParams","secondBatch","combined","concat","sendEnquiry","message","bodyParams","transition","processAlias","transactionProcessAlias","transactions","initiate","transactionId","messages","send","content","fetchTransactionLineItems","orderData","isOwnListing","uuid","loadData","search","ownListingVariants","includes","variant","listingManagementType","Promise","all"],"mappings":"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","sourcesContent":["import pick from 'lodash/pick';\n\nimport config from '../../config';\nimport { types as sdkTypes, util as sdkUtil, createImageVariantConfig } from '../../util/sdkLoader';\nimport { getStartOf, addTime } from '../../util/dates';\nimport { storableError } from '../../util/errors';\nimport { addMarketplaceEntities } from '../../ducks/marketplaceData.duck';\nimport { transactionLineItems } from '../../util/api';\nimport * as log from '../../util/log';\nimport { denormalisedResponseEntities } from '../../util/data';\nimport { TRANSITION_ENQUIRE } from '../../util/transaction';\nimport {\n  LISTING_PAGE_DRAFT_VARIANT,\n  LISTING_PAGE_PENDING_APPROVAL_VARIANT,\n} from '../../util/urlHelpers';\nimport { fetchCurrentUser, fetchCurrentUserHasOrdersSuccess } from '../../ducks/user.duck';\n\nconst { UUID } = sdkTypes;\n\n// ================ Action types ================ //\n\nexport const SET_INITIAL_VALUES = 'app/ListingPage/SET_INITIAL_VALUES';\n\nexport const SHOW_LISTING_REQUEST = 'app/ListingPage/SHOW_LISTING_REQUEST';\nexport const SHOW_LISTING_ERROR = 'app/ListingPage/SHOW_LISTING_ERROR';\n\nexport const FETCH_REVIEWS_REQUEST = 'app/ListingPage/FETCH_REVIEWS_REQUEST';\nexport const FETCH_REVIEWS_SUCCESS = 'app/ListingPage/FETCH_REVIEWS_SUCCESS';\nexport const FETCH_REVIEWS_ERROR = 'app/ListingPage/FETCH_REVIEWS_ERROR';\n\nexport const FETCH_TIME_SLOTS_REQUEST = 'app/ListingPage/FETCH_TIME_SLOTS_REQUEST';\nexport const FETCH_TIME_SLOTS_SUCCESS = 'app/ListingPage/FETCH_TIME_SLOTS_SUCCESS';\nexport const FETCH_TIME_SLOTS_ERROR = 'app/ListingPage/FETCH_TIME_SLOTS_ERROR';\n\nexport const FETCH_LINE_ITEMS_REQUEST = 'app/ListingPage/FETCH_LINE_ITEMS_REQUEST';\nexport const FETCH_LINE_ITEMS_SUCCESS = 'app/ListingPage/FETCH_LINE_ITEMS_SUCCESS';\nexport const FETCH_LINE_ITEMS_ERROR = 'app/ListingPage/FETCH_LINE_ITEMS_ERROR';\n\nexport const SEND_ENQUIRY_REQUEST = 'app/ListingPage/SEND_ENQUIRY_REQUEST';\nexport const SEND_ENQUIRY_SUCCESS = 'app/ListingPage/SEND_ENQUIRY_SUCCESS';\nexport const SEND_ENQUIRY_ERROR = 'app/ListingPage/SEND_ENQUIRY_ERROR';\n\n// ================ Reducer ================ //\n\nconst initialState = {\n  id: null,\n  showListingError: null,\n  reviews: [],\n  fetchReviewsError: null,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n  lineItems: null,\n  fetchLineItemsInProgress: false,\n  fetchLineItemsError: null,\n  sendEnquiryInProgress: false,\n  sendEnquiryError: null,\n  enquiryModalOpenForListingId: null,\n};\n\nconst listingPageReducer = (state = initialState, action = {}) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_INITIAL_VALUES:\n      return { ...initialState, ...payload };\n\n    case SHOW_LISTING_REQUEST:\n      return { ...state, id: payload.id, showListingError: null };\n    case SHOW_LISTING_ERROR:\n      return { ...state, showListingError: payload };\n\n    case FETCH_REVIEWS_REQUEST:\n      return { ...state, fetchReviewsError: null };\n    case FETCH_REVIEWS_SUCCESS:\n      return { ...state, reviews: payload };\n    case FETCH_REVIEWS_ERROR:\n      return { ...state, fetchReviewsError: payload };\n\n    case FETCH_TIME_SLOTS_REQUEST:\n      return { ...state, fetchTimeSlotsError: null };\n    case FETCH_TIME_SLOTS_SUCCESS:\n      return { ...state, timeSlots: payload };\n    case FETCH_TIME_SLOTS_ERROR:\n      return { ...state, fetchTimeSlotsError: payload };\n\n    case FETCH_LINE_ITEMS_REQUEST:\n      return { ...state, fetchLineItemsInProgress: true, fetchLineItemsError: null };\n    case FETCH_LINE_ITEMS_SUCCESS:\n      return { ...state, fetchLineItemsInProgress: false, lineItems: payload };\n    case FETCH_LINE_ITEMS_ERROR:\n      return { ...state, fetchLineItemsInProgress: false, fetchLineItemsError: payload };\n\n    case SEND_ENQUIRY_REQUEST:\n      return { ...state, sendEnquiryInProgress: true, sendEnquiryError: null };\n    case SEND_ENQUIRY_SUCCESS:\n      return { ...state, sendEnquiryInProgress: false };\n    case SEND_ENQUIRY_ERROR:\n      return { ...state, sendEnquiryInProgress: false, sendEnquiryError: payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default listingPageReducer;\n\n// ================ Action creators ================ //\n\nexport const setInitialValues = initialValues => ({\n  type: SET_INITIAL_VALUES,\n  payload: pick(initialValues, Object.keys(initialState)),\n});\n\nexport const showListingRequest = id => ({\n  type: SHOW_LISTING_REQUEST,\n  payload: { id },\n});\n\nexport const showListingError = e => ({\n  type: SHOW_LISTING_ERROR,\n  error: true,\n  payload: e,\n});\n\nexport const fetchReviewsRequest = () => ({ type: FETCH_REVIEWS_REQUEST });\nexport const fetchReviewsSuccess = reviews => ({ type: FETCH_REVIEWS_SUCCESS, payload: reviews });\nexport const fetchReviewsError = error => ({\n  type: FETCH_REVIEWS_ERROR,\n  error: true,\n  payload: error,\n});\n\nexport const fetchTimeSlotsRequest = () => ({ type: FETCH_TIME_SLOTS_REQUEST });\nexport const fetchTimeSlotsSuccess = timeSlots => ({\n  type: FETCH_TIME_SLOTS_SUCCESS,\n  payload: timeSlots,\n});\nexport const fetchTimeSlotsError = error => ({\n  type: FETCH_TIME_SLOTS_ERROR,\n  error: true,\n  payload: error,\n});\n\nexport const fetchLineItemsRequest = () => ({ type: FETCH_LINE_ITEMS_REQUEST });\nexport const fetchLineItemsSuccess = lineItems => ({\n  type: FETCH_LINE_ITEMS_SUCCESS,\n  payload: lineItems,\n});\nexport const fetchLineItemsError = error => ({\n  type: FETCH_LINE_ITEMS_ERROR,\n  error: true,\n  payload: error,\n});\n\nexport const sendEnquiryRequest = () => ({ type: SEND_ENQUIRY_REQUEST });\nexport const sendEnquirySuccess = () => ({ type: SEND_ENQUIRY_SUCCESS });\nexport const sendEnquiryError = e => ({ type: SEND_ENQUIRY_ERROR, error: true, payload: e });\n\n// ================ Thunks ================ //\n\nexport const showListing = (listingId, isOwn = false) => (dispatch, getState, sdk) => {\n  const { aspectWidth = 1, aspectHeight = 1, variantPrefix = 'listing-card' } = config.listing;\n  const aspectRatio = aspectHeight / aspectWidth;\n\n  dispatch(showListingRequest(listingId));\n  dispatch(fetchCurrentUser());\n  const params = {\n    id: listingId,\n    include: ['author', 'author.profileImage', 'images', 'currentStock'],\n    'fields.image': [\n      // Scaled variants for large images\n      'variants.scaled-small',\n      'variants.scaled-medium',\n      'variants.scaled-large',\n      'variants.scaled-xlarge',\n\n      // Cropped variants for listing thumbnail images\n      `variants.${variantPrefix}`,\n      `variants.${variantPrefix}-2x`,\n      `variants.${variantPrefix}-4x`,\n      `variants.${variantPrefix}-6x`,\n\n      // Social media\n      'variants.facebook',\n      'variants.twitter',\n\n      // Avatars\n      'variants.square-small',\n      'variants.square-small2x',\n    ],\n    ...createImageVariantConfig(`${variantPrefix}`, 400, aspectRatio),\n    ...createImageVariantConfig(`${variantPrefix}-2x`, 800, aspectRatio),\n    ...createImageVariantConfig(`${variantPrefix}-4x`, 1600, aspectRatio),\n    ...createImageVariantConfig(`${variantPrefix}-6x`, 2400, aspectRatio),\n  };\n\n  const show = isOwn ? sdk.ownListings.show(params) : sdk.listings.show(params);\n\n  return show\n    .then(data => {\n      dispatch(addMarketplaceEntities(data));\n      return data;\n    })\n    .catch(e => {\n      dispatch(showListingError(storableError(e)));\n    });\n};\n\nexport const fetchReviews = listingId => (dispatch, getState, sdk) => {\n  dispatch(fetchReviewsRequest());\n  return sdk.reviews\n    .query({\n      listing_id: listingId,\n      state: 'public',\n      include: ['author', 'author.profileImage'],\n      'fields.image': ['variants.square-small', 'variants.square-small2x'],\n    })\n    .then(response => {\n      const reviews = denormalisedResponseEntities(response);\n      dispatch(fetchReviewsSuccess(reviews));\n    })\n    .catch(e => {\n      dispatch(fetchReviewsError(storableError(e)));\n    });\n};\n\nconst timeSlotsRequest = params => (dispatch, getState, sdk) => {\n  return sdk.timeslots.query(params).then(response => {\n    return denormalisedResponseEntities(response);\n  });\n};\n\nexport const fetchTimeSlots = listingId => (dispatch, getState, sdk) => {\n  dispatch(fetchTimeSlotsRequest);\n\n  // Time slots can be fetched for 90 days at a time,\n  // for at most 180 days from now. If max number of bookable\n  // day exceeds 90, a second request is made.\n\n  const maxTimeSlots = 90;\n  // booking range: today + bookable days -1\n  const bookingRange = config.dayCountAvailableForBooking - 1;\n  const timeSlotsRange = Math.min(bookingRange, maxTimeSlots);\n\n  const now = new Date();\n  const start = getStartOf(now, 'day', 'Etc/UTC');\n  const end = addTime(start, timeSlotsRange, 'days', 'Etc/UTC');\n  const params = { listingId, start, end };\n\n  return dispatch(timeSlotsRequest(params))\n    .then(timeSlots => {\n      const secondRequest = bookingRange > maxTimeSlots;\n\n      if (secondRequest) {\n        const secondRange = Math.min(maxTimeSlots, bookingRange - maxTimeSlots);\n        const secondParams = {\n          listingId,\n          start: end,\n          end: addTime(end, secondRange, 'days', 'Etc/UTC'),\n        };\n\n        return dispatch(timeSlotsRequest(secondParams)).then(secondBatch => {\n          const combined = timeSlots.concat(secondBatch);\n          dispatch(fetchTimeSlotsSuccess(combined));\n        });\n      } else {\n        dispatch(fetchTimeSlotsSuccess(timeSlots));\n      }\n    })\n    .catch(e => {\n      dispatch(fetchTimeSlotsError(storableError(e)));\n    });\n};\n\nexport const sendEnquiry = (listingId, message) => (dispatch, getState, sdk) => {\n  dispatch(sendEnquiryRequest());\n  const bodyParams = {\n    transition: TRANSITION_ENQUIRE,\n    processAlias: config.transactionProcessAlias,\n    params: { listingId },\n  };\n  return sdk.transactions\n    .initiate(bodyParams)\n    .then(response => {\n      const transactionId = response.data.data.id;\n\n      // Send the message to the created transaction\n      return sdk.messages.send({ transactionId, content: message }).then(() => {\n        dispatch(sendEnquirySuccess());\n        dispatch(fetchCurrentUserHasOrdersSuccess(true));\n        return transactionId;\n      });\n    })\n    .catch(e => {\n      dispatch(sendEnquiryError(storableError(e)));\n      throw e;\n    });\n};\n\nexport const fetchTransactionLineItems = ({ orderData, listingId, isOwnListing }) => dispatch => {\n  dispatch(fetchLineItemsRequest());\n  transactionLineItems({ orderData, listingId, isOwnListing })\n    .then(response => {\n      const lineItems = response.data;\n      dispatch(fetchLineItemsSuccess(lineItems));\n    })\n    .catch(e => {\n      dispatch(fetchLineItemsError(storableError(e)));\n      log.error(e, 'fetching-line-items-failed', {\n        listingId: listingId.uuid,\n        orderData,\n      });\n    });\n};\n\nexport const loadData = (params, search) => dispatch => {\n  const listingId = new UUID(params.id);\n\n  // Clear old line-items\n  dispatch(setInitialValues({ lineItems: null }));\n\n  const ownListingVariants = [LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT];\n  if (ownListingVariants.includes(params.variant)) {\n    return dispatch(showListing(listingId, true));\n  }\n\n  if (config.listingManagementType === 'availability') {\n    return Promise.all([\n      dispatch(showListing(listingId)),\n      dispatch(fetchTimeSlots(listingId)),\n      dispatch(fetchReviews(listingId)),\n    ]);\n  } else {\n    return Promise.all([dispatch(showListing(listingId)), dispatch(fetchReviews(listingId))]);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}