{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/EditListingPage/EditListingWizard/EditListingPhotosPanel/ListingImage.js\";\nimport React from 'react';\nimport { func, object, string } from 'prop-types';\nimport classNames from 'classnames'; // Import configs and util modules\n\nimport config from '../../../../config'; // Import shared components\n\nimport { AspectRatioWrapper, ImageFromFile, ResponsiveImage, IconSpinner } from '../../../../components'; // Import modules from this directory\n\nimport css from './ListingImage.module.css'; // Cross shaped button on the top-right corner of the image thumbnail\n\nconst RemoveImageButton = props => {\n  const {\n    className,\n    rootClassName,\n    onClick\n  } = props;\n  const classes = classNames(rootClassName || css.removeImage, className);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: classes,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"10px\",\n    height: \"10px\",\n    viewBox: \"0 0 10 10\",\n    version: \"1.1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    strokeWidth: \"1\",\n    fillRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-821.000000, -311.000000)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(809.000000, 299.000000)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.5833333,16.5833333 L17.4166667,16.5833333 L17.4166667,12.4170833 C17.4166667,12.1866667 17.2391667,12 17.00875,12 C16.77875,12 16.5920833,12.18625 16.5920833,12.41625 L16.5883333,16.5833333 L12.4166667,16.5833333 C12.18625,16.5833333 12,16.7695833 12,17 C12,17.23 12.18625,17.4166667 12.4166667,17.4166667 L16.5875,17.4166667 L16.5833333,21.5829167 C16.5829167,21.8129167 16.7691667,21.9995833 16.9991667,22 L16.9995833,22 C17.2295833,22 17.41625,21.81375 17.4166667,21.58375 L17.4166667,17.4166667 L21.5833333,17.4166667 C21.8133333,17.4166667 22,17.23 22,17 C22,16.7695833 21.8133333,16.5833333 21.5833333,16.5833333\",\n    transform: \"translate(17.000000, 17.000000) rotate(-45.000000) translate(-17.000000, -17.000000) \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }))))));\n}; // Cropped \"thumbnail\" of given listing image.\n// The image might be one already uploaded and attached to listing entity\n// or representing local image file (before it's uploaded & attached to listing).\n\n\n_c = RemoveImageButton;\n\nconst ListingImage = props => {\n  const {\n    className,\n    image,\n    savedImageAltText,\n    onRemoveImage\n  } = props;\n\n  const handleRemoveClick = e => {\n    e.stopPropagation();\n    onRemoveImage(image.id);\n  };\n\n  const {\n    aspectWidth = 1,\n    aspectHeight = 1,\n    variantPrefix = 'listing-card'\n  } = config.listing;\n\n  if (image.file && !image.attributes) {\n    // Add remove button only when the image has been uploaded and can be removed\n    const removeButton = image.imageId ? /*#__PURE__*/React.createElement(RemoveImageButton, {\n      onClick: handleRemoveClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 42\n      }\n    }) : null; // While image is uploading we show overlay on top of thumbnail\n\n    const uploadingOverlay = !image.imageId ? /*#__PURE__*/React.createElement(\"div\", {\n      className: css.thumbnailLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    })) : null;\n    return /*#__PURE__*/React.createElement(ImageFromFile, {\n      id: image.id,\n      className: className,\n      rootClassName: css.thumbnail,\n      file: image.file,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, removeButton, uploadingOverlay);\n  } else {\n    var _image$attributes;\n\n    const classes = classNames(css.root, className);\n    const variants = image ? Object.keys(image === null || image === void 0 ? void 0 : (_image$attributes = image.attributes) === null || _image$attributes === void 0 ? void 0 : _image$attributes.variants).filter(k => k.startsWith(variantPrefix)) : [];\n    const imgForResponsiveImage = image.imageId ? { ...image,\n      id: image.imageId\n    } : image;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AspectRatioWrapper, {\n      width: aspectWidth,\n      height: aspectHeight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveImage, {\n      rootClassName: css.rootForImage,\n      image: imgForResponsiveImage,\n      alt: savedImageAltText,\n      variants: variants,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(RemoveImageButton, {\n      onClick: handleRemoveClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\n_c2 = ListingImage;\nListingImage.defaultProps = {\n  className: null\n};\nListingImage.propTypes = {\n  className: string,\n  image: object.isRequired,\n  savedImageAltText: string.isRequired,\n  onRemoveImage: func.isRequired\n};\nexport default ListingImage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RemoveImageButton\");\n$RefreshReg$(_c2, \"ListingImage\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/EditListingPage/EditListingWizard/EditListingPhotosPanel/ListingImage.js"],"names":["React","func","object","string","classNames","config","AspectRatioWrapper","ImageFromFile","ResponsiveImage","IconSpinner","css","RemoveImageButton","props","className","rootClassName","onClick","classes","removeImage","ListingImage","image","savedImageAltText","onRemoveImage","handleRemoveClick","e","stopPropagation","id","aspectWidth","aspectHeight","variantPrefix","listing","file","attributes","removeButton","imageId","uploadingOverlay","thumbnailLoading","thumbnail","root","variants","Object","keys","filter","k","startsWith","imgForResponsiveImage","wrapper","rootForImage","defaultProps","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { func, object, string } from 'prop-types';\nimport classNames from 'classnames';\n\n// Import configs and util modules\nimport config from '../../../../config';\n\n// Import shared components\nimport {\n  AspectRatioWrapper,\n  ImageFromFile,\n  ResponsiveImage,\n  IconSpinner,\n} from '../../../../components';\n\n// Import modules from this directory\nimport css from './ListingImage.module.css';\n\n// Cross shaped button on the top-right corner of the image thumbnail\nconst RemoveImageButton = props => {\n  const { className, rootClassName, onClick } = props;\n  const classes = classNames(rootClassName || css.removeImage, className);\n  return (\n    <button className={classes} onClick={onClick}>\n      <svg\n        width=\"10px\"\n        height=\"10px\"\n        viewBox=\"0 0 10 10\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g strokeWidth=\"1\" fillRule=\"evenodd\">\n          <g transform=\"translate(-821.000000, -311.000000)\">\n            <g transform=\"translate(809.000000, 299.000000)\">\n              <path\n                d=\"M21.5833333,16.5833333 L17.4166667,16.5833333 L17.4166667,12.4170833 C17.4166667,12.1866667 17.2391667,12 17.00875,12 C16.77875,12 16.5920833,12.18625 16.5920833,12.41625 L16.5883333,16.5833333 L12.4166667,16.5833333 C12.18625,16.5833333 12,16.7695833 12,17 C12,17.23 12.18625,17.4166667 12.4166667,17.4166667 L16.5875,17.4166667 L16.5833333,21.5829167 C16.5829167,21.8129167 16.7691667,21.9995833 16.9991667,22 L16.9995833,22 C17.2295833,22 17.41625,21.81375 17.4166667,21.58375 L17.4166667,17.4166667 L21.5833333,17.4166667 C21.8133333,17.4166667 22,17.23 22,17 C22,16.7695833 21.8133333,16.5833333 21.5833333,16.5833333\"\n                transform=\"translate(17.000000, 17.000000) rotate(-45.000000) translate(-17.000000, -17.000000) \"\n              />\n            </g>\n          </g>\n        </g>\n      </svg>\n    </button>\n  );\n};\n\n// Cropped \"thumbnail\" of given listing image.\n// The image might be one already uploaded and attached to listing entity\n// or representing local image file (before it's uploaded & attached to listing).\nconst ListingImage = props => {\n  const { className, image, savedImageAltText, onRemoveImage } = props;\n  const handleRemoveClick = e => {\n    e.stopPropagation();\n    onRemoveImage(image.id);\n  };\n\n  const { aspectWidth = 1, aspectHeight = 1, variantPrefix = 'listing-card' } = config.listing;\n\n  if (image.file && !image.attributes) {\n    // Add remove button only when the image has been uploaded and can be removed\n    const removeButton = image.imageId ? <RemoveImageButton onClick={handleRemoveClick} /> : null;\n\n    // While image is uploading we show overlay on top of thumbnail\n    const uploadingOverlay = !image.imageId ? (\n      <div className={css.thumbnailLoading}>\n        <IconSpinner />\n      </div>\n    ) : null;\n\n    return (\n      <ImageFromFile\n        id={image.id}\n        className={className}\n        rootClassName={css.thumbnail}\n        file={image.file}\n      >\n        {removeButton}\n        {uploadingOverlay}\n      </ImageFromFile>\n    );\n  } else {\n    const classes = classNames(css.root, className);\n\n    const variants = image\n      ? Object.keys(image?.attributes?.variants).filter(k => k.startsWith(variantPrefix))\n      : [];\n    const imgForResponsiveImage = image.imageId ? { ...image, id: image.imageId } : image;\n\n    return (\n      <div className={classes}>\n        <div className={css.wrapper}>\n          <AspectRatioWrapper width={aspectWidth} height={aspectHeight}>\n            <ResponsiveImage\n              rootClassName={css.rootForImage}\n              image={imgForResponsiveImage}\n              alt={savedImageAltText}\n              variants={variants}\n            />\n          </AspectRatioWrapper>\n          <RemoveImageButton onClick={handleRemoveClick} />\n        </div>\n      </div>\n    );\n  }\n};\n\nListingImage.defaultProps = { className: null };\n\nListingImage.propTypes = {\n  className: string,\n  image: object.isRequired,\n  savedImageAltText: string.isRequired,\n  onRemoveImage: func.isRequired,\n};\n\nexport default ListingImage;\n"]},"metadata":{},"sourceType":"module"}