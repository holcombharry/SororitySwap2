{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/OrderBreakdown/LineItemCustomerCommissionMaybe.js\";\nimport React from 'react';\nimport { bool } from 'prop-types';\nimport { FormattedMessage, intlShape } from '../../util/reactIntl';\nimport { formatMoney } from '../../util/currency';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { LINE_ITEM_CUSTOMER_COMMISSION, propTypes } from '../../util/types';\nimport css from './OrderBreakdown.module.css';\nconst {\n  Money\n} = sdkTypes; // Validate the assumption that the commission exists and the amount\n// is zero or positive.\n\nconst isValidCommission = commissionLineItem => {\n  return commissionLineItem && commissionLineItem.lineTotal instanceof Money && commissionLineItem.lineTotal.amount >= 0;\n};\n\nconst LineItemCustomerCommissionMaybe = props => {\n  const {\n    lineItems,\n    isCustomer,\n    intl\n  } = props;\n  const customerCommissionLineItem = lineItems.find(item => item.code === LINE_ITEM_CUSTOMER_COMMISSION && !item.reversal); // If commission is passed it will be shown as a fee already reduces from the total price\n\n  let commissionItem = null;\n\n  if (isCustomer && customerCommissionLineItem) {\n    if (!isValidCommission(customerCommissionLineItem)) {\n      // eslint-disable-next-line no-console\n      console.error('invalid commission line item:', customerCommissionLineItem);\n      throw new Error('Commission should be present and the value should be zero or positive');\n    }\n\n    const commission = customerCommissionLineItem.lineTotal;\n    const formattedCommission = commission ? formatMoney(intl, commission) : null;\n    commissionItem = /*#__PURE__*/React.createElement(\"div\", {\n      className: css.lineItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: css.itemLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"OrderBreakdown.commission\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: css.itemValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, formattedCommission));\n  }\n\n  return commissionItem;\n};\n\n_c = LineItemCustomerCommissionMaybe;\nLineItemCustomerCommissionMaybe.propTypes = {\n  lineItems: propTypes.lineItems.isRequired,\n  isCustomer: bool.isRequired,\n  intl: intlShape.isRequired\n};\nexport default LineItemCustomerCommissionMaybe;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineItemCustomerCommissionMaybe\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/OrderBreakdown/LineItemCustomerCommissionMaybe.js"],"names":["React","bool","FormattedMessage","intlShape","formatMoney","types","sdkTypes","LINE_ITEM_CUSTOMER_COMMISSION","propTypes","css","Money","isValidCommission","commissionLineItem","lineTotal","amount","LineItemCustomerCommissionMaybe","props","lineItems","isCustomer","intl","customerCommissionLineItem","find","item","code","reversal","commissionItem","console","error","Error","commission","formattedCommission","lineItem","itemLabel","itemValue","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,sBAA5C;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,sBAAlC;AACA,SAASC,6BAAT,EAAwCC,SAAxC,QAAyD,kBAAzD;AAEA,OAAOC,GAAP,MAAgB,6BAAhB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYJ,QAAlB,C,CAEA;AACA;;AACA,MAAMK,iBAAiB,GAAGC,kBAAkB,IAAI;AAC9C,SACEA,kBAAkB,IAClBA,kBAAkB,CAACC,SAAnB,YAAwCH,KADxC,IAEAE,kBAAkB,CAACC,SAAnB,CAA6BC,MAA7B,IAAuC,CAHzC;AAKD,CAND;;AAQA,MAAMC,+BAA+B,GAAGC,KAAK,IAAI;AAC/C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAAkCH,KAAxC;AAEA,QAAMI,0BAA0B,GAAGH,SAAS,CAACI,IAAV,CACjCC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAchB,6BAAd,IAA+C,CAACe,IAAI,CAACE,QAD5B,CAAnC,CAH+C,CAO/C;;AACA,MAAIC,cAAc,GAAG,IAArB;;AAEA,MAAIP,UAAU,IAAIE,0BAAlB,EAA8C;AAC5C,QAAI,CAACT,iBAAiB,CAACS,0BAAD,CAAtB,EAAoD;AAClD;AACAM,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CP,0BAA/C;AACA,YAAM,IAAIQ,KAAJ,CAAU,uEAAV,CAAN;AACD;;AAED,UAAMC,UAAU,GAAGT,0BAA0B,CAACP,SAA9C;AACA,UAAMiB,mBAAmB,GAAGD,UAAU,GAAGzB,WAAW,CAACe,IAAD,EAAOU,UAAP,CAAd,GAAmC,IAAzE;AAEAJ,IAAAA,cAAc,gBACZ;AAAK,MAAA,SAAS,EAAEhB,GAAG,CAACsB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAEtB,GAAG,CAACuB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAEvB,GAAG,CAACwB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCH,mBAAjC,CAJF,CADF;AAQD;;AAED,SAAOL,cAAP;AACD,CA/BD;;KAAMV,+B;AAiCNA,+BAA+B,CAACP,SAAhC,GAA4C;AAC1CS,EAAAA,SAAS,EAAET,SAAS,CAACS,SAAV,CAAoBiB,UADW;AAE1ChB,EAAAA,UAAU,EAAEjB,IAAI,CAACiC,UAFyB;AAG1Cf,EAAAA,IAAI,EAAEhB,SAAS,CAAC+B;AAH0B,CAA5C;AAMA,eAAenB,+BAAf","sourcesContent":["import React from 'react';\nimport { bool } from 'prop-types';\nimport { FormattedMessage, intlShape } from '../../util/reactIntl';\nimport { formatMoney } from '../../util/currency';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { LINE_ITEM_CUSTOMER_COMMISSION, propTypes } from '../../util/types';\n\nimport css from './OrderBreakdown.module.css';\n\nconst { Money } = sdkTypes;\n\n// Validate the assumption that the commission exists and the amount\n// is zero or positive.\nconst isValidCommission = commissionLineItem => {\n  return (\n    commissionLineItem &&\n    commissionLineItem.lineTotal instanceof Money &&\n    commissionLineItem.lineTotal.amount >= 0\n  );\n};\n\nconst LineItemCustomerCommissionMaybe = props => {\n  const { lineItems, isCustomer, intl } = props;\n\n  const customerCommissionLineItem = lineItems.find(\n    item => item.code === LINE_ITEM_CUSTOMER_COMMISSION && !item.reversal\n  );\n\n  // If commission is passed it will be shown as a fee already reduces from the total price\n  let commissionItem = null;\n\n  if (isCustomer && customerCommissionLineItem) {\n    if (!isValidCommission(customerCommissionLineItem)) {\n      // eslint-disable-next-line no-console\n      console.error('invalid commission line item:', customerCommissionLineItem);\n      throw new Error('Commission should be present and the value should be zero or positive');\n    }\n\n    const commission = customerCommissionLineItem.lineTotal;\n    const formattedCommission = commission ? formatMoney(intl, commission) : null;\n\n    commissionItem = (\n      <div className={css.lineItem}>\n        <span className={css.itemLabel}>\n          <FormattedMessage id=\"OrderBreakdown.commission\" />\n        </span>\n        <span className={css.itemValue}>{formattedCommission}</span>\n      </div>\n    );\n  }\n\n  return commissionItem;\n};\n\nLineItemCustomerCommissionMaybe.propTypes = {\n  lineItems: propTypes.lineItems.isRequired,\n  isCustomer: bool.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default LineItemCustomerCommissionMaybe;\n"]},"metadata":{},"sourceType":"module"}