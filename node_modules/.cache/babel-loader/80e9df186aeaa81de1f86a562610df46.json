{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n\n\nmodule.exports = function Set(O, P, V, Throw) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: `O` must be an Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: `P` must be a Property Key');\n  }\n\n  if (Type(Throw) !== 'Boolean') {\n    throw new $TypeError('Assertion failed: `Throw` must be a Boolean');\n  }\n\n  if (Throw) {\n    O[P] = V; // eslint-disable-line no-param-reassign\n\n    return true;\n  } else {\n    try {\n      O[P] = V; // eslint-disable-line no-param-reassign\n    } catch (e) {\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/node_modules/airbnb-prop-types/node_modules/array.prototype.find/node_modules/es-abstract/2015/Set.js"],"names":["GetIntrinsic","require","$TypeError","IsPropertyKey","Type","module","exports","Set","O","P","V","Throw","e"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,KAAtB,EAA6B;AAC7C,MAAIP,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIN,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,MAAI,CAACC,aAAa,CAACM,CAAD,CAAlB,EAAuB;AACtB,UAAM,IAAIP,UAAJ,CAAe,8CAAf,CAAN;AACA;;AACD,MAAIE,IAAI,CAACO,KAAD,CAAJ,KAAgB,SAApB,EAA+B;AAC9B,UAAM,IAAIT,UAAJ,CAAe,6CAAf,CAAN;AACA;;AACD,MAAIS,KAAJ,EAAW;AACVH,IAAAA,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAP,CADU,CACA;;AACV,WAAO,IAAP;AACA,GAHD,MAGO;AACN,QAAI;AACHF,MAAAA,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAP,CADG,CACO;AACV,KAFD,CAEE,OAAOE,CAAP,EAAU;AACX,aAAO,KAAP;AACA;AACD;AACD,CApBD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n\nmodule.exports = function Set(O, P, V, Throw) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `O` must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: `P` must be a Property Key');\n\t}\n\tif (Type(Throw) !== 'Boolean') {\n\t\tthrow new $TypeError('Assertion failed: `Throw` must be a Boolean');\n\t}\n\tif (Throw) {\n\t\tO[P] = V; // eslint-disable-line no-param-reassign\n\t\treturn true;\n\t} else {\n\t\ttry {\n\t\t\tO[P] = V; // eslint-disable-line no-param-reassign\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}