{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/ListingPage/ListingImageGallery/ListingImageGallery.example.js\";\nimport React from 'react';\nimport { types as sdkTypes } from '../../../util/sdkLoader';\nimport ListingImageGallery from './ListingImageGallery';\nconst {\n  UUID\n} = sdkTypes;\nconst imageName = 'example-variant';\nconst imageName2x = 'example-variant-2x';\nconst imageName4x = 'example-variant-4x';\nconst imageName6x = 'example-variant-6x';\nconst imageVariants = [imageName, imageName2x, imageName4x, imageName6x];\n\nconst variant = (name, width, height) => {\n  return {\n    name,\n    width,\n    height,\n    url: `https://via.placeholder.com/${width}x${height}`\n  };\n};\n\nconst imageSquare = {\n  id: new UUID('image-square'),\n  type: 'image',\n  attributes: {\n    variants: {\n      [imageName]: variant(imageName, 400, 400),\n      [imageName2x]: variant(imageName2x, 800, 800),\n      [imageName4x]: variant(imageName4x, 1600, 1600),\n      [imageName6x]: variant(imageName6x, 2400, 2400)\n    }\n  }\n};\nconst imagePortrait = {\n  id: new UUID('image-portrait'),\n  type: 'image',\n  attributes: {\n    variants: {\n      [imageName]: variant(imageName, 400, 800),\n      [imageName2x]: variant(imageName2x, 800, 1600),\n      [imageName4x]: variant(imageName4x, 1600, 3200),\n      [imageName6x]: variant(imageName6x, 2400, 4800)\n    }\n  }\n};\nconst imageLandscape = {\n  id: new UUID('image-landscape'),\n  type: 'image',\n  attributes: {\n    variants: {\n      [imageName]: variant(imageName, 800, 400),\n      [imageName2x]: variant(imageName2x, 1600, 800),\n      [imageName4x]: variant(imageName4x, 3200, 1600),\n      [imageName6x]: variant(imageName6x, 4800, 2400)\n    }\n  }\n};\n\nconst repeat = (x, n) => {\n  return Array.from(new Array(n)).map(() => x);\n};\n\nconst Gallery = props => {\n  const styles = {\n    width: '100%',\n    maxWidth: 600\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListingImageGallery, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  })));\n};\n\n_c = Gallery;\nexport const NoImages = {\n  component: Gallery,\n  props: {\n    images: [],\n    imageVariants\n  },\n  group: 'images'\n};\nexport const SingleImage = {\n  component: Gallery,\n  props: {\n    images: [imageSquare],\n    imageVariants\n  },\n  group: 'images'\n};\nexport const VariousImages = {\n  component: Gallery,\n  props: {\n    images: [imageLandscape, imagePortrait, imageSquare, imageLandscape, imagePortrait, imageSquare],\n    imageVariants\n  },\n  group: 'images'\n};\nexport const SquareImages = {\n  component: Gallery,\n  props: {\n    images: repeat(imageSquare, 20),\n    imageVariants\n  },\n  group: 'images'\n};\nexport const PortraitImages = {\n  component: Gallery,\n  props: {\n    images: repeat(imagePortrait, 20),\n    imageVariants\n  },\n  group: 'images'\n};\nexport const LandscapeImages = {\n  component: Gallery,\n  props: {\n    images: repeat(imageLandscape, 20),\n    imageVariants\n  },\n  group: 'images'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/ListingPage/ListingImageGallery/ListingImageGallery.example.js"],"names":["React","types","sdkTypes","ListingImageGallery","UUID","imageName","imageName2x","imageName4x","imageName6x","imageVariants","variant","name","width","height","url","imageSquare","id","type","attributes","variants","imagePortrait","imageLandscape","repeat","x","n","Array","from","map","Gallery","props","styles","maxWidth","NoImages","component","images","group","SingleImage","VariousImages","SquareImages","PortraitImages","LandscapeImages"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { types as sdkTypes } from '../../../util/sdkLoader';\nimport ListingImageGallery from './ListingImageGallery';\n\nconst { UUID } = sdkTypes;\n\nconst imageName = 'example-variant';\nconst imageName2x = 'example-variant-2x';\nconst imageName4x = 'example-variant-4x';\nconst imageName6x = 'example-variant-6x';\nconst imageVariants = [imageName, imageName2x, imageName4x, imageName6x];\n\nconst variant = (name, width, height) => {\n  return {\n    name,\n    width,\n    height,\n    url: `https://via.placeholder.com/${width}x${height}`,\n  };\n};\n\nconst imageSquare = {\n  id: new UUID('image-square'),\n  type: 'image',\n  attributes: {\n    variants: {\n      [imageName]: variant(imageName, 400, 400),\n      [imageName2x]: variant(imageName2x, 800, 800),\n      [imageName4x]: variant(imageName4x, 1600, 1600),\n      [imageName6x]: variant(imageName6x, 2400, 2400),\n    },\n  },\n};\n\nconst imagePortrait = {\n  id: new UUID('image-portrait'),\n  type: 'image',\n  attributes: {\n    variants: {\n      [imageName]: variant(imageName, 400, 800),\n      [imageName2x]: variant(imageName2x, 800, 1600),\n      [imageName4x]: variant(imageName4x, 1600, 3200),\n      [imageName6x]: variant(imageName6x, 2400, 4800),\n    },\n  },\n};\nconst imageLandscape = {\n  id: new UUID('image-landscape'),\n  type: 'image',\n  attributes: {\n    variants: {\n      [imageName]: variant(imageName, 800, 400),\n      [imageName2x]: variant(imageName2x, 1600, 800),\n      [imageName4x]: variant(imageName4x, 3200, 1600),\n      [imageName6x]: variant(imageName6x, 4800, 2400),\n    },\n  },\n};\n\nconst repeat = (x, n) => {\n  return Array.from(new Array(n)).map(() => x);\n};\n\nconst Gallery = props => {\n  const styles = {\n    width: '100%',\n    maxWidth: 600,\n  };\n  return (\n    <div style={styles}>\n      <ListingImageGallery {...props} />\n    </div>\n  );\n};\n\nexport const NoImages = {\n  component: Gallery,\n  props: { images: [], imageVariants },\n  group: 'images',\n};\n\nexport const SingleImage = {\n  component: Gallery,\n  props: { images: [imageSquare], imageVariants },\n  group: 'images',\n};\n\nexport const VariousImages = {\n  component: Gallery,\n  props: {\n    images: [\n      imageLandscape,\n      imagePortrait,\n      imageSquare,\n      imageLandscape,\n      imagePortrait,\n      imageSquare,\n    ],\n    imageVariants,\n  },\n  group: 'images',\n};\n\nexport const SquareImages = {\n  component: Gallery,\n  props: {\n    images: repeat(imageSquare, 20),\n    imageVariants,\n  },\n  group: 'images',\n};\n\nexport const PortraitImages = {\n  component: Gallery,\n  props: {\n    images: repeat(imagePortrait, 20),\n    imageVariants,\n  },\n  group: 'images',\n};\n\nexport const LandscapeImages = {\n  component: Gallery,\n  props: {\n    images: repeat(imageLandscape, 20),\n    imageVariants,\n  },\n  group: 'images',\n};\n"]},"metadata":{},"sourceType":"module"}