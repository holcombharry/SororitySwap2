{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/Map/StaticMapboxMap.js\";\nimport React from 'react';\nimport { string, shape, number, object } from 'prop-types';\nimport polyline from '@mapbox/polyline';\nimport { lazyLoadWithDimensions } from '../../util/contextHelpers';\nimport { circlePolyline } from '../../util/maps';\nimport config from '../../config';\n\nconst formatColor = color => {\n  return color.replace(/^#/, '');\n};\n\nconst fuzzyCircleOverlay = (center, mapsConfig) => {\n  const strokeWeight = 1;\n  const strokeColor = mapsConfig.fuzzy.circleColor;\n  const strokeOpacity = 0.5;\n  const fillColor = mapsConfig.fuzzy.circleColor;\n  const fillOpacity = 0.2;\n  const path = circlePolyline(center, mapsConfig.fuzzy.offset);\n  const styles = `-${strokeWeight}+${formatColor(strokeColor)}-${strokeOpacity}+${formatColor(fillColor)}-${fillOpacity}`;\n  return `path${styles}(${encodeURIComponent(polyline.encode(path))})`;\n};\n\nconst customMarkerOverlay = (center, mapsConfig) => {\n  const {\n    url\n  } = mapsConfig.customMarker;\n  return `url-${encodeURIComponent(url)}(${center.lng},${center.lat})`;\n};\n\nconst markerOverlay = center => {\n  return `pin-s(${center.lng},${center.lat})`;\n};\n\nconst mapOverlay = (center, mapsConfig) => {\n  if (mapsConfig.fuzzy.enabled) {\n    return fuzzyCircleOverlay(center, mapsConfig);\n  }\n\n  if (mapsConfig.customMarker.enabled) {\n    return customMarkerOverlay(center, mapsConfig);\n  }\n\n  return markerOverlay(center);\n};\n\nconst StaticMapboxMap = props => {\n  const {\n    address,\n    center,\n    zoom,\n    mapsConfig,\n    dimensions\n  } = props;\n  const {\n    width,\n    height\n  } = dimensions;\n  const libLoaded = typeof window !== 'undefined' && window.mapboxgl;\n\n  if (!libLoaded) {\n    return null;\n  }\n\n  const overlay = mapOverlay(center, mapsConfig);\n  const src = 'https://api.mapbox.com/styles/v1/mapbox/streets-v10/static' + (overlay ? `/${overlay}` : '') + `/${center.lng},${center.lat},${zoom}` + `/${width}x${height}` + `?access_token=${config.maps.mapboxAccessToken}`;\n  return /*#__PURE__*/React.createElement(\"img\", {\n    src: src,\n    alt: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  });\n};\n\n_c = StaticMapboxMap;\nStaticMapboxMap.defaultProps = {\n  address: '',\n  center: null,\n  zoom: config.maps.fuzzy.enabled ? config.maps.fuzzy.defaultZoomLevel : 11,\n  mapsConfig: config.maps\n};\nStaticMapboxMap.propTypes = {\n  address: string,\n  center: shape({\n    lat: number.isRequired,\n    lng: number.isRequired\n  }).isRequired,\n  zoom: number,\n  mapsConfig: object,\n  // from withDimensions\n  dimensions: shape({\n    width: number.isRequired,\n    height: number.isRequired\n  }).isRequired\n};\nexport default _c2 = lazyLoadWithDimensions(StaticMapboxMap, {\n  maxWidth: '640px'\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StaticMapboxMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/Map/StaticMapboxMap.js"],"names":["React","string","shape","number","object","polyline","lazyLoadWithDimensions","circlePolyline","config","formatColor","color","replace","fuzzyCircleOverlay","center","mapsConfig","strokeWeight","strokeColor","fuzzy","circleColor","strokeOpacity","fillColor","fillOpacity","path","offset","styles","encodeURIComponent","encode","customMarkerOverlay","url","customMarker","lng","lat","markerOverlay","mapOverlay","enabled","StaticMapboxMap","props","address","zoom","dimensions","width","height","libLoaded","window","mapboxgl","overlay","src","maps","mapboxAccessToken","defaultProps","defaultZoomLevel","propTypes","isRequired","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { string, shape, number, object } from 'prop-types';\nimport polyline from '@mapbox/polyline';\nimport { lazyLoadWithDimensions } from '../../util/contextHelpers';\nimport { circlePolyline } from '../../util/maps';\nimport config from '../../config';\n\nconst formatColor = color => {\n  return color.replace(/^#/, '');\n};\n\nconst fuzzyCircleOverlay = (center, mapsConfig) => {\n  const strokeWeight = 1;\n  const strokeColor = mapsConfig.fuzzy.circleColor;\n  const strokeOpacity = 0.5;\n  const fillColor = mapsConfig.fuzzy.circleColor;\n  const fillOpacity = 0.2;\n\n  const path = circlePolyline(center, mapsConfig.fuzzy.offset);\n  const styles = `-${strokeWeight}+${formatColor(strokeColor)}-${strokeOpacity}+${formatColor(\n    fillColor\n  )}-${fillOpacity}`;\n  return `path${styles}(${encodeURIComponent(polyline.encode(path))})`;\n};\n\nconst customMarkerOverlay = (center, mapsConfig) => {\n  const { url } = mapsConfig.customMarker;\n  return `url-${encodeURIComponent(url)}(${center.lng},${center.lat})`;\n};\n\nconst markerOverlay = center => {\n  return `pin-s(${center.lng},${center.lat})`;\n};\n\nconst mapOverlay = (center, mapsConfig) => {\n  if (mapsConfig.fuzzy.enabled) {\n    return fuzzyCircleOverlay(center, mapsConfig);\n  }\n  if (mapsConfig.customMarker.enabled) {\n    return customMarkerOverlay(center, mapsConfig);\n  }\n  return markerOverlay(center);\n};\n\nconst StaticMapboxMap = props => {\n  const { address, center, zoom, mapsConfig, dimensions } = props;\n  const { width, height } = dimensions;\n\n  const libLoaded = typeof window !== 'undefined' && window.mapboxgl;\n  if (!libLoaded) {\n    return null;\n  }\n\n  const overlay = mapOverlay(center, mapsConfig);\n  const src =\n    'https://api.mapbox.com/styles/v1/mapbox/streets-v10/static' +\n    (overlay ? `/${overlay}` : '') +\n    `/${center.lng},${center.lat},${zoom}` +\n    `/${width}x${height}` +\n    `?access_token=${config.maps.mapboxAccessToken}`;\n\n  return <img src={src} alt={address} />;\n};\n\nStaticMapboxMap.defaultProps = {\n  address: '',\n  center: null,\n  zoom: config.maps.fuzzy.enabled ? config.maps.fuzzy.defaultZoomLevel : 11,\n  mapsConfig: config.maps,\n};\n\nStaticMapboxMap.propTypes = {\n  address: string,\n  center: shape({\n    lat: number.isRequired,\n    lng: number.isRequired,\n  }).isRequired,\n  zoom: number,\n  mapsConfig: object,\n\n  // from withDimensions\n  dimensions: shape({\n    width: number.isRequired,\n    height: number.isRequired,\n  }).isRequired,\n};\n\nexport default lazyLoadWithDimensions(StaticMapboxMap, { maxWidth: '640px' });\n"]},"metadata":{},"sourceType":"module"}