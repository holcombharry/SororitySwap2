{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/Form/Form.js\";\nimport React from 'react';\nimport { func, node, string } from 'prop-types';\nimport routeConfiguration from '../../routing/routeConfiguration';\nimport { findRouteByRouteName } from '../../util/routes';\n\nconst Form = props => {\n  const {\n    children,\n    contentRef,\n    enforcePagePreloadFor,\n    ...restProps\n  } = props;\n\n  const onOverFormFn = enforcePreloadOfPage => () => {\n    // Enforce preloading of given page (loadable component)\n    const {\n      component: Page\n    } = findRouteByRouteName(enforcePreloadOfPage, routeConfiguration()); // Loadable Component has a \"preload\" function.\n\n    if (Page.preload) {\n      Page.preload();\n    }\n  };\n\n  const onOverForm = enforcePagePreloadFor ? onOverFormFn(enforcePagePreloadFor) : null;\n  const onOverFormMaybe = onOverForm ? {\n    onMouseOver: onOverForm,\n    onTouchStart: onOverForm\n  } : {};\n  const formProps = {\n    // These are mainly default values for the server\n    // rendering. Otherwise the form would submit potentially\n    // sensitive data with the default GET method until the client\n    // side code is loaded.\n    method: 'post',\n    action: '/',\n    // allow content ref function to be passed to the form\n    ref: contentRef,\n    ...onOverFormMaybe,\n    ...restProps\n  };\n  return /*#__PURE__*/React.createElement(\"form\", Object.assign({}, formProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }), children);\n};\n\n_c = Form;\nForm.defaultProps = {\n  children: null,\n  contentRef: null,\n  enforcePagePreloadFor: null\n};\nForm.propTypes = {\n  children: node,\n  contentRef: func,\n  enforcePagePreloadFor: string\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/Form/Form.js"],"names":["React","func","node","string","routeConfiguration","findRouteByRouteName","Form","props","children","contentRef","enforcePagePreloadFor","restProps","onOverFormFn","enforcePreloadOfPage","component","Page","preload","onOverForm","onOverFormMaybe","onMouseOver","onTouchStart","formProps","method","action","ref","defaultProps","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,YAAnC;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,SAASC,oBAAT,QAAqC,mBAArC;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,qBAAxB;AAA+C,OAAGC;AAAlD,MAAgEJ,KAAtE;;AAEA,QAAMK,YAAY,GAAGC,oBAAoB,IAAI,MAAM;AACjD;AACA,UAAM;AAAEC,MAAAA,SAAS,EAAEC;AAAb,QAAsBV,oBAAoB,CAACQ,oBAAD,EAAuBT,kBAAkB,EAAzC,CAAhD,CAFiD,CAGjD;;AACA,QAAIW,IAAI,CAACC,OAAT,EAAkB;AAChBD,MAAAA,IAAI,CAACC,OAAL;AACD;AACF,GAPD;;AASA,QAAMC,UAAU,GAAGP,qBAAqB,GAAGE,YAAY,CAACF,qBAAD,CAAf,GAAyC,IAAjF;AACA,QAAMQ,eAAe,GAAGD,UAAU,GAC9B;AACEE,IAAAA,WAAW,EAAEF,UADf;AAEEG,IAAAA,YAAY,EAAEH;AAFhB,GAD8B,GAK9B,EALJ;AAOA,QAAMI,SAAS,GAAG;AAChB;AACA;AACA;AACA;AACAC,IAAAA,MAAM,EAAE,MALQ;AAMhBC,IAAAA,MAAM,EAAE,GANQ;AAQhB;AACAC,IAAAA,GAAG,EAAEf,UATW;AAWhB,OAAGS,eAXa;AAYhB,OAAGP;AAZa,GAAlB;AAeA,sBAAO,8CAAUU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAsBb,QAAtB,CAAP;AACD,CApCD;;KAAMF,I;AAsCNA,IAAI,CAACmB,YAAL,GAAoB;AAClBjB,EAAAA,QAAQ,EAAE,IADQ;AAElBC,EAAAA,UAAU,EAAE,IAFM;AAGlBC,EAAAA,qBAAqB,EAAE;AAHL,CAApB;AAMAJ,IAAI,CAACoB,SAAL,GAAiB;AACflB,EAAAA,QAAQ,EAAEN,IADK;AAEfO,EAAAA,UAAU,EAAER,IAFG;AAGfS,EAAAA,qBAAqB,EAAEP;AAHR,CAAjB;AAMA,eAAeG,IAAf","sourcesContent":["import React from 'react';\nimport { func, node, string } from 'prop-types';\nimport routeConfiguration from '../../routing/routeConfiguration';\nimport { findRouteByRouteName } from '../../util/routes';\n\nconst Form = props => {\n  const { children, contentRef, enforcePagePreloadFor, ...restProps } = props;\n\n  const onOverFormFn = enforcePreloadOfPage => () => {\n    // Enforce preloading of given page (loadable component)\n    const { component: Page } = findRouteByRouteName(enforcePreloadOfPage, routeConfiguration());\n    // Loadable Component has a \"preload\" function.\n    if (Page.preload) {\n      Page.preload();\n    }\n  };\n\n  const onOverForm = enforcePagePreloadFor ? onOverFormFn(enforcePagePreloadFor) : null;\n  const onOverFormMaybe = onOverForm\n    ? {\n        onMouseOver: onOverForm,\n        onTouchStart: onOverForm,\n      }\n    : {};\n\n  const formProps = {\n    // These are mainly default values for the server\n    // rendering. Otherwise the form would submit potentially\n    // sensitive data with the default GET method until the client\n    // side code is loaded.\n    method: 'post',\n    action: '/',\n\n    // allow content ref function to be passed to the form\n    ref: contentRef,\n\n    ...onOverFormMaybe,\n    ...restProps,\n  };\n\n  return <form {...formProps}>{children}</form>;\n};\n\nForm.defaultProps = {\n  children: null,\n  contentRef: null,\n  enforcePagePreloadFor: null,\n};\n\nForm.propTypes = {\n  children: node,\n  contentRef: func,\n  enforcePagePreloadFor: string,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}