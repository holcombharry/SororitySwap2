{"ast":null,"code":"import Decimal from 'decimal.js';\nimport config from '../../config';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { LINE_ITEM_DAY, LINE_ITEM_NIGHT, LINE_ITEM_UNITS } from '../../util/types';\nimport EstimatedCustomerBreakdownMaybe from './EstimatedCustomerBreakdownMaybe';\nconst {\n  Money\n} = sdkTypes;\nconst CURRENCY = config.currency;\nexport const EmptyWithoutDatesOrLineItems = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_DAY\n  },\n  group: 'payment'\n};\nexport const EmptyWithoutDates = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_DAY,\n    lineItems: [{\n      code: 'line-item/day',\n      includeFor: ['customer', 'provider'],\n      quantity: new Decimal(1),\n      unitPrice: new Money(4500, CURRENCY),\n      lineTotal: new Money(4500, CURRENCY),\n      reversal: false\n    }]\n  },\n  group: 'payment'\n};\nexport const EmptyWithoutLineItems = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_DAY,\n    breakdownData: {\n      startDate: new Date(Date.UTC(2017, 3, 14)),\n      endDate: new Date(Date.UTC(2017, 3, 15))\n    }\n  },\n  group: 'payment'\n};\nexport const BookingSingleDay = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_DAY,\n    breakdownData: {\n      startDate: new Date(Date.UTC(2017, 3, 14)),\n      endDate: new Date(Date.UTC(2017, 3, 15))\n    },\n    lineItems: [{\n      code: 'line-item/day',\n      includeFor: ['customer', 'provider'],\n      quantity: new Decimal(1),\n      unitPrice: new Money(4500, CURRENCY),\n      lineTotal: new Money(4500, CURRENCY),\n      reversal: false\n    }]\n  },\n  group: 'payment'\n};\nexport const BookingMultipleNights = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_NIGHT,\n    breakdownData: {\n      startDate: new Date(Date.UTC(2017, 3, 14)),\n      endDate: new Date(Date.UTC(2017, 3, 16))\n    },\n    lineItems: [{\n      code: 'line-item/night',\n      includeFor: ['customer', 'provider'],\n      quantity: new Decimal(2),\n      unitPrice: new Money(4500, CURRENCY),\n      lineTotal: new Money(9000, CURRENCY),\n      reversal: false\n    }]\n  },\n  group: 'payment'\n};\nexport const BookingUnits = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_UNITS,\n    breakdownData: {\n      startDate: new Date(Date.UTC(2017, 3, 14)),\n      endDate: new Date(Date.UTC(2017, 3, 16))\n    },\n    lineItems: [{\n      code: 'line-item/units',\n      includeFor: ['customer', 'provider'],\n      quantity: new Decimal(2),\n      unitPrice: new Money(4500, CURRENCY),\n      lineTotal: new Money(9000, CURRENCY),\n      reversal: false\n    }]\n  },\n  group: 'payment'\n};\nexport const OrderProductWithShipping = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_UNITS,\n    breakdownData: {},\n    lineItems: [{\n      code: 'line-item/units',\n      includeFor: ['customer', 'provider'],\n      quantity: new Decimal(2),\n      unitPrice: new Money(4500, CURRENCY),\n      lineTotal: new Money(9000, CURRENCY),\n      reversal: false\n    }, {\n      code: 'line-item/shipping-fee',\n      includeFor: ['customer', 'provider'],\n      quantity: new Decimal(1),\n      unitPrice: new Money(1000, CURRENCY),\n      lineTotal: new Money(1000, CURRENCY),\n      reversal: false\n    }]\n  },\n  group: 'payment'\n};\nexport const OrderProductWithPickup = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_UNITS,\n    breakdownData: {},\n    lineItems: [{\n      code: 'line-item/units',\n      includeFor: ['customer', 'provider'],\n      quantity: new Decimal(2),\n      unitPrice: new Money(4500, CURRENCY),\n      lineTotal: new Money(9000, CURRENCY),\n      reversal: false\n    }, {\n      code: 'line-item/pickup-fee',\n      includeFor: ['customer', 'provider'],\n      quantity: new Decimal(1),\n      unitPrice: new Money(0, CURRENCY),\n      lineTotal: new Money(0, CURRENCY),\n      reversal: false\n    }]\n  },\n  group: 'payment'\n};","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/OrderPanel/EstimatedCustomerBreakdownMaybe.example.js"],"names":["Decimal","config","types","sdkTypes","LINE_ITEM_DAY","LINE_ITEM_NIGHT","LINE_ITEM_UNITS","EstimatedCustomerBreakdownMaybe","Money","CURRENCY","currency","EmptyWithoutDatesOrLineItems","component","props","unitType","group","EmptyWithoutDates","lineItems","code","includeFor","quantity","unitPrice","lineTotal","reversal","EmptyWithoutLineItems","breakdownData","startDate","Date","UTC","endDate","BookingSingleDay","BookingMultipleNights","BookingUnits","OrderProductWithShipping","OrderProductWithPickup"],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\n\nimport config from '../../config';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { LINE_ITEM_DAY, LINE_ITEM_NIGHT, LINE_ITEM_UNITS } from '../../util/types';\n\nimport EstimatedCustomerBreakdownMaybe from './EstimatedCustomerBreakdownMaybe';\n\nconst { Money } = sdkTypes;\nconst CURRENCY = config.currency;\n\nexport const EmptyWithoutDatesOrLineItems = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_DAY,\n  },\n  group: 'payment',\n};\n\nexport const EmptyWithoutDates = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_DAY,\n    lineItems: [\n      {\n        code: 'line-item/day',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(4500, CURRENCY),\n        reversal: false,\n      },\n    ],\n  },\n  group: 'payment',\n};\n\nexport const EmptyWithoutLineItems = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_DAY,\n    breakdownData: {\n      startDate: new Date(Date.UTC(2017, 3, 14)),\n      endDate: new Date(Date.UTC(2017, 3, 15)),\n    },\n  },\n  group: 'payment',\n};\n\nexport const BookingSingleDay = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_DAY,\n    breakdownData: {\n      startDate: new Date(Date.UTC(2017, 3, 14)),\n      endDate: new Date(Date.UTC(2017, 3, 15)),\n    },\n    lineItems: [\n      {\n        code: 'line-item/day',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(4500, CURRENCY),\n        reversal: false,\n      },\n    ],\n  },\n  group: 'payment',\n};\n\nexport const BookingMultipleNights = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_NIGHT,\n    breakdownData: {\n      startDate: new Date(Date.UTC(2017, 3, 14)),\n      endDate: new Date(Date.UTC(2017, 3, 16)),\n    },\n    lineItems: [\n      {\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false,\n      },\n    ],\n  },\n  group: 'payment',\n};\n\nexport const BookingUnits = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_UNITS,\n    breakdownData: {\n      startDate: new Date(Date.UTC(2017, 3, 14)),\n      endDate: new Date(Date.UTC(2017, 3, 16)),\n    },\n    lineItems: [\n      {\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false,\n      },\n    ],\n  },\n  group: 'payment',\n};\n\nexport const OrderProductWithShipping = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_UNITS,\n    breakdownData: {},\n    lineItems: [\n      {\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false,\n      },\n      {\n        code: 'line-item/shipping-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(1000, CURRENCY),\n        lineTotal: new Money(1000, CURRENCY),\n        reversal: false,\n      },\n    ],\n  },\n  group: 'payment',\n};\n\nexport const OrderProductWithPickup = {\n  component: EstimatedCustomerBreakdownMaybe,\n  props: {\n    unitType: LINE_ITEM_UNITS,\n    breakdownData: {},\n    lineItems: [\n      {\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false,\n      },\n      {\n        code: 'line-item/pickup-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(0, CURRENCY),\n        lineTotal: new Money(0, CURRENCY),\n        reversal: false,\n      },\n    ],\n  },\n  group: 'payment',\n};\n"]},"metadata":{},"sourceType":"module"}