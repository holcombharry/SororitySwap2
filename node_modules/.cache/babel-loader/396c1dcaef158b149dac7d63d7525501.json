{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/MenuLabel/MenuLabel.js\";\n\n/**\n * MenuLabel is the only always visible part of Menu.\n * Clicking it toggles visibility of MenuContent.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport css from './MenuLabel.module.css';\n\nclass MenuLabel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickedWithMouse: false\n    };\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  onClick(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.props.onToggleActive(); // Don't show focus outline if user just clicked the element with mouse\n    // tab + enter creates also a click event, but its location is origin.\n\n    const nativeEvent = e.nativeEvent;\n    const isRealClick = !(nativeEvent.clientX === 0 && nativeEvent.clientY === 0);\n\n    if (isRealClick) {\n      this.setState({\n        clickedWithMouse: true\n      });\n    }\n  }\n\n  onBlur() {\n    this.setState(() => {\n      return {\n        clickedWithMouse: false\n      };\n    });\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      rootClassName,\n      isOpen,\n      isOpenClassName\n    } = this.props;\n    const rootClass = rootClassName || css.root;\n    const isOpenClass = isOpenClassName || css.isOpen;\n    const classes = classNames(rootClass, className, {\n      [css.clickedWithMouse]: this.state.clickedWithMouse,\n      [isOpenClass]: isOpen\n    });\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: classes,\n      onClick: this.onClick,\n      onBlur: this.onBlur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nMenuLabel.defaultProps = {\n  className: null,\n  isOpenClassName: null,\n  isOpen: false,\n  onToggleActive: null,\n  rootClassName: ''\n};\nconst {\n  bool,\n  func,\n  node,\n  string\n} = PropTypes;\nMenuLabel.propTypes = {\n  children: node.isRequired,\n  className: string,\n  isOpenClassName: string,\n  isOpen: bool,\n  onToggleActive: func,\n  rootClassName: string\n};\nexport default MenuLabel;","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/MenuLabel/MenuLabel.js"],"names":["React","Component","PropTypes","classNames","css","MenuLabel","constructor","props","state","clickedWithMouse","onClick","bind","onBlur","e","stopPropagation","preventDefault","onToggleActive","nativeEvent","isRealClick","clientX","clientY","setState","render","children","className","rootClassName","isOpen","isOpenClassName","rootClass","root","isOpenClass","classes","defaultProps","bool","func","node","string","propTypes","isRequired"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,gBAAgB,EAAE;AAApB,KAAb;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDD,EAAAA,OAAO,CAACG,CAAD,EAAI;AACTA,IAAAA,CAAC,CAACC,eAAF;AACAD,IAAAA,CAAC,CAACE,cAAF;AACA,SAAKR,KAAL,CAAWS,cAAX,GAHS,CAKT;AACA;;AACA,UAAMC,WAAW,GAAGJ,CAAC,CAACI,WAAtB;AACA,UAAMC,WAAW,GAAG,EAAED,WAAW,CAACE,OAAZ,KAAwB,CAAxB,IAA6BF,WAAW,CAACG,OAAZ,KAAwB,CAAvD,CAApB;;AACA,QAAIF,WAAJ,EAAiB;AACf,WAAKG,QAAL,CAAc;AAAEZ,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,SAAKS,QAAL,CAAc,MAAM;AAClB,aAAO;AAAEZ,QAAAA,gBAAgB,EAAE;AAApB,OAAP;AACD,KAFD;AAGD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA,aAAvB;AAAsCC,MAAAA,MAAtC;AAA8CC,MAAAA;AAA9C,QAAkE,KAAKpB,KAA7E;AAEA,UAAMqB,SAAS,GAAGH,aAAa,IAAIrB,GAAG,CAACyB,IAAvC;AACA,UAAMC,WAAW,GAAGH,eAAe,IAAIvB,GAAG,CAACsB,MAA3C;AACA,UAAMK,OAAO,GAAG5B,UAAU,CAACyB,SAAD,EAAYJ,SAAZ,EAAuB;AAC/C,OAACpB,GAAG,CAACK,gBAAL,GAAwB,KAAKD,KAAL,CAAWC,gBADY;AAE/C,OAACqB,WAAD,GAAeJ;AAFgC,KAAvB,CAA1B;AAKA,wBACE;AAAQ,MAAA,SAAS,EAAEK,OAAnB;AAA4B,MAAA,OAAO,EAAE,KAAKrB,OAA1C;AAAmD,MAAA,MAAM,EAAE,KAAKE,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGW,QADH,CADF;AAKD;;AA5C+B;;AA+ClClB,SAAS,CAAC2B,YAAV,GAAyB;AACvBR,EAAAA,SAAS,EAAE,IADY;AAEvBG,EAAAA,eAAe,EAAE,IAFM;AAGvBD,EAAAA,MAAM,EAAE,KAHe;AAIvBV,EAAAA,cAAc,EAAE,IAJO;AAKvBS,EAAAA,aAAa,EAAE;AALQ,CAAzB;AAQA,MAAM;AAAEQ,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,IAA+BlC,SAArC;AAEAG,SAAS,CAACgC,SAAV,GAAsB;AACpBd,EAAAA,QAAQ,EAAEY,IAAI,CAACG,UADK;AAEpBd,EAAAA,SAAS,EAAEY,MAFS;AAGpBT,EAAAA,eAAe,EAAES,MAHG;AAIpBV,EAAAA,MAAM,EAAEO,IAJY;AAKpBjB,EAAAA,cAAc,EAAEkB,IALI;AAMpBT,EAAAA,aAAa,EAAEW;AANK,CAAtB;AASA,eAAe/B,SAAf","sourcesContent":["/**\n * MenuLabel is the only always visible part of Menu.\n * Clicking it toggles visibility of MenuContent.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport css from './MenuLabel.module.css';\n\nclass MenuLabel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { clickedWithMouse: false };\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  onClick(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.props.onToggleActive();\n\n    // Don't show focus outline if user just clicked the element with mouse\n    // tab + enter creates also a click event, but its location is origin.\n    const nativeEvent = e.nativeEvent;\n    const isRealClick = !(nativeEvent.clientX === 0 && nativeEvent.clientY === 0);\n    if (isRealClick) {\n      this.setState({ clickedWithMouse: true });\n    }\n  }\n\n  onBlur() {\n    this.setState(() => {\n      return { clickedWithMouse: false };\n    });\n  }\n\n  render() {\n    const { children, className, rootClassName, isOpen, isOpenClassName } = this.props;\n\n    const rootClass = rootClassName || css.root;\n    const isOpenClass = isOpenClassName || css.isOpen;\n    const classes = classNames(rootClass, className, {\n      [css.clickedWithMouse]: this.state.clickedWithMouse,\n      [isOpenClass]: isOpen,\n    });\n\n    return (\n      <button className={classes} onClick={this.onClick} onBlur={this.onBlur}>\n        {children}\n      </button>\n    );\n  }\n}\n\nMenuLabel.defaultProps = {\n  className: null,\n  isOpenClassName: null,\n  isOpen: false,\n  onToggleActive: null,\n  rootClassName: '',\n};\n\nconst { bool, func, node, string } = PropTypes;\n\nMenuLabel.propTypes = {\n  children: node.isRequired,\n  className: string,\n  isOpenClassName: string,\n  isOpen: bool,\n  onToggleActive: func,\n  rootClassName: string,\n};\n\nexport default MenuLabel;\n"]},"metadata":{},"sourceType":"module"}