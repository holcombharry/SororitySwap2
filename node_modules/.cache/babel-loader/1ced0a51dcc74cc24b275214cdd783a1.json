{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/ContactDetailsPage/ContactDetailsPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\nimport { propTypes } from '../../util/types';\nimport { ensureCurrentUser } from '../../util/data';\nimport { sendVerificationEmail } from '../../ducks/user.duck';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { LayoutSideNavigation, LayoutWrapperMain, LayoutWrapperAccountSettingsSideNav, LayoutWrapperTopbar, LayoutWrapperFooter, Footer, Page, UserNav } from '../../components';\nimport TopbarContainer from '../../containers/TopbarContainer/TopbarContainer';\nimport ContactDetailsForm from './ContactDetailsForm/ContactDetailsForm';\nimport { saveContactDetails, saveContactDetailsClear, resetPassword } from './ContactDetailsPage.duck';\nimport css from './ContactDetailsPage.module.css';\nexport const ContactDetailsPageComponent = props => {\n  const {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    currentUser,\n    contactDetailsChanged,\n    onChange,\n    scrollingDisabled,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    onResendVerificationEmail,\n    onSubmitContactDetails,\n    onResetPassword,\n    resetPasswordInProgress,\n    resetPasswordError,\n    intl\n  } = props;\n  const user = ensureCurrentUser(currentUser);\n  const currentEmail = user.attributes.email || '';\n  const protectedData = user.attributes.profile.protectedData || {};\n  const currentPhoneNumber = protectedData.phoneNumber || '';\n  const contactInfoForm = user.id ? /*#__PURE__*/React.createElement(ContactDetailsForm, {\n    className: css.form,\n    initialValues: {\n      email: currentEmail,\n      phoneNumber: currentPhoneNumber\n    },\n    saveEmailError: saveEmailError,\n    savePhoneNumberError: savePhoneNumberError,\n    currentUser: currentUser,\n    onResendVerificationEmail: onResendVerificationEmail,\n    onResetPassword: onResetPassword,\n    onSubmit: values => onSubmitContactDetails({ ...values,\n      currentEmail,\n      currentPhoneNumber\n    }),\n    onChange: onChange,\n    inProgress: saveContactDetailsInProgress,\n    ready: contactDetailsChanged,\n    sendVerificationEmailInProgress: sendVerificationEmailInProgress,\n    sendVerificationEmailError: sendVerificationEmailError,\n    resetPasswordInProgress: resetPasswordInProgress,\n    resetPasswordError: resetPasswordError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }) : null;\n  const title = intl.formatMessage({\n    id: 'ContactDetailsPage.title'\n  });\n  return /*#__PURE__*/React.createElement(Page, {\n    title: title,\n    scrollingDisabled: scrollingDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LayoutSideNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LayoutWrapperTopbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TopbarContainer, {\n    currentPage: \"ContactDetailsPage\",\n    desktopClassName: css.desktopTopbar,\n    mobileClassName: css.mobileTopbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(UserNav, {\n    selectedPageName: \"ContactDetailsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LayoutWrapperAccountSettingsSideNav, {\n    currentTab: \"ContactDetailsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LayoutWrapperMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: css.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"ContactDetailsPage.heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })), contactInfoForm)), /*#__PURE__*/React.createElement(LayoutWrapperFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))));\n};\n_c = ContactDetailsPageComponent;\nContactDetailsPageComponent.defaultProps = {\n  saveEmailError: null,\n  savePhoneNumberError: null,\n  currentUser: null,\n  sendVerificationEmailError: null,\n  resetPasswordInProgress: false,\n  resetPasswordError: null\n};\nconst {\n  bool,\n  func\n} = PropTypes;\nContactDetailsPageComponent.propTypes = {\n  saveEmailError: propTypes.error,\n  savePhoneNumberError: propTypes.error,\n  saveContactDetailsInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  contactDetailsChanged: bool.isRequired,\n  onChange: func.isRequired,\n  onSubmitContactDetails: func.isRequired,\n  scrollingDisabled: bool.isRequired,\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  resetPasswordInProgress: bool,\n  resetPasswordError: propTypes.error,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs user info.\n  const {\n    currentUser,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError\n  } = state.user;\n  const {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    contactDetailsChanged,\n    resetPasswordInProgress,\n    resetPasswordError\n  } = state.ContactDetailsPage;\n  return {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    currentUser,\n    contactDetailsChanged,\n    scrollingDisabled: isScrollingDisabled(state),\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    resetPasswordInProgress,\n    resetPasswordError\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: () => dispatch(saveContactDetailsClear()),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\n  onSubmitContactDetails: values => dispatch(saveContactDetails(values)),\n  onResetPassword: values => dispatch(resetPassword(values))\n});\n\nconst ContactDetailsPage = compose(connect(mapStateToProps, mapDispatchToProps), injectIntl)(ContactDetailsPageComponent);\nexport default ContactDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactDetailsPageComponent\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/ContactDetailsPage/ContactDetailsPage.js"],"names":["React","PropTypes","compose","connect","FormattedMessage","injectIntl","intlShape","propTypes","ensureCurrentUser","sendVerificationEmail","isScrollingDisabled","LayoutSideNavigation","LayoutWrapperMain","LayoutWrapperAccountSettingsSideNav","LayoutWrapperTopbar","LayoutWrapperFooter","Footer","Page","UserNav","TopbarContainer","ContactDetailsForm","saveContactDetails","saveContactDetailsClear","resetPassword","css","ContactDetailsPageComponent","props","saveEmailError","savePhoneNumberError","saveContactDetailsInProgress","currentUser","contactDetailsChanged","onChange","scrollingDisabled","sendVerificationEmailInProgress","sendVerificationEmailError","onResendVerificationEmail","onSubmitContactDetails","onResetPassword","resetPasswordInProgress","resetPasswordError","intl","user","currentEmail","attributes","email","protectedData","profile","currentPhoneNumber","phoneNumber","contactInfoForm","id","form","values","title","formatMessage","desktopTopbar","mobileTopbar","content","defaultProps","bool","func","error","isRequired","mapStateToProps","state","ContactDetailsPage","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\nimport { propTypes } from '../../util/types';\nimport { ensureCurrentUser } from '../../util/data';\nimport { sendVerificationEmail } from '../../ducks/user.duck';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\n\nimport {\n  LayoutSideNavigation,\n  LayoutWrapperMain,\n  LayoutWrapperAccountSettingsSideNav,\n  LayoutWrapperTopbar,\n  LayoutWrapperFooter,\n  Footer,\n  Page,\n  UserNav,\n} from '../../components';\nimport TopbarContainer from '../../containers/TopbarContainer/TopbarContainer';\n\nimport ContactDetailsForm from './ContactDetailsForm/ContactDetailsForm';\n\nimport {\n  saveContactDetails,\n  saveContactDetailsClear,\n  resetPassword,\n} from './ContactDetailsPage.duck';\nimport css from './ContactDetailsPage.module.css';\n\nexport const ContactDetailsPageComponent = props => {\n  const {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    currentUser,\n    contactDetailsChanged,\n    onChange,\n    scrollingDisabled,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    onResendVerificationEmail,\n    onSubmitContactDetails,\n    onResetPassword,\n    resetPasswordInProgress,\n    resetPasswordError,\n    intl,\n  } = props;\n\n  const user = ensureCurrentUser(currentUser);\n  const currentEmail = user.attributes.email || '';\n  const protectedData = user.attributes.profile.protectedData || {};\n  const currentPhoneNumber = protectedData.phoneNumber || '';\n  const contactInfoForm = user.id ? (\n    <ContactDetailsForm\n      className={css.form}\n      initialValues={{ email: currentEmail, phoneNumber: currentPhoneNumber }}\n      saveEmailError={saveEmailError}\n      savePhoneNumberError={savePhoneNumberError}\n      currentUser={currentUser}\n      onResendVerificationEmail={onResendVerificationEmail}\n      onResetPassword={onResetPassword}\n      onSubmit={values => onSubmitContactDetails({ ...values, currentEmail, currentPhoneNumber })}\n      onChange={onChange}\n      inProgress={saveContactDetailsInProgress}\n      ready={contactDetailsChanged}\n      sendVerificationEmailInProgress={sendVerificationEmailInProgress}\n      sendVerificationEmailError={sendVerificationEmailError}\n      resetPasswordInProgress={resetPasswordInProgress}\n      resetPasswordError={resetPasswordError}\n    />\n  ) : null;\n\n  const title = intl.formatMessage({ id: 'ContactDetailsPage.title' });\n\n  return (\n    <Page title={title} scrollingDisabled={scrollingDisabled}>\n      <LayoutSideNavigation>\n        <LayoutWrapperTopbar>\n          <TopbarContainer\n            currentPage=\"ContactDetailsPage\"\n            desktopClassName={css.desktopTopbar}\n            mobileClassName={css.mobileTopbar}\n          />\n          <UserNav selectedPageName=\"ContactDetailsPage\" />\n        </LayoutWrapperTopbar>\n        <LayoutWrapperAccountSettingsSideNav currentTab=\"ContactDetailsPage\" />\n        <LayoutWrapperMain>\n          <div className={css.content}>\n            <h1 className={css.title}>\n              <FormattedMessage id=\"ContactDetailsPage.heading\" />\n            </h1>\n            {contactInfoForm}\n          </div>\n        </LayoutWrapperMain>\n        <LayoutWrapperFooter>\n          <Footer />\n        </LayoutWrapperFooter>\n      </LayoutSideNavigation>\n    </Page>\n  );\n};\n\nContactDetailsPageComponent.defaultProps = {\n  saveEmailError: null,\n  savePhoneNumberError: null,\n  currentUser: null,\n  sendVerificationEmailError: null,\n  resetPasswordInProgress: false,\n  resetPasswordError: null,\n};\n\nconst { bool, func } = PropTypes;\n\nContactDetailsPageComponent.propTypes = {\n  saveEmailError: propTypes.error,\n  savePhoneNumberError: propTypes.error,\n  saveContactDetailsInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  contactDetailsChanged: bool.isRequired,\n  onChange: func.isRequired,\n  onSubmitContactDetails: func.isRequired,\n  scrollingDisabled: bool.isRequired,\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  resetPasswordInProgress: bool,\n  resetPasswordError: propTypes.error,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs user info.\n  const { currentUser, sendVerificationEmailInProgress, sendVerificationEmailError } = state.user;\n  const {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    contactDetailsChanged,\n    resetPasswordInProgress,\n    resetPasswordError,\n  } = state.ContactDetailsPage;\n  return {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    currentUser,\n    contactDetailsChanged,\n    scrollingDisabled: isScrollingDisabled(state),\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    resetPasswordInProgress,\n    resetPasswordError,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: () => dispatch(saveContactDetailsClear()),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\n  onSubmitContactDetails: values => dispatch(saveContactDetails(values)),\n  onResetPassword: values => dispatch(resetPassword(values)),\n});\n\nconst ContactDetailsPage = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  injectIntl\n)(ContactDetailsPageComponent);\n\nexport default ContactDetailsPage;\n"]},"metadata":{},"sourceType":"module"}