{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/StyleguidePage/Typography.example.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport css from './StyleguidePage.module.css';\n\nconst Font = props => {\n  const {\n    component: TextComponent,\n    description,\n    styling\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.fontCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.element,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, description), /*#__PURE__*/React.createElement(\"pre\", {\n    className: css.tinyFont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, styling)));\n};\n\n_c = Font;\nconst {\n  func,\n  string\n} = PropTypes;\nFont.propTypes = {\n  component: func.isRequired,\n  description: string.isRequired,\n  styling: string.isRequired\n};\n\nconst Fonts = () => {\n  const heroTitleFontStyling = `Mobile styles:\n  font-size: 48px;\n  line-height: 54px;\n  margin-top: 25px;\n  margin-bottom: 29px;\n\n  Desktop styles:\n  font-size: 90px;\n  line-height: 96px;\n  margin-top: 25px;\n  margin-bottom: 31px;`;\n  const h1FontStyling = `Mobile styles:\n  font-size: 30px;\n  line-height: 36px;\n  margin-top: 18px;\n  margin-bottom: 18px;\n\n  Desktop styles:\n  font-size: 48px;\n  line-height: 56px;\n  margin-top: 24px;\n  margin-bottom: 24px;`;\n  const h2FontStyling = `Mobile styles:\n  font-size: 24px;\n  line-height: 30px;\n  margin-top: 21px;\n  margin-bottom: 17px;\n\n  Desktop styles:\n  font-size: 24px;\n  line-height: 32px;\n  margin-top: 21px;\n  margin-bottom: 19px;`;\n  const h3FontStyling = `Mobile styles:\n  font-size: 20px;\n  line-height: 24px;\n  margin-top: 16px;\n  margin-bottom: 14px;\n\n  Desktop styles:\n  font-size: 20px;\n  line-height: 24px;\n  margin-top: 16px;\n  margin-bottom: 16px;`;\n  const h4FontStyling = `Mobile styles:\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n\n  Desktop styles:\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 17px;\n  margin-bottom: 15px;`;\n  const h5FontStyling = `Mobile styles:\n  font-size: 14px;\n  line-height: 18px;\n  margin-top: 10px;\n  margin-bottom: 8px;\n\n  Desktop styles:\n  font-size: 14px;\n  line-height: 16px;\n  margin-top: 10px;\n  margin-bottom: 14px;`;\n  const h6FontStyling = `Mobile styles:\n  font-size: 12px;\n  line-height: 18px;\n  margin-top: 10px;\n  margin-bottom: 8px;\n\n  Desktop styles:\n  font-size: 12px;\n  line-height: 16px;\n  margin-top: 10px;\n  margin-bottom: 6px;`;\n  const bodyFontStyling = `Mobile styles:\n  font-size: 18px;\n  line-height: 24px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n\n  Desktop styles:\n  font-size: 20px;\n  line-height: 32px;\n  margin-top: 16px;\n  margin-bottom: 16px;`;\n  const tinyFontStyling = `Mobile styles:\n  font-size: 13px;\n  line-height: 18px;\n  margin-top: 9.5px;\n  margin-bottom: 8.5px;\n\n  Desktop styles:\n  font-size: 13px;\n  line-height: 18px;\n  margin-top: 10.5px;\n  margin-bottom: 13.5px;`;\n  const fontsContainerClasses = classNames(css.fontsContainer, css.baselines);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.typographyContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: css.spacing2x,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"The line-height of typographic elements is an multiple of 6px on mobile and multiple of 8px on desktop. In addition to line-height, baselines are adjusted with vertical padding (the sum of those paddings will be 6px on mobile or 8px on desktop). As a result one can position following typographic elements with margins that are also multiples of 6px (or 8px).\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.spacing2x,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"N.B. box-sizing is border-box, so borders affect to the total height of elements.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: fontsContainerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"p\", {\n      className: css.heroTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 28\n      }\n    }, \"Hello beautiful world.\"),\n    description: \"--marketplaceHeroTitleFontStyles: Biggest font style. Used in the hero in landingPage. Works as a site title.\",\n    styling: heroTitleFontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 28\n      }\n    }, \"Listing + Page title\"),\n    description: \"H1 / --marketplaceH1FontStyles: Works as a page title. Inline component using --marketplaceH1FontStyles can be aligned with .h1Font to the same baseline by dropping it 18px (e.g. with margin-top).\",\n    styling: h1FontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 28\n      }\n    }, \"This many listings found in here\"),\n    description: \"H2 / --marketplaceH2FontStyles: Works as a page subtitle and in sidebar menu link.\",\n    styling: h2FontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 28\n      }\n    }, \"About this listing\"),\n    description: \"H3 / --marketplaceH3FontStyles: Works as a paragraph subtitle.\",\n    styling: h3FontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 28\n      }\n    }, \"H4 (--marketplaceH4FontStyles): Lorem ipsum dolor sit amet\"),\n    description: \"Can be used as a subtitle and also as a label font for form inputs.\",\n    styling: h4FontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"You will only be charged if your request is accepted by the provider.\"),\n    description: \"H5 / --marketplaceH5FontStyles: Can be used as a fine print text.\",\n    styling: h5FontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 28\n      }\n    }, \"Close\"),\n    description: \"H6 / --marketplaceH6FontStyles: Works as a close text.\",\n    styling: h6FontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, \"Curabitur blandit tempus porttitor. Etiam porta sem malesuada magna mollis euismod. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\"),\n    description: \"--marketplaceBodyFontStyles, p, button, etc: Paragraphs and other body texts.\",\n    styling: bodyFontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Font, {\n    component: () => /*#__PURE__*/React.createElement(\"p\", {\n      className: css.tinyFont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 28\n      }\n    }, \"Hosted by user\"),\n    description: \"--marketplaceTinyFontStyles: Very small print.\",\n    styling: tinyFontStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c2 = Fonts;\nexport const Typography = {\n  component: Fonts,\n  props: {},\n  group: 'elements:typography'\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Font\");\n$RefreshReg$(_c2, \"Fonts\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/containers/StyleguidePage/Typography.example.js"],"names":["React","PropTypes","classNames","css","Font","props","component","TextComponent","description","styling","fontCard","element","tinyFont","func","string","propTypes","isRequired","Fonts","heroTitleFontStyling","h1FontStyling","h2FontStyling","h3FontStyling","h4FontStyling","h5FontStyling","h6FontStyling","bodyFontStyling","tinyFontStyling","fontsContainerClasses","fontsContainer","baselines","typographyContent","spacing2x","heroTitle","Typography","group"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport css from './StyleguidePage.module.css';\n\nconst Font = props => {\n  const { component: TextComponent, description, styling } = props;\n  return (\n    <div className={css.fontCard}>\n      <div className={css.element}>\n        <TextComponent />\n      </div>\n      <div className={css.description}>\n        <p>{description}</p>\n        <pre className={css.tinyFont}>{styling}</pre>\n      </div>\n    </div>\n  );\n};\n\nconst { func, string } = PropTypes;\n\nFont.propTypes = {\n  component: func.isRequired,\n  description: string.isRequired,\n  styling: string.isRequired,\n};\n\nconst Fonts = () => {\n  const heroTitleFontStyling = `Mobile styles:\n  font-size: 48px;\n  line-height: 54px;\n  margin-top: 25px;\n  margin-bottom: 29px;\n\n  Desktop styles:\n  font-size: 90px;\n  line-height: 96px;\n  margin-top: 25px;\n  margin-bottom: 31px;`;\n\n  const h1FontStyling = `Mobile styles:\n  font-size: 30px;\n  line-height: 36px;\n  margin-top: 18px;\n  margin-bottom: 18px;\n\n  Desktop styles:\n  font-size: 48px;\n  line-height: 56px;\n  margin-top: 24px;\n  margin-bottom: 24px;`;\n\n  const h2FontStyling = `Mobile styles:\n  font-size: 24px;\n  line-height: 30px;\n  margin-top: 21px;\n  margin-bottom: 17px;\n\n  Desktop styles:\n  font-size: 24px;\n  line-height: 32px;\n  margin-top: 21px;\n  margin-bottom: 19px;`;\n\n  const h3FontStyling = `Mobile styles:\n  font-size: 20px;\n  line-height: 24px;\n  margin-top: 16px;\n  margin-bottom: 14px;\n\n  Desktop styles:\n  font-size: 20px;\n  line-height: 24px;\n  margin-top: 16px;\n  margin-bottom: 16px;`;\n\n  const h4FontStyling = `Mobile styles:\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n\n  Desktop styles:\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 17px;\n  margin-bottom: 15px;`;\n\n  const h5FontStyling = `Mobile styles:\n  font-size: 14px;\n  line-height: 18px;\n  margin-top: 10px;\n  margin-bottom: 8px;\n\n  Desktop styles:\n  font-size: 14px;\n  line-height: 16px;\n  margin-top: 10px;\n  margin-bottom: 14px;`;\n\n  const h6FontStyling = `Mobile styles:\n  font-size: 12px;\n  line-height: 18px;\n  margin-top: 10px;\n  margin-bottom: 8px;\n\n  Desktop styles:\n  font-size: 12px;\n  line-height: 16px;\n  margin-top: 10px;\n  margin-bottom: 6px;`;\n\n  const bodyFontStyling = `Mobile styles:\n  font-size: 18px;\n  line-height: 24px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n\n  Desktop styles:\n  font-size: 20px;\n  line-height: 32px;\n  margin-top: 16px;\n  margin-bottom: 16px;`;\n\n  const tinyFontStyling = `Mobile styles:\n  font-size: 13px;\n  line-height: 18px;\n  margin-top: 9.5px;\n  margin-bottom: 8.5px;\n\n  Desktop styles:\n  font-size: 13px;\n  line-height: 18px;\n  margin-top: 10.5px;\n  margin-bottom: 13.5px;`;\n\n  const fontsContainerClasses = classNames(css.fontsContainer, css.baselines);\n\n  return (\n    <div className={css.typographyContent}>\n      <p className={css.spacing2x}>\n        The line-height of typographic elements is an multiple of 6px on mobile and multiple of 8px\n        on desktop. In addition to line-height, baselines are adjusted with vertical padding (the\n        sum of those paddings will be 6px on mobile or 8px on desktop). As a result one can position\n        following typographic elements with margins that are also multiples of 6px (or 8px).\n      </p>\n      <p className={css.spacing2x}>\n        N.B. box-sizing is border-box, so borders affect to the total height of elements.\n      </p>\n      <div className={fontsContainerClasses}>\n        <Font\n          component={() => <p className={css.heroTitle}>Hello beautiful world.</p>}\n          description=\"--marketplaceHeroTitleFontStyles: Biggest font style. Used in the hero in landingPage. Works as a site title.\"\n          styling={heroTitleFontStyling}\n        />\n        <Font\n          component={() => <h1>Listing + Page title</h1>}\n          description=\"H1 / --marketplaceH1FontStyles: Works as a page title. Inline component using --marketplaceH1FontStyles can be aligned with .h1Font to the same baseline by dropping it 18px (e.g. with margin-top).\"\n          styling={h1FontStyling}\n        />\n        <Font\n          component={() => <h2>This many listings found in here</h2>}\n          description=\"H2 / --marketplaceH2FontStyles: Works as a page subtitle and in sidebar menu link.\"\n          styling={h2FontStyling}\n        />\n        <Font\n          component={() => <h3>About this listing</h3>}\n          description=\"H3 / --marketplaceH3FontStyles: Works as a paragraph subtitle.\"\n          styling={h3FontStyling}\n        />\n        <Font\n          component={() => <h4>H4 (--marketplaceH4FontStyles): Lorem ipsum dolor sit amet</h4>}\n          description=\"Can be used as a subtitle and also as a label font for form inputs.\"\n          styling={h4FontStyling}\n        />\n        <Font\n          component={() => (\n            <h5>You will only be charged if your request is accepted by the provider.</h5>\n          )}\n          description=\"H5 / --marketplaceH5FontStyles: Can be used as a fine print text.\"\n          styling={h5FontStyling}\n        />\n        <Font\n          component={() => <h6>Close</h6>}\n          description=\"H6 / --marketplaceH6FontStyles: Works as a close text.\"\n          styling={h6FontStyling}\n        />\n        <Font\n          component={() => (\n            <p>\n              Curabitur blandit tempus porttitor. Etiam porta sem malesuada magna mollis euismod.\n              Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis\n              mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec\n              elit.\n            </p>\n          )}\n          description=\"--marketplaceBodyFontStyles, p, button, etc: Paragraphs and other body texts.\"\n          styling={bodyFontStyling}\n        />\n        <Font\n          component={() => <p className={css.tinyFont}>Hosted by user</p>}\n          description=\"--marketplaceTinyFontStyles: Very small print.\"\n          styling={tinyFontStyling}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const Typography = {\n  component: Fonts,\n  props: {},\n  group: 'elements:typography',\n};\n"]},"metadata":{},"sourceType":"module"}