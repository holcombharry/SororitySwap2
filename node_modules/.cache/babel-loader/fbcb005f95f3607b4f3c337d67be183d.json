{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/OrderPanel/OrderPanel.js\";\nimport React from 'react';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { arrayOf, array, bool, func, node, oneOfType, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport config from '../../config';\nimport { intlShape, injectIntl, FormattedMessage } from '../../util/reactIntl';\nimport { propTypes, LISTING_STATE_CLOSED, LINE_ITEM_NIGHT, LINE_ITEM_DAY, LINE_ITEM_UNITS } from '../../util/types';\nimport { formatMoney } from '../../util/currency';\nimport { parse, stringify } from '../../util/urlHelpers';\nimport { userDisplayNameAsString } from '../../util/data';\nimport { ModalInMobile, Button, AvatarSmall } from '../../components';\nimport BookingDatesForm from './BookingDatesForm/BookingDatesForm';\nimport ProductOrderForm from './ProductOrderForm/ProductOrderForm';\nimport css from './OrderPanel.module.css'; // This defines when ModalInMobile shows content as Modal\n\nconst MODAL_BREAKPOINT = 1023;\n\nconst priceData = (price, intl) => {\n  if (price && price.currency === config.currency) {\n    const formattedPrice = formatMoney(intl, price);\n    return {\n      formattedPrice,\n      priceTitle: formattedPrice\n    };\n  } else if (price) {\n    return {\n      formattedPrice: `(${price.currency})`,\n      priceTitle: `Unsupported currency (${price.currency})`\n    };\n  }\n\n  return {};\n};\n\nconst openOrderModal = (isOwnListing, isClosed, history, location) => {\n  if (isOwnListing || isClosed) {\n    window.scrollTo(0, 0);\n  } else {\n    const {\n      pathname,\n      search,\n      state\n    } = location;\n    const searchString = `?${stringify({ ...parse(search),\n      orderOpen: true\n    })}`;\n    history.push(`${pathname}${searchString}`, state);\n  }\n};\n\nconst closeOrderModal = (history, location) => {\n  const {\n    pathname,\n    search,\n    state\n  } = location;\n  const searchParams = omit(parse(search), 'orderOpen');\n  const searchString = `?${stringify(searchParams)}`;\n  history.push(`${pathname}${searchString}`, state);\n};\n\nconst OrderPanel = props => {\n  var _listing$currentStock, _listing$currentStock2, _listing$attributes;\n\n  const {\n    rootClassName,\n    className,\n    titleClassName,\n    listing,\n    isOwnListing,\n    unitType,\n    onSubmit,\n    title,\n    author,\n    onManageDisableScrolling,\n    timeSlots,\n    fetchTimeSlotsError,\n    history,\n    location,\n    intl,\n    onFetchTransactionLineItems,\n    onContactUser,\n    lineItems,\n    fetchLineItemsInProgress,\n    fetchLineItemsError\n  } = props;\n  const isNightly = unitType === LINE_ITEM_NIGHT;\n  const isDaily = unitType === LINE_ITEM_DAY;\n  const isUnits = unitType === LINE_ITEM_UNITS;\n  const shouldHaveBooking = isNightly || isDaily;\n  const price = listing.attributes.price;\n  const hasListingState = !!listing.attributes.state;\n  const isClosed = hasListingState && listing.attributes.state === LISTING_STATE_CLOSED;\n  const showBookingDatesForm = shouldHaveBooking && hasListingState && !isClosed;\n  const showClosedListingHelpText = listing.id && isClosed;\n  const {\n    formattedPrice,\n    priceTitle\n  } = priceData(price, intl);\n  const isOrderOpen = !!parse(location.search).orderOpen; // The listing resource has a relationship: `currentStock`,\n  // which you should include when making API calls.\n\n  const currentStock = (_listing$currentStock = listing.currentStock) === null || _listing$currentStock === void 0 ? void 0 : (_listing$currentStock2 = _listing$currentStock.attributes) === null || _listing$currentStock2 === void 0 ? void 0 : _listing$currentStock2.quantity;\n  const isOutOfStock = config.listingManagementType === 'stock' && currentStock === 0; // Show form only when stock is fully loaded. This avoids \"Out of stock\" UI by\n  // default before all data has been downloaded.\n\n  const showProductOrderForm = config.listingManagementType === 'stock' && typeof currentStock === 'number';\n  const {\n    pickupEnabled,\n    shippingEnabled\n  } = (listing === null || listing === void 0 ? void 0 : (_listing$attributes = listing.attributes) === null || _listing$attributes === void 0 ? void 0 : _listing$attributes.publicData) || {};\n  const subTitleText = showClosedListingHelpText ? intl.formatMessage({\n    id: 'OrderPanel.subTitleClosedListing'\n  }) : null;\n  const unitTranslationKey = isNightly ? 'OrderPanel.perNight' : isDaily ? 'OrderPanel.perDay' : 'OrderPanel.perUnit';\n  const authorDisplayName = userDisplayNameAsString(author, '');\n  const classes = classNames(rootClassName || css.root, className);\n  const titleClasses = classNames(titleClassName || css.orderTitle);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalInMobile, {\n    containerClassName: css.modalContainer,\n    id: \"BookingDatesFormInModal\",\n    isModalOpenOnMobile: isOrderOpen,\n    onClose: () => closeOrderModal(history, location),\n    showAsModalMaxWidth: MODAL_BREAKPOINT,\n    onManageDisableScrolling: onManageDisableScrolling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.modalHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: css.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.orderHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: titleClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, title), subTitleText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: css.orderHelp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 27\n    }\n  }, subTitleText) : null), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, formatMoney(intl, price)), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AvatarSmall, {\n    user: author,\n    className: css.providerAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"OrderPanel.soldBy\",\n    values: {\n      name: authorDisplayName\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  })), showBookingDatesForm ? /*#__PURE__*/React.createElement(BookingDatesForm, {\n    className: css.bookingForm,\n    formId: \"OrderPanelBookingDatesForm\",\n    submitButtonWrapperClassName: css.bookingDatesSubmitButtonWrapper,\n    unitType: unitType,\n    onSubmit: onSubmit,\n    price: price,\n    listingId: listing.id,\n    isOwnListing: isOwnListing,\n    timeSlots: timeSlots,\n    fetchTimeSlotsError: fetchTimeSlotsError,\n    onFetchTransactionLineItems: onFetchTransactionLineItems,\n    lineItems: lineItems,\n    fetchLineItemsInProgress: fetchLineItemsInProgress,\n    fetchLineItemsError: fetchLineItemsError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }) : showProductOrderForm ? /*#__PURE__*/React.createElement(ProductOrderForm, {\n    formId: \"OrderPanelProductOrderForm\",\n    onSubmit: onSubmit,\n    price: price,\n    currentStock: currentStock,\n    pickupEnabled: pickupEnabled,\n    shippingEnabled: shippingEnabled,\n    listingId: listing.id,\n    isOwnListing: isOwnListing,\n    onFetchTransactionLineItems: onFetchTransactionLineItems,\n    onContactUser: onContactUser,\n    lineItems: lineItems,\n    fetchLineItemsInProgress: fetchLineItemsInProgress,\n    fetchLineItemsError: fetchLineItemsError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.openOrderForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.priceContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.priceValue,\n    title: priceTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, formattedPrice), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.perUnit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: unitTranslationKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }))), isClosed ? /*#__PURE__*/React.createElement(\"div\", {\n    className: css.closedListingButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"OrderPanel.closedListingButtonText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    rootClassName: css.orderButton,\n    onClick: () => openOrderModal(isOwnListing, isClosed, history, location),\n    disabled: isOutOfStock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, isOutOfStock ? /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"OrderPanel.ctaButtonMessageNoStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"OrderPanel.ctaButtonMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }))));\n};\n\n_c = OrderPanel;\nOrderPanel.defaultProps = {\n  rootClassName: null,\n  className: null,\n  titleClassName: null,\n  isOwnListing: false,\n  subTitle: null,\n  unitType: config.lineItemUnitType,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n  lineItems: null,\n  fetchLineItemsError: null\n};\nOrderPanel.propTypes = {\n  rootClassName: string,\n  className: string,\n  titleClassName: string,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]),\n  isOwnListing: bool,\n  unitType: propTypes.lineItemUnitType,\n  onSubmit: func.isRequired,\n  title: oneOfType([node, string]).isRequired,\n  subTitle: oneOfType([node, string]),\n  onManageDisableScrolling: func.isRequired,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n  onFetchTransactionLineItems: func.isRequired,\n  onContactUser: func,\n  lineItems: array,\n  fetchLineItemsInProgress: bool.isRequired,\n  fetchLineItemsError: propTypes.error,\n  // from withRouter\n  history: shape({\n    push: func.isRequired\n  }).isRequired,\n  location: shape({\n    search: string\n  }).isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nexport default compose(withRouter, injectIntl)(OrderPanel);\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderPanel\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/OrderPanel/OrderPanel.js"],"names":["React","compose","withRouter","arrayOf","array","bool","func","node","oneOfType","shape","string","classNames","omit","config","intlShape","injectIntl","FormattedMessage","propTypes","LISTING_STATE_CLOSED","LINE_ITEM_NIGHT","LINE_ITEM_DAY","LINE_ITEM_UNITS","formatMoney","parse","stringify","userDisplayNameAsString","ModalInMobile","Button","AvatarSmall","BookingDatesForm","ProductOrderForm","css","MODAL_BREAKPOINT","priceData","price","intl","currency","formattedPrice","priceTitle","openOrderModal","isOwnListing","isClosed","history","location","window","scrollTo","pathname","search","state","searchString","orderOpen","push","closeOrderModal","searchParams","OrderPanel","props","rootClassName","className","titleClassName","listing","unitType","onSubmit","title","author","onManageDisableScrolling","timeSlots","fetchTimeSlotsError","onFetchTransactionLineItems","onContactUser","lineItems","fetchLineItemsInProgress","fetchLineItemsError","isNightly","isDaily","isUnits","shouldHaveBooking","attributes","hasListingState","showBookingDatesForm","showClosedListingHelpText","id","isOrderOpen","currentStock","quantity","isOutOfStock","listingManagementType","showProductOrderForm","pickupEnabled","shippingEnabled","publicData","subTitleText","formatMessage","unitTranslationKey","authorDisplayName","classes","root","titleClasses","orderTitle","modalContainer","modalHeading","orderHeading","orderHelp","providerAvatar","name","bookingForm","bookingDatesSubmitButtonWrapper","openOrderForm","priceContainer","priceValue","perUnit","closedListingButton","orderButton","defaultProps","subTitle","lineItemUnitType","ownListing","isRequired","timeSlot","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { arrayOf, array, bool, func, node, oneOfType, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\nimport config from '../../config';\nimport { intlShape, injectIntl, FormattedMessage } from '../../util/reactIntl';\nimport {\n  propTypes,\n  LISTING_STATE_CLOSED,\n  LINE_ITEM_NIGHT,\n  LINE_ITEM_DAY,\n  LINE_ITEM_UNITS,\n} from '../../util/types';\nimport { formatMoney } from '../../util/currency';\nimport { parse, stringify } from '../../util/urlHelpers';\nimport { userDisplayNameAsString } from '../../util/data';\nimport { ModalInMobile, Button, AvatarSmall } from '../../components';\n\nimport BookingDatesForm from './BookingDatesForm/BookingDatesForm';\nimport ProductOrderForm from './ProductOrderForm/ProductOrderForm';\nimport css from './OrderPanel.module.css';\n\n// This defines when ModalInMobile shows content as Modal\nconst MODAL_BREAKPOINT = 1023;\n\nconst priceData = (price, intl) => {\n  if (price && price.currency === config.currency) {\n    const formattedPrice = formatMoney(intl, price);\n    return { formattedPrice, priceTitle: formattedPrice };\n  } else if (price) {\n    return {\n      formattedPrice: `(${price.currency})`,\n      priceTitle: `Unsupported currency (${price.currency})`,\n    };\n  }\n  return {};\n};\n\nconst openOrderModal = (isOwnListing, isClosed, history, location) => {\n  if (isOwnListing || isClosed) {\n    window.scrollTo(0, 0);\n  } else {\n    const { pathname, search, state } = location;\n    const searchString = `?${stringify({ ...parse(search), orderOpen: true })}`;\n    history.push(`${pathname}${searchString}`, state);\n  }\n};\n\nconst closeOrderModal = (history, location) => {\n  const { pathname, search, state } = location;\n  const searchParams = omit(parse(search), 'orderOpen');\n  const searchString = `?${stringify(searchParams)}`;\n  history.push(`${pathname}${searchString}`, state);\n};\n\nconst OrderPanel = props => {\n  const {\n    rootClassName,\n    className,\n    titleClassName,\n    listing,\n    isOwnListing,\n    unitType,\n    onSubmit,\n    title,\n    author,\n    onManageDisableScrolling,\n    timeSlots,\n    fetchTimeSlotsError,\n    history,\n    location,\n    intl,\n    onFetchTransactionLineItems,\n    onContactUser,\n    lineItems,\n    fetchLineItemsInProgress,\n    fetchLineItemsError,\n  } = props;\n\n  const isNightly = unitType === LINE_ITEM_NIGHT;\n  const isDaily = unitType === LINE_ITEM_DAY;\n  const isUnits = unitType === LINE_ITEM_UNITS;\n  const shouldHaveBooking = isNightly || isDaily;\n\n  const price = listing.attributes.price;\n  const hasListingState = !!listing.attributes.state;\n  const isClosed = hasListingState && listing.attributes.state === LISTING_STATE_CLOSED;\n  const showBookingDatesForm = shouldHaveBooking && hasListingState && !isClosed;\n  const showClosedListingHelpText = listing.id && isClosed;\n  const { formattedPrice, priceTitle } = priceData(price, intl);\n  const isOrderOpen = !!parse(location.search).orderOpen;\n\n  // The listing resource has a relationship: `currentStock`,\n  // which you should include when making API calls.\n  const currentStock = listing.currentStock?.attributes?.quantity;\n  const isOutOfStock = config.listingManagementType === 'stock' && currentStock === 0;\n\n  // Show form only when stock is fully loaded. This avoids \"Out of stock\" UI by\n  // default before all data has been downloaded.\n  const showProductOrderForm =\n    config.listingManagementType === 'stock' && typeof currentStock === 'number';\n\n  const { pickupEnabled, shippingEnabled } = listing?.attributes?.publicData || {};\n\n  const subTitleText = showClosedListingHelpText\n    ? intl.formatMessage({ id: 'OrderPanel.subTitleClosedListing' })\n    : null;\n\n  const unitTranslationKey = isNightly\n    ? 'OrderPanel.perNight'\n    : isDaily\n    ? 'OrderPanel.perDay'\n    : 'OrderPanel.perUnit';\n\n  const authorDisplayName = userDisplayNameAsString(author, '');\n\n  const classes = classNames(rootClassName || css.root, className);\n  const titleClasses = classNames(titleClassName || css.orderTitle);\n\n  return (\n    <div className={classes}>\n      <ModalInMobile\n        containerClassName={css.modalContainer}\n        id=\"BookingDatesFormInModal\"\n        isModalOpenOnMobile={isOrderOpen}\n        onClose={() => closeOrderModal(history, location)}\n        showAsModalMaxWidth={MODAL_BREAKPOINT}\n        onManageDisableScrolling={onManageDisableScrolling}\n      >\n        <div className={css.modalHeading}>\n          <h1 className={css.title}>{title}</h1>\n        </div>\n\n        <div className={css.orderHeading}>\n          <h2 className={titleClasses}>{title}</h2>\n          {subTitleText ? <div className={css.orderHelp}>{subTitleText}</div> : null}\n        </div>\n        <p className={css.price}>{formatMoney(intl, price)}</p>\n        <div className={css.author}>\n          <AvatarSmall user={author} className={css.providerAvatar} />\n          <FormattedMessage id=\"OrderPanel.soldBy\" values={{ name: authorDisplayName }} />\n        </div>\n\n        {showBookingDatesForm ? (\n          <BookingDatesForm\n            className={css.bookingForm}\n            formId=\"OrderPanelBookingDatesForm\"\n            submitButtonWrapperClassName={css.bookingDatesSubmitButtonWrapper}\n            unitType={unitType}\n            onSubmit={onSubmit}\n            price={price}\n            listingId={listing.id}\n            isOwnListing={isOwnListing}\n            timeSlots={timeSlots}\n            fetchTimeSlotsError={fetchTimeSlotsError}\n            onFetchTransactionLineItems={onFetchTransactionLineItems}\n            lineItems={lineItems}\n            fetchLineItemsInProgress={fetchLineItemsInProgress}\n            fetchLineItemsError={fetchLineItemsError}\n          />\n        ) : showProductOrderForm ? (\n          <ProductOrderForm\n            formId=\"OrderPanelProductOrderForm\"\n            onSubmit={onSubmit}\n            price={price}\n            currentStock={currentStock}\n            pickupEnabled={pickupEnabled}\n            shippingEnabled={shippingEnabled}\n            listingId={listing.id}\n            isOwnListing={isOwnListing}\n            onFetchTransactionLineItems={onFetchTransactionLineItems}\n            onContactUser={onContactUser}\n            lineItems={lineItems}\n            fetchLineItemsInProgress={fetchLineItemsInProgress}\n            fetchLineItemsError={fetchLineItemsError}\n          />\n        ) : null}\n      </ModalInMobile>\n      <div className={css.openOrderForm}>\n        <div className={css.priceContainer}>\n          <div className={css.priceValue} title={priceTitle}>\n            {formattedPrice}\n          </div>\n          <div className={css.perUnit}>\n            <FormattedMessage id={unitTranslationKey} />\n          </div>\n        </div>\n\n        {isClosed ? (\n          <div className={css.closedListingButton}>\n            <FormattedMessage id=\"OrderPanel.closedListingButtonText\" />\n          </div>\n        ) : (\n          <Button\n            rootClassName={css.orderButton}\n            onClick={() => openOrderModal(isOwnListing, isClosed, history, location)}\n            disabled={isOutOfStock}\n          >\n            {isOutOfStock ? (\n              <FormattedMessage id=\"OrderPanel.ctaButtonMessageNoStock\" />\n            ) : (\n              <FormattedMessage id=\"OrderPanel.ctaButtonMessage\" />\n            )}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nOrderPanel.defaultProps = {\n  rootClassName: null,\n  className: null,\n  titleClassName: null,\n  isOwnListing: false,\n  subTitle: null,\n  unitType: config.lineItemUnitType,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n  lineItems: null,\n  fetchLineItemsError: null,\n};\n\nOrderPanel.propTypes = {\n  rootClassName: string,\n  className: string,\n  titleClassName: string,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]),\n  isOwnListing: bool,\n  unitType: propTypes.lineItemUnitType,\n  onSubmit: func.isRequired,\n  title: oneOfType([node, string]).isRequired,\n  subTitle: oneOfType([node, string]),\n  onManageDisableScrolling: func.isRequired,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n  onFetchTransactionLineItems: func.isRequired,\n  onContactUser: func,\n  lineItems: array,\n  fetchLineItemsInProgress: bool.isRequired,\n  fetchLineItemsError: propTypes.error,\n\n  // from withRouter\n  history: shape({\n    push: func.isRequired,\n  }).isRequired,\n  location: shape({\n    search: string,\n  }).isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nexport default compose(\n  withRouter,\n  injectIntl\n)(OrderPanel);\n"]},"metadata":{},"sourceType":"module"}