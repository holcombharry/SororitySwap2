{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/NamedLink/NamedLink.js\";\n\n/**\n * This component wraps React-Router's Link by providing name-based routing.\n *\n * The `name` prop should match a route in the flattened\n * routeConfiguration passed in context by the RoutesProvider\n * component. The `params` props is the route params for the route\n * path of the given route name.\n *\n * The `to` prop is an object with the same shape as Link requires,\n * but without `pathname` that will be generated from the given route\n * name.\n *\n * Some additional props can be passed for the <a> element like\n * `className` and `style`.\n *\n * The component can also be given the `activeClassName` prop that\n * will be added to the element className if the current URL matches\n * the one in the generated pathname of the link.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport routeConfiguration from '../../routing/routeConfiguration';\nimport { pathByRouteName, findRouteByRouteName } from '../../util/routes';\nexport const NamedLinkComponent = props => {\n  const {\n    name,\n    params,\n    title\n  } = props;\n  const routes = routeConfiguration();\n\n  const onOver = () => {\n    const {\n      component: Page\n    } = findRouteByRouteName(name, routes); // Loadable Component has a \"preload\" function.\n\n    if (Page.preload) {\n      Page.preload();\n    }\n  }; // Link props\n\n\n  const {\n    to,\n    children\n  } = props;\n  const pathname = pathByRouteName(name, routes, params);\n  const {\n    match\n  } = props;\n  const active = match.url && match.url === pathname; // <a> element props\n\n  const {\n    className,\n    style,\n    activeClassName\n  } = props;\n  const aElemProps = {\n    className: classNames(className, {\n      [activeClassName]: active\n    }),\n    style,\n    title\n  };\n  return /*#__PURE__*/React.createElement(Link, Object.assign({\n    onMouseOver: onOver,\n    onTouchStart: onOver,\n    to: {\n      pathname,\n      ...to\n    }\n  }, aElemProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), children);\n};\n_c = NamedLinkComponent;\nconst {\n  object,\n  string,\n  shape,\n  any\n} = PropTypes;\nNamedLinkComponent.defaultProps = {\n  params: {},\n  to: {},\n  children: null,\n  className: '',\n  style: {},\n  activeClassName: 'NamedLink_active',\n  title: null,\n  match: {}\n}; // This ensures a nice display name in snapshots etc.\n\nNamedLinkComponent.displayName = 'NamedLink';\nNamedLinkComponent.propTypes = {\n  // name of the route in routeConfiguration\n  name: string.isRequired,\n  // params object for the named route\n  params: object,\n  // Link component props\n  to: shape({\n    search: string,\n    hash: string,\n    state: object\n  }),\n  children: any,\n  // generic props for the underlying <a> element\n  className: string,\n  style: object,\n  activeClassName: string,\n  title: string,\n  // from withRouter\n  match: object\n};\nconst NamedLink = withRouter(NamedLinkComponent);\n_c2 = NamedLink;\nNamedLink.displayName = 'NamedLink';\nexport default NamedLink;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NamedLinkComponent\");\n$RefreshReg$(_c2, \"NamedLink\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/NamedLink/NamedLink.js"],"names":["React","PropTypes","Link","withRouter","classNames","routeConfiguration","pathByRouteName","findRouteByRouteName","NamedLinkComponent","props","name","params","title","routes","onOver","component","Page","preload","to","children","pathname","match","active","url","className","style","activeClassName","aElemProps","object","string","shape","any","defaultProps","displayName","propTypes","isRequired","search","hash","state","NamedLink"],"mappings":"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","sourcesContent":["/**\n * This component wraps React-Router's Link by providing name-based routing.\n *\n * The `name` prop should match a route in the flattened\n * routeConfiguration passed in context by the RoutesProvider\n * component. The `params` props is the route params for the route\n * path of the given route name.\n *\n * The `to` prop is an object with the same shape as Link requires,\n * but without `pathname` that will be generated from the given route\n * name.\n *\n * Some additional props can be passed for the <a> element like\n * `className` and `style`.\n *\n * The component can also be given the `activeClassName` prop that\n * will be added to the element className if the current URL matches\n * the one in the generated pathname of the link.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport routeConfiguration from '../../routing/routeConfiguration';\nimport { pathByRouteName, findRouteByRouteName } from '../../util/routes';\n\nexport const NamedLinkComponent = props => {\n  const { name, params, title } = props;\n  const routes = routeConfiguration();\n\n  const onOver = () => {\n    const { component: Page } = findRouteByRouteName(name, routes);\n    // Loadable Component has a \"preload\" function.\n    if (Page.preload) {\n      Page.preload();\n    }\n  };\n\n  // Link props\n  const { to, children } = props;\n  const pathname = pathByRouteName(name, routes, params);\n  const { match } = props;\n  const active = match.url && match.url === pathname;\n\n  // <a> element props\n  const { className, style, activeClassName } = props;\n  const aElemProps = {\n    className: classNames(className, { [activeClassName]: active }),\n    style,\n    title,\n  };\n\n  return (\n    <Link onMouseOver={onOver} onTouchStart={onOver} to={{ pathname, ...to }} {...aElemProps}>\n      {children}\n    </Link>\n  );\n};\n\nconst { object, string, shape, any } = PropTypes;\n\nNamedLinkComponent.defaultProps = {\n  params: {},\n  to: {},\n  children: null,\n  className: '',\n  style: {},\n  activeClassName: 'NamedLink_active',\n  title: null,\n  match: {},\n};\n\n// This ensures a nice display name in snapshots etc.\nNamedLinkComponent.displayName = 'NamedLink';\n\nNamedLinkComponent.propTypes = {\n  // name of the route in routeConfiguration\n  name: string.isRequired,\n  // params object for the named route\n  params: object,\n  // Link component props\n  to: shape({ search: string, hash: string, state: object }),\n  children: any,\n\n  // generic props for the underlying <a> element\n  className: string,\n  style: object,\n  activeClassName: string,\n  title: string,\n\n  // from withRouter\n  match: object,\n};\n\nconst NamedLink = withRouter(NamedLinkComponent);\nNamedLink.displayName = 'NamedLink';\n\nexport default NamedLink;\n"]},"metadata":{},"sourceType":"module"}