{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/routing/LoadableComponentErrorBoundary/LoadableComponentErrorBoundary.js\";\nimport React, { Component } from 'react';\nimport config from '../../config';\nimport { LoadableComponentErrorBoundaryPage } from './LoadableComponentErrorBoundaryPage'; // Use ErrorBoyndary to catch ChunkLoadError\n// https://reactjs.org/docs/error-boundaries.html\n\nclass LoadableComponentErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      error\n    };\n  }\n\n  render() {\n    if (this.state.error && this.state.error.name === 'ChunkLoadError') {\n      return /*#__PURE__*/React.createElement(LoadableComponentErrorBoundaryPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return this.props.children;\n  }\n\n} // LoadableComponentErrorBoundary helps in situations\n// where production build changes in the server and\n// long-living client app tries to fetch code chunks that don't exist anymore.\n// Note: in development mode with Hot Module Reloading (HMR) in use, this causes error loops.\n\n\nconst UseLoadableErrorBoundaryOnlyInProdutionMode = props => {\n  const {\n    children\n  } = props;\n  return config.dev ? children : /*#__PURE__*/React.createElement(LoadableComponentErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_c = UseLoadableErrorBoundaryOnlyInProdutionMode;\nexport default UseLoadableErrorBoundaryOnlyInProdutionMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseLoadableErrorBoundaryOnlyInProdutionMode\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/routing/LoadableComponentErrorBoundary/LoadableComponentErrorBoundary.js"],"names":["React","Component","config","LoadableComponentErrorBoundaryPage","LoadableComponentErrorBoundary","constructor","props","state","error","getDerivedStateFromError","render","name","children","UseLoadableErrorBoundaryOnlyInProdutionMode","dev"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,kCAAT,QAAmD,sCAAnD,C,CAEA;AACA;;AACA,MAAMC,8BAAN,SAA6CH,SAA7C,CAAuD;AACrDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACD;;AAED,SAAOC,wBAAP,CAAgCD,KAAhC,EAAuC;AACrC;AACA,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKH,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBG,IAAjB,KAA0B,gBAAlD,EAAoE;AAClE,0BAAO,oBAAC,kCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAO,KAAKL,KAAL,CAAWM,QAAlB;AACD;;AAjBoD,C,CAoBvD;AACA;AACA;AACA;;;AACA,MAAMC,2CAA2C,GAAGP,KAAK,IAAI;AAC3D,QAAM;AAAEM,IAAAA;AAAF,MAAeN,KAArB;AACA,SAAOJ,MAAM,CAACY,GAAP,GACLF,QADK,gBAGL,oBAAC,8BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,QAAjC,CAHF;AAKD,CAPD;;KAAMC,2C;AAQN,eAAeA,2CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport config from '../../config';\n\nimport { LoadableComponentErrorBoundaryPage } from './LoadableComponentErrorBoundaryPage';\n\n// Use ErrorBoyndary to catch ChunkLoadError\n// https://reactjs.org/docs/error-boundaries.html\nclass LoadableComponentErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  render() {\n    if (this.state.error && this.state.error.name === 'ChunkLoadError') {\n      return <LoadableComponentErrorBoundaryPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\n// LoadableComponentErrorBoundary helps in situations\n// where production build changes in the server and\n// long-living client app tries to fetch code chunks that don't exist anymore.\n// Note: in development mode with Hot Module Reloading (HMR) in use, this causes error loops.\nconst UseLoadableErrorBoundaryOnlyInProdutionMode = props => {\n  const { children } = props;\n  return config.dev ? (\n    children\n  ) : (\n    <LoadableComponentErrorBoundary>{children}</LoadableComponentErrorBoundary>\n  );\n};\nexport default UseLoadableErrorBoundaryOnlyInProdutionMode;\n"]},"metadata":{},"sourceType":"module"}