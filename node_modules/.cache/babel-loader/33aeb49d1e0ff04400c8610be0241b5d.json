{"ast":null,"code":"var _jsxFileName = \"/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/LayoutSideNavigation/LayoutSideNavigation.js\";\n\n/**\n * LayoutSideNavigation needs to have 3-4 children:\n * LayoutWrapperTopbar, LayoutWrapperSideNav, LayoutWrapperMain, and possibly LayoutWrapperFooter.\n * SideNavWrapper will be shown aside on Desktop layout and\n * as a sub bar under Topbar on mobile screens.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { LayoutWrapperTopbar, LayoutWrapperSideNav, LayoutWrapperAccountSettingsSideNav, LayoutWrapperMain, LayoutWrapperFooter } from '../../components';\nimport css from './LayoutSideNavigation.module.css';\n\nconst prepareChildren = children => {\n  const childrenCount = React.Children.count(children);\n\n  if (!(childrenCount === 3 || childrenCount === 4)) {\n    throw new Error(`Menu needs to have 3 - 4 children:\n      LayoutWrapperTopbar, LayoutWrapperSideNav, and LayoutWrapperMain,\n      and optionally LayoutWrapperFooter.`);\n  }\n\n  const childrenMap = {};\n  React.Children.forEach(children, child => {\n    if (child.type === LayoutWrapperTopbar) {\n      childrenMap.layoutWrapperTopbar = child;\n    } else if ([LayoutWrapperSideNav, LayoutWrapperAccountSettingsSideNav].includes(child.type)) {\n      childrenMap.layoutWrapperSideNav = child;\n    } else if (child.type === LayoutWrapperMain) {\n      // LayoutWrapperMain needs different rootClassName\n      const childWithAddedCSS = /*#__PURE__*/React.cloneElement(child, {\n        rootClassName: css.layoutWrapperMain\n      });\n      childrenMap.layoutWrapperMain = childWithAddedCSS;\n    } else if (child.type === LayoutWrapperFooter) {\n      childrenMap.layoutWrapperFooter = child;\n    } else {\n      throw new Error(`LayoutSideNavigation has an unknown child.\n      Only LayoutWrapperTopbar, LayoutWrapperSideNav, LayoutWrapperMain, LayoutWrapperFooter are allowed.`);\n    }\n  });\n  return childrenMap;\n};\n\nconst LayoutSideNavigation = props => {\n  const {\n    className,\n    rootClassName,\n    containerClassName,\n    children\n  } = props;\n  const preparedChildren = prepareChildren(children);\n  const classes = classNames(rootClassName || css.root, className);\n  const containerClasses = containerClassName || css.container;\n  const maybeFooter = preparedChildren.layoutWrapperFooter || null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, preparedChildren.layoutWrapperTopbar, /*#__PURE__*/React.createElement(\"div\", {\n    className: containerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, preparedChildren.layoutWrapperSideNav, preparedChildren.layoutWrapperMain), maybeFooter);\n};\n\n_c = LayoutSideNavigation;\nLayoutSideNavigation.defaultProps = {\n  className: null,\n  rootClassName: null,\n  containerClassName: null\n};\nconst {\n  node,\n  string\n} = PropTypes;\nLayoutSideNavigation.propTypes = {\n  children: node.isRequired,\n  className: string,\n  rootClassName: string,\n  containerClassName: string\n};\nexport default LayoutSideNavigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutSideNavigation\");","map":{"version":3,"sources":["/Users/harryholcomb/Desktop/React Native/GitHub/Sharetribe/ftw-product/src/components/LayoutSideNavigation/LayoutSideNavigation.js"],"names":["React","PropTypes","classNames","LayoutWrapperTopbar","LayoutWrapperSideNav","LayoutWrapperAccountSettingsSideNav","LayoutWrapperMain","LayoutWrapperFooter","css","prepareChildren","children","childrenCount","Children","count","Error","childrenMap","forEach","child","type","layoutWrapperTopbar","includes","layoutWrapperSideNav","childWithAddedCSS","cloneElement","rootClassName","layoutWrapperMain","layoutWrapperFooter","LayoutSideNavigation","props","className","containerClassName","preparedChildren","classes","root","containerClasses","container","maybeFooter","defaultProps","node","string","propTypes","isRequired"],"mappings":"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","sourcesContent":["/**\n * LayoutSideNavigation needs to have 3-4 children:\n * LayoutWrapperTopbar, LayoutWrapperSideNav, LayoutWrapperMain, and possibly LayoutWrapperFooter.\n * SideNavWrapper will be shown aside on Desktop layout and\n * as a sub bar under Topbar on mobile screens.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {\n  LayoutWrapperTopbar,\n  LayoutWrapperSideNav,\n  LayoutWrapperAccountSettingsSideNav,\n  LayoutWrapperMain,\n  LayoutWrapperFooter,\n} from '../../components';\n\nimport css from './LayoutSideNavigation.module.css';\n\nconst prepareChildren = children => {\n  const childrenCount = React.Children.count(children);\n  if (!(childrenCount === 3 || childrenCount === 4)) {\n    throw new Error(\n      `Menu needs to have 3 - 4 children:\n      LayoutWrapperTopbar, LayoutWrapperSideNav, and LayoutWrapperMain,\n      and optionally LayoutWrapperFooter.`\n    );\n  }\n\n  const childrenMap = {};\n\n  React.Children.forEach(children, child => {\n    if (child.type === LayoutWrapperTopbar) {\n      childrenMap.layoutWrapperTopbar = child;\n    } else if ([LayoutWrapperSideNav, LayoutWrapperAccountSettingsSideNav].includes(child.type)) {\n      childrenMap.layoutWrapperSideNav = child;\n    } else if (child.type === LayoutWrapperMain) {\n      // LayoutWrapperMain needs different rootClassName\n      const childWithAddedCSS = React.cloneElement(child, {\n        rootClassName: css.layoutWrapperMain,\n      });\n      childrenMap.layoutWrapperMain = childWithAddedCSS;\n    } else if (child.type === LayoutWrapperFooter) {\n      childrenMap.layoutWrapperFooter = child;\n    } else {\n      throw new Error(\n        `LayoutSideNavigation has an unknown child.\n      Only LayoutWrapperTopbar, LayoutWrapperSideNav, LayoutWrapperMain, LayoutWrapperFooter are allowed.`\n      );\n    }\n  });\n  return childrenMap;\n};\n\nconst LayoutSideNavigation = props => {\n  const { className, rootClassName, containerClassName, children } = props;\n\n  const preparedChildren = prepareChildren(children);\n  const classes = classNames(rootClassName || css.root, className);\n  const containerClasses = containerClassName || css.container;\n\n  const maybeFooter = preparedChildren.layoutWrapperFooter || null;\n\n  return (\n    <div className={classes}>\n      {preparedChildren.layoutWrapperTopbar}\n      <div className={containerClasses}>\n        {preparedChildren.layoutWrapperSideNav}\n        {preparedChildren.layoutWrapperMain}\n      </div>\n      {maybeFooter}\n    </div>\n  );\n};\n\nLayoutSideNavigation.defaultProps = {\n  className: null,\n  rootClassName: null,\n  containerClassName: null,\n};\n\nconst { node, string } = PropTypes;\n\nLayoutSideNavigation.propTypes = {\n  children: node.isRequired,\n  className: string,\n  rootClassName: string,\n  containerClassName: string,\n};\n\nexport default LayoutSideNavigation;\n"]},"metadata":{},"sourceType":"module"}